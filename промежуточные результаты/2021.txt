СТАТЬЯ
Аннотация
. Разработаны программные модули для автоматического 
построения электрических схем входного и выходного блоков нейропроцессора 
для последующего численного моделирования в программе MDC-SPICE. 
Представлены описания программных модулей, их входных и выходных данных, 
а также информация об используемых библиотеках. Предложенные программные 
модули ускоряют процесс создания электрических схем входного и выходного блоков 
для их последующего моделирования в MDC-SPICE с учетом специфических 
физических процессов, протекающих в мемристорах. 
 
Ключевые слова: программный модуль, автоматическое построение 
электрических схем, язык python. 
 
Введение  
Под 
нейропроцессором 
подразумевается 
аппаратное 
средство, 
предназначенное для решения нейросетевых задач. В качестве ключевых узлов 
аппаратной части нейропроцессора на основе мемристоно-диодного кросбара 
разработаны 
сверхбольшие 
запоминающая 
матрица 
с 
ячейками 
из 
комплементарных мемристоров 1D2M [1] и логическая матрица c ячейками 
1D1M [2]. Первая матрица, представляющая собой массив синапсов, и вторая 
матрица задают вес и маршрут связи между нейронами соответственно.  
Поскольку нейропроцессор является аппаратной реализацией импульсной 
нейросети, необходимо преобразовать поступающую информацию из набора 
чисел в импульсы. Кроме импульсного кодирования [3] входной блок 
12 
предварительно осуществляет сжатие входной информации путем дискретного 
косинусного преобразования [4], выполняемого с помощью логической матрицы 
на основе мемристорно-диодного кроссбара.  
В [3] представлена специализированная программа MDC-SPICE [5] для 
расчета больших электрических схем, содержащих мемристорно-диодные 
кроссбары. С помощью моделирования в разработанной программе показана 
работоспособность кодирующего устройства во входном блоке нейропроцессора в 
режиме одновременного кодирования популяцией нейронов пространственной 
производной входного числа (яркости пикселей) в частоту и значения входного числа 
и его производной по времени в задержки импульсов. 
Выходной 
блок 
нейропроцессора 
также 
построен 
с 
помощью 
унифицированной логической матрицы на основе комбинированного мемристорно-
диодного кроссбара и производит декодирование импульсов, поступающих из 
аппаратной нейронной сети, в двоичный код [6]. 
Целью настоящей работы является создание программ, производящих 
автоматическое построение электрических схем входного и выходного устройств 
на языке SPICE для последующего расчета в MDC-SPICE. Программы 
составлены на языке программирования Python версии 3. 
 
Программный модуль для автоматического построения электрической 
схемы входного блока нейропроцессора 
Входной блок состоит из сжимающего и кодирующего устройств, 
предназначенных для обработки поступающей видео- и аудиоинформации и ее 
преобразования в импульсы. Сжимающее устройство выполняет дискретное 
косинусное преобразование и отбрасывает малые амплитуды выходного образа. 
Его электрическая схема состоит из двух последовательных логических схем в 
виде совершенных дизъюнктивных нормальных форм (СДНФ), построенных на 
основе мемристорно-диодных кроссбаров. Кодирующее устройство содержит 
одну СДНФ, в которой на подтягивающие резисторы в матрице конъюнкций 
подается не постоянный уровень напряжения, а импульсы с линий задержек. 
13 
Входными данными для программы являются: число входных двоичных 
переменных и их разрядность, число виртуальных выходных нейронов и их 
настроечные кривые, индексы моделей мемристора, диода и транзисторов, а 
также параметры моделей. Программа состоит из обработчика входных данных, 
подпрограммы синтеза электрической схемы и подпрограммы формирования 
выходного текстового файла. Синтез электрической схемы выполняется 
программой 
на 
нескольких 
уровнях 
абстракции: 
сначала 
собираются 
элементарные цепи мемристор-диод, затем массивы этих цепей – кроссбары и 
затем кроссбары объединяются в СДНФ. Результатом работы программы 
является текстовый файл, содержащий описание электрической схемы входного 
блока с использование стандартного SPICE синтаксиса. 
Для проверки работоспособности программы выполнено формирование 
электрической схемы сжимающего устройства, выполняющего дискретное 
косинусное преобразование. На рис. 1 показан процесс скалярного умножения 
матрицы чисел размером 3х3 на входной вектор из трех компонент, 
представленных двоичными числами. 
 
Рис. 1. Топология электрической схемы и результат моделирования косинусного 
преобразования в сжимающем устройстве входного блока 
Как следует из правой диаграммы на рис.1, выходной вектор соответствует 
ожидаемому результату, вычисленному по правилу матрично-векторного 
умножения. Схема является комбинационной и выполняет умножение матрицы 
на вектор за один такт. 
14 
Программный модуль для автоматического построения электрической 
схемы выходного блока 
Выходной блок нейропроцессора с помощью логической матрицы на основе 
комбинированного мемристорно-диодного кроссбара производит декодирование 
импульсов, поступающих из аппаратной нейронной сети, в двоичный код. В 
выходном блоке объединены 
временной 
и 
пространственный 
способы 
модификации информации. Преобразование выходных импульсов от одного 
нейрона является модификацией во времени, а маршрутизация импульсов от 
популяции нейронов – модификацией в пространстве. 
Программный модуль для автоматического построения электрической схемы 
выходного блока также содержит три подпрограммы и отличается от программы 
построения входного блока другим набором входных данных и, соответственно, 
обработчиком входных данных и подпрограммой синтеза электрической схемы. 
В качестве тестового примера построен выходной блок, выполняющий с 
помощью логической матрицы (рис. 2) декодирование импульсов от нейронов в 
двоичный код с пространственно-временным преобразованием.  
 
Рис. 2. Электрическая схема модификации двухразрядного числа с помощью  
двух слоев логической матрицы и результаты ее SPICE моделирования 
 
Согласно диаграмме сигналов на рис. 2, входная информация в 
пространственно-временном формате подается в виде двух импульсов, что 
соответствует восьмеричному числу 338 (соответствует 2710). После симуляции 
импульсы выходного числа остаются разделенными по времени с разрядом  
15 
нового значения, равным 358 (соответствует 2910). Выходные данные 
представляют собой двухразрядное восьмеричное число. 
Таким 
образом 
в 
выходном 
блоке 
нейропроцессора 
реализовано 
декодирование импульсов от нейронов с возможностью их пространственно-
временного преобразования, которое является основой алгоритма сжатия. 
Информация в сжатом виде выводится из схемы нейропроцессора с помощью 
минимального количества выходных электрических линий. 
Заключение 
Разработаны программные модули для автоматического построения 
электрической схемы входного и выходного блоков нейропроцессора [2]. 
Представлены описания программных модулей, их входных и выходных данных, 
а также информация об используемых библиотеках. 
Для 
проверки 
работоспособности 
первой 
программы 
выполнено 
формирование электрической схемы сжимающего устройства, выполняющего 
дискретное косинусное преобразование во входном блоке нейропроцессора.   В 
качестве тестового примера работы второй программы построен выходной блок, 
выполняющий с помощью логической матрицы пространственно-временное 
преобразование импульсов, поступающих от нейронов, в двоичный код. 
Предложенные 
программные 
модули 
ускоряют 
процесс 
создания 
электрических схем входного и выходного блоков для их последующего 
моделирования в MDC-SPICE с учетом специфических физических процессов, 
протекающих в мемристорах. 
Работа выполнена при финансовой поддержке РФФИ в рамках гранта №20-
37-90003 “Моделирование физических процессов в мемристорно-диодных 
кроссбарах входного и выходного блоков нейропроцессора”. 
 СТАТЬЯ
Аннотация
. В данной статье представлена реализация алгоритма для 
корректировки 
данных 
GPS/Глонасс, 
поступающих 
с 
навигационного 
оборудования, 
установленного 
в 
маршрутном 
транспорте. 
Полученные 
скорректированные данные будут использоваться для фиксации отклонений от 
запланированной схемы движения и графика маршрутного транспорта. 
Ключевые слова: дорожный граф, GPS/Глонасс-трек, схема маршрута. 
Введение 
Одной из функций информационной системы РНИС “Автовокзал” 
является контроль за движением по схеме и графику маршрутного транспорта. 
Для 
фиксации 
отклонений 
от 
схемы 
необходимо 
представить 
GPS/Глонасс-трек транспортного средства и схему маршрута как наборы ребер 
дорожного графа, разница которых и будет является отклонениями от схемы 
маршрута. 
Для каждой точки трека требуется получить проекцию на геометрию ребра 
дорожного графа, представляющего из себя ломаную линию, и вычислить  к 
какому из ребер относится полученная проекция. 
Фактический пробег транспорта в рамках схемы маршрута в соответствии 
с запланированным графиком считается как сумма длины линии пройденных 
ребер, за исключением ребер, не входящих в схему маршрута, в каждом рейсе 
графика. 
Для получения GPS/Глонасс-трека автомобильного транспорта в виде 
набора связанных ребер дорожного графа был реализован алгоритм 
корректировки данных трека.  
18 
Описание исходных данных 
В качестве дорожного графа используется база данных Corrector, 
созданная на основе данных OpenStreetMap (OSM). Дорожный граф является 
ориентированным графом, вершины которого представлены строками в таблице 
“road_segments”, а ребра графа в столбце “related” каждой строки. В таблице 1 
представлено описание полей вершины дорожного графа. 
Таблица 1. Описание полей таблицы “roads_segments” 
Имя 
Тип 
Описание 
id 
bigint 
Идентификатор вершины 
highway 
varchar(255) 
Тип дороги 
distance 
double precision 
Протяженность геометрии в км 
osm_id 
bigint 
Идентификатор OSM  
oneway 
smallint 
Одностороннее движение (0 или 1) 
related 
bigint[] 
Массив идентификаторов вершин, с которыми 
вершина имеет связь 
geometry 
geometry 
Геометрия вершины в формате Well-known 
binary [2] 
azimuths 
double precision[] 
Направления 
сегмента 
в 
разных 
точках 
геометрии 
reverses 
double precision[] 
Обратные направления сегмента в разных 
точках геометрии 
 
Навигационные данные о движении транспорта РНИС “Автовокзал” 
хранятся в базе данных Reсeiver, в таблице “marks”, основные поля которой 
приведены в таблице 2.  
Треком называется выборка из таблицы “marks” по уникальному 
идентификатору навигационного прибора и временному промежутку. 
 
 
19 
Таблица 2. Описание таблицы “marks” 
Имя 
Тип 
Описание 
id 
bigint 
Идентификатор отметки 
datetime 
timestamp 
with 
time zone 
Дата и время формирования отметки 
device_id 
integer 
Идентификатор навигационного прибора
latitude 
double precision 
Широта 
longitude 
double precision 
Долгота 
received_time 
timestamp 
with 
time zone 
Время доставки отметки на сервер 
satcount 
smallint 
Количество 
спутников, 
с 
помощью 
которых формировалась отметка 
speed 
numeric(7,2) 
Скорость движения 
hdop 
integer 
Снижение точности в горизонтальной 
плоскости 
 
Каждый элемент трека, помимо информации о местоположении, содержит 
в себе характеристики, позволяющие оценить качество позиционирования, такие 
как скорость движения, количество спутников, относительно которых 
происходит позиционирование, и качественный показатель HDOP (Horizontal 
Dilution of Precision). 
HDOP – показатель снижения точности в горизонтальной плоскости. Чем 
меньше значение данного показателя, тем выше точность позиционирования. 
HDOP оценочный показатель, поэтому его нельзя перевести в физические 
величины, такие как, например, метры. 
Опираясь 
на 
результаты 
исследования, 
приведенные 
в 
статье  
Stopher P.R. [1], можно использовать соответствия показателя HDOP и радиуса 
возможного отклонения от фактического местоположения, представленные  
в таблице 3. 
20 
Таблица 3. Зависимость отклонения от значения HDOP 
Показатель HDOP 
Радиус отклонения, м
1-3 
менее 5 
3-5 
от 5 до 10 
5-10 
от 10 до 100 
10 и более 
более 100 
 
На основе этих данных отметки с показания HDOP более 10 не следует 
учитывать в процессе коррекции трека. 
Алгоритм привязки GPS-данных к дорожному графу 
При разработке приложения была использована оценочная формула для 
инкрементального алгоритма привязки данных на основе оценки расстояния (ܵௗ) 
и направления (ܵఈ) [2]. 
1. Составляющая ܵௗ учитывает взвешенное расстояние от точки трека до 
ребра: 
ܵௗ(݌, ܿ) = ߤௗ − ߙ∗݀(݌, ܿ)௡೏  , 
где ݀(݌, ܿ) – расстояние от точки ݌ до ребра ܿ { ݀(݌, ܿ) > 0 },  
ߤௗ, ݊ௗ, ܽ – эмпирические константы { ߤௗ> 0, 0 ≤ܽ≤360°, ݊ௗ> 0 }  
На рисунке 1 представлен график функции ܵௗ для различных значений 
констант (ߤௗ,݊ௗ, ߙ). При увеличении значения расстояния ݀ от точки трека до 
линии ребра оценка ܵௗ уменьшается. Параметр ݊ௗ влияет на чувствительность 
функции к изменениям значения ݀ (݊ௗ= 1 – линейная зависимость, ݊ௗ= 2 – 
квадратичная). 
21 
 
Рис. 1. График функции составляющей ܵௗ  
 
2. Составляющая ܵఈ учитывает угол между направлением линии ребра и 
направлением вектора, соединяющего соседние точки трека: 
ܵఈ(݌, ܿ) = ߤఈ∗ܿ݋ݏ(ܽ)௡ഀ , 
где ߤఈ, ݊ఈ – эмпирические константы { ߤఈ> 0, ݊ఈ >  0 }, 
ܽ – разность значений направления линии ребра и направления вектора, 
соединяющего соседние точки трека { 0 ≤ܽ ≤ 360° }. 
На рисунке 2 представлен график функции ܵఈ для различных значений 
констант (ߤ௔, ݊ఈ). Параметр ݊ఈ влияет на чувствительность функции к 
изменениям значения разности значений ܽ. При приближении ܽ к значению 90° 
оценка ܵఈ уменьшается. Для нечетного значения ݊ఈ разница направлений от 90° 
до 270° даст результат с отрицательным показателем оценки ܵఈ, это можно 
использовать в ситуациях, когда по дороге доступно движение лишь в одном 
направлении. 
22 
 
Рис. 2. График функции составляющей ܵఈ 
 
Для алгоритма важны значения параметров ߤௗ и ߤఈотносительно друг 
друга. В случае, когда ߤௗ> ߤఈ, расстояние до ребра будет иметь больший вес, 
чем разница направлений, т. е. имеется возможность варьировать вес оценки 
ܵௗ(расстояния) и ܵఈ(направления). 
Итоговая метрика: 
ܵ(݌, ܿ) = ܵௗ(݌, ܿ) + ܵఈ(݌, ܿ). 
Для увеличения точности можно получить оценку наборов всех 
возможных вариантов последовательности ребер на глубину depth и выбрать 
набор с максимальным значением оценки ܵ: 
ܵ൫݌௜, ܿ௝൯= ∑
ܵ൫݌௜ା௞, ܿ௝,௟൯
ௗ௘௣௧௛
௞,௟ୀ଴
, 
 
 
 
(1) 
где ݌௜ – i-ая точка трека, ܿ௝ – j-ое ребро графа дорог. 
Итоговый алгоритм 
1. Выбрать все ребра графа с линиями, пересекающими буферную зону 
первой точки трека; 
2. Получить наборы связных ребер глубиной depth; 
3. Оценить все полученные наборы с помощью формулы (1); 
4. В наборе с наибольшей оценкой выбрать ребро, на которое попала 
проекция точки, а также все, предшествующие ему. Сделать это ребро 
текущим и добавить его к готовому маршруту; 
5. Перейти к пункту 2. 
23 
Разработка сервиса 
Для реализации сервиса были использованы: 
● 
Язык программирования Python версии 3.8; 
● 
Библиотека Shapely [3], для работы с линиями ребер и точками трека; 
● 
Библиотека psycopg2 [4] для работы с базами данных. 
При реализации алгоритма возникла необходимость представления 
дорожного графа и трека автомобиля в оперативной памяти, так как постоянные 
переходы между ребрами графа и точками трека вынуждали обращаться к базе 
данных, из-за чего процесс обработки занимал много времени. Для этого были 
реализованы классы, диаграмма которых представлена на рисунке 3. 
 
Рис. 3. Диаграмма классов приложения коррекции отметок 
24 
Трек автомобиля представлен как двусвязный список (класс Track), это 
позволяет контролировать порядок отметок по времени с помощью методов 
_insert_at_start, _insert_at_end, _insert_between, а также легко обращаться к 
предыдущей и следующей отметке. 
Дорожный граф (класс RoadMap) представлен как словарь, ключами 
которого являются идентификаторы ребер, а в параметре “related” в массиве 
хранятся ссылки на связанные ребра.  
Метод intersection_segments позволяет получить список сегментов, 
пересекающих буферную зону, заданную точкой и радиусом, это необходимо 
для обработки первой точки трека.  
Метод get_neighbor – получение списка связанных с указанным ребром 
ребер.  
Метод get_neighbor_path – рекурсивный метод для получения наборов 
вариантов движения по дорожному графу. 
Оценочная формула (1) была реализована в классе Segment, в методах 
distance_grade – оценка ܵௗ, angle_grade – оценка ܵఈ, grade – общая оценка ܵ.  
Результат работы алгоритма 
На рисунке 4 приведен пример работы алгоритма, в котором точка 
проецируется на ближайшее ребро графа, на рисунке 5 пример работы алгоритма 
с использованием оценочной формулы (1). 
На рисунках видно, что первый подход неэффективен, так как: 
1. В итоговом наборе ребер будут содержаться ребра, по которым транспорт 
не проезжал. Это произошло по причине того, что поиск ближайшего ребра 
не учитывает корректировку для последующих точек трека, а также 
направление движения транспорта и ребра. 
2. Имеются пропущенные ребра. Поиск ближайшего ребра осуществляется с 
помощью буферной зоны диаметром 100 метров для каждой точки трека, 
поэтому не учитывается связь с предыдущим полученным ребром 
дорожного графа. 
25 
Данные проблемы решаются благодаря алгоритму привязки данных с 
использованием оценочной формулы (1). 
 
Рис. 4. Работа алгоритма поиска ближайшего ребра 
 
 
Рис. 5. Работа алгоритма с использованием оценочной формулы (1) 
 
26 
 СТАТЬЯ
Аннотация
. Представлен гипотетический диалоговый процесс, ведомый 
цифровой технологией, на примере освоения студентом центральной предельной 
теоремы теории вероятностей.  
Ключевые слова: сумма случайных величин, центральная предельная 
теорема, нормальное распределение. 
ВВЕДЕНИЕ  
Целью публикации является апробация новой парадигмы цифровой 
технологии (ЦТ) поддержки усвоения студентом материала на примере изучения 
центральной предельной теоремы (ЦПТ) тории вероятностей. Основой этой 
технологии является диалог студент-ЦТ: обмен репликами (действия студента, 
ответы; вопросы, пояснения, оценка от ЦТ) по инициативе ЦТ. Целевыми 
качествами конечного продукта: максимум математической формализации для 
развития 
математической 
культуры 
студента; 
верификация 
понимания 
студентом имеющейся в теме и связанной с нею терминологии; эргономичное 
взаимодействие с ЦТ (минимум кликов и переходов, осуществляемых 
студентом; 
объектный 
рабочий 
экран; 
минимум 
текста 
– 
максимум 
математического отображения смысла; крупные, немногочисленные символы и 
изображения). 
1. 
Компактная теория ЦПТ для одинаковых слагаемых [1] 
Теорема. Случайная величина (СВ) Yn = ∑
ࢄ࢏
୬
୧ୀଵ
, где  ࢄ࢏ –  независимые 
СВ с одной и той же плотностью вероятностей fX1(x) (с математическим 
ожиданием  М{ࢄ࢏} = m и дисперсий ۲{ࢄ࢏} = ો૛), имеет асимптотически 
нормальное распределение с параметрами ࢓ࢅ= ࢔࢓  и СКО ࣌ࢅ=  ો√ܖ.  
28 
Доказательство. Вспоминаем характеристическую (ХФ) стандартного 
нормального распределения (m = 0,  = 1) ࡺ૙,૚  СВ ∶  (ݐ) = exp (-t2/2).  Введем 
стандартизованные СВ  ܻ௜=
ࢄ࢏ ି ࢓
࣌
, по условию теоремы независимые с 
одинаковыми m = 0 и   = 1.  Сформируем СВ  
Zn = ∑
ࢅ࢏
୬
୧ୀଵ
ଵ=
ࢅ࢔ ି ࢔࢓
࣌
 .                                            (1) 
Докажем, что Zn/࢔ → ࡺ૙.૚ , используя совокупность ХФ и предельный 
переход n -> .  ХФ СВ  
Zn/n                                                        (2) 
из-за независимости слагаемых ೋ೙
√೙
(ݐ) = ௓೙ቀ
௧
√௡ቁ= ൬௒భቀ
௧
√௡ቁ൰
௡
. Разложим 
основание степени в ряд Тейлора  с коэффициентами в виде центральных 
моментов возрастающего порядка: 1-й  = 0, 2-й 2 = 1 и т.д.:   ௒భ൫ݐ/݊൯=
 1  – 
௧మ
ଶ௡1 +  ݋(ݐଶ/݊). При n →∞ имеем замечательный предел: 
ೋ೙
√೙
(ݐ) = ൬௒భቀ
௧
√௡ቁ൰
௡
= ቆ1 −
௧మ
ଶ௡+ ݋ቀ
௧మ
௡ቁቇ
௡
→݁ି೟మ
మ , 
т.е. 
предел 
является 
ХФ 
стандартного 
нормального 
распределения. 
Асимптотика к нормальности доказана.  
При конкретном n из (2) и (1) имеем: М{Zn/n} = M{
ࢅ࢔ ି ࢔࢓
࣌࢔} = 
ଵ
࣌࢔(M{Yn} – 
nm) = 0,  т.е. M{Yn} – nm; D{Zn/n} = D{
ࢅ࢔ ି ࢔࢓
࣌࢔} = 
ଵ
࢔࣌૛(D{Yn} – 0) = 1, т.е. D{Yn} = 
n  2 или ࣌ࢅ= ો√ܖ. Теорема доказана. 
Перечислим термины для вопросов студенту от ЦТ: определение 
случайной величины (СВ), имя СВ, область определения СВ, функция 
распределения (вероятностей) СВ, плотность распределения (вероятностей) СВ, 
СВ задана – это …, определения математического ожидания и дисперсии СВ, 
индикатор независимости 2-х СВ, определение ХФ СВ, ХФ нормальной и 
экспоненциальной СВ (вывод). 
 
 
29 
2. 
Наглядный вычислительный эксперимент 
Задача. Устройство работает с математическим ожиданием времени 
безотказной работы 80 часов. Интервал времени  между отказами 
распределен экспоненциально: f(x) =  eхp (-x), x  R+,    = 1/80. Студенту: 
показать, что математическое ожидание экспоненциальной СВ M{ }= 1/, 
дисперсия D{} = 1/2 . 
Рассмотреть суммарное время безотказной работы устройства послс n  
его отказов и включений. Тогда время безотказной работы такой системы 
станет суммой времен отказов в каждом включении. Создать имитационный 
эксперимент по наблюдению распределения времени безотказной работы такой 
системы при разных значениях n >> 1.  
Эксперимент.  
1. Генерируем N = 5000 псевдослучайных независимых значений СВ с 
экспоненциальным распределением при λ = 0.0125 (рис. 1 и табл. 1). 
2. Создаем n выборок СВ Yn объема 50, суммируя по n = 5, 10, 50 и 100 
псевдослучайных чисел (произвольно выбранных). 
3. Строим гистограммы частот, вычисляем для них оценки m и ો૛. 
4. Отображаем эмпирические «плотности» графически. 
5. Сопоставляем и делаем заключение: работает ли ЦПТ. 
Необходимо: получить и отобразить 4 эмпирические распределения частот 
и оценки моментов СВ: Y5, Y10, Y50, Y100. По этим результатам сделать 
качественное заключение о работе в этом эксперименте ЦПТ. 
30 
 
Рис. 1. Исходная совокупность значений СВ  
с экспоненциальным распределением п ри   = 1/80 
 
Таблица 1. Оценки моментов СВ по сгенерированным значениям 
 
m  = 1/ 
ો૛ 
ો
= 1/
Исходные 
80 
6400 
80 
Оценка 
79,49 
6569,54 
81,05 
 
3. 
Сценарий взаимодействия студент-ЦТ  
Для проектирования заявленной выше ЦТ в табл. 2 отображен фрагмент 
гипотетического сценария взаимодействия с нею студента в сеансе освоения им 
существа ЦПТ с одинаковыми слагаемыми. В каждой ячейке столбца реакции 
ЦТ имеется две строки. 1-я отображает содержимое экранной формы (результат 
реакции ЦТ). 2-я содержит реплику ЦТ, инициирующую следующее действие 
студента.  
В порядке обсуждения табл. 2 отметим следующее. 
1. 
Необычность и большая трудоемкость разработки полного сценария 
(в согласии с рекомендациями [2]) требует участия методолога учебного 
процесса, навыка реализации алгоритмов «искусственного интеллекта» и 
существенно большего времени. 
 
5000
31 
2. 
Эта работа позволила авторам усвоить существо именно сценария 
взаимодействия студента с ЦТ, а не алгоритма работы ЦТ для пользователя. 
3. 
Проектирование 
современных 
ЦТ 
должно 
включать 
этап 
формирования сценария взаимодействия с ней. 
Заключение 
Представленный в статье результат носит характер иллюстративной 
попытки реализовать новый подход к существу и проектированию цифровой 
поддержки освоения студентами высшей математики.  
 
 СТАТЬЯ
Аннотация
. В статье приводится сравнение и реализация методов 
распознавания паттернов проектирования в исходном коде на языке Java. 
Ключевые слова: паттерны проектирования, исходный код, объектно-
ориентированный 
язык 
программирования, 
распознавание 
паттернов 
проектирования, извлечение признаков. 
Введение 
В настоящее время IT-специалисты становятся очень востребованными, и 
зачастую они работают в группах из нескольких человек. Различные методики 
организации рабочего процесса позволяют им работать слаженно и наиболее 
эффективно взаимодействовать друг с другом, однако не только это влияет на 
качество кода, который они пишут. Кроме знания языков программирования, 
также важно уметь писать код так, чтобы он был понятен другим людям в 
команде разработчиков. 
Работодатель заинтересован в поиске IT-специалистов, которые смогут 
писать код, понятный уже работающим программистам. Для этого они не только 
должны знать на определенном уровне те или иные языки программирования, но 
и писать код в понятном для других стиле. В данной работе под стилем 
понимается использование паттернов проектирования. 
Таким образом, возникает проблема поиска IT-специалистов, которые 
пишут программный код с использованием паттернов проектирования. 
 
 
34 
В данный момент эта проблема решается проведением собеседования. IT-
специалиста опрашивают по теории, а также он выполняет тестовое задание, 
которое позволяет выяснить, как он пишет программный код. Однако 
программист может не знать про паттерны проектирования, но это не помешает 
ему использовать их в своем коде. 
Идея работы состоит в том, чтобы на основе анализа кода выявить 
паттерны, которые в нем присутствуют. 
Цель – разработать программный продукт для распознавания паттернов 
проектирования в исходном коде, написанном на объектно-ориентированном 
языке. 
При решении данной проблемы возникают следующие задачи: 
1. 
Изучить подходы к выявлению определенных паттернов в 
программном коде и методы описания паттернов на основе системы признаков. 
2. 
Реализовать парсер для извлечения признаков, описывающих 
паттерны, и структуру данных для их хранения. 
3. 
Разработать 
алгоритмы 
для 
сопоставления 
паттернов 
и 
программного кода. 
4. 
Разработать 
и 
протестировать 
программный 
продукт 
для 
определения паттернов проектирования в исходном коде. 
В настоящее время ведется активное исследование по распознаванию 
паттернов проектирования в исходном коде. Они применяются во многих 
проектах для решения задач проектирования. Понимание того, что конкретный 
паттерн реализуется в том или ином программном модуле, может помочь в 
понимании программы, улучшить обслуживание программного обеспечения. 
Паттерны можно найти, глядя на исходный код, однако сложность проектов и 
различия в стилях написания кода у разработчиков затрудняют поиск. 
Автоматическое 
обнаружение 
паттернов 
проектирования 
поможет 
разработчикам программного обеспечения быстро и правильно понимать и 
поддерживать незнакомый исходный код, что приведет к повышению 
производительности труда разработчиков. 
 
 
35 
Для решения задачи распознавания паттернов проектирования в исходном 
коде могут применяться как правила, основанные на признаках тех или иных 
паттернов, так и методы машинного обучения. 
Обзор 
Паттерны проектирования – это описание взаимодействия объектов  
и классов, адаптированных для решения общей задачи проектирования  
в конкретном контексте. Паттерн проектирования именует, абстрагирует  
и идентифицирует ключевые аспекты структуры общего решения, которые  
и позволяют применить его для создания повторно используемого дизайна [6]. 
Были рассмотрены статьи с похожей тематикой и предложенные в них 
методы 
распознавания 
паттернов. 
Для 
решения 
задачи 
применяются 
распознавание по правилам или методы машинного обучения. 
В статье [1] с помощью парсера на основе исходного кода строится AST-
дерево, после чего применяется статический анализ. Статический анализ – поиск 
зависимостей в полученном дереве, соответствующих определенному паттерну 
проектирования, то есть происходит распознавание по определенным 
признакам, соответствующим каждому паттерну проектирования. 
В статье [3] проводится сравнение основных методов, описаны их 
преимущества и недостатки. В методах, использующих статический анализ, 
поиск паттернов осуществляется с помощью анализа структуры классов и 
проверяется ее соответствие определенным условиям. Если структура паттерна 
хоть немного отличается от заявленных жесткий условий, то он не будет найден, 
поэтому обычно выполняется либо несколько фаз статического анализа, либо он 
используется вместе с динамическим анализом и методами машинного 
обучения. 
Также была рассмотрена статья [4], в которой наиболее подробно описана 
предварительная 
обработка 
исходного 
программного 
кода 
и 
описаны 
выделяемые в программе признаки для распознавания паттернов. В этой статье 
для поиска паттернов используется машинное обучение, а признаки паттернов 
представляются в виде текста на естественном языке. 
 
 
36 
Постановка решаемой задачи 
Под признаками программы понимается множество P, которое состоит из 
элементов, представляющих собой описания классов. 
ܲ= {ܥଵ, ܥଶ, … , ܥே}, где ܥ௜ –  описание класса, N – количество классов  
в программе. 
Описание классов C включает в себя описания полей, методов  
и наследуемых классов. 
ܥ= ܥܫ∪ܨ∪ܯ, где 
 
ܨ (ܨ݈݅݁݀) = {ܨଵ, ܨଶ, … , ܨெ}, где ܨ௜ – описание полей класса, M – 
количество полей в классе. 
 
ܯ (ܯ݁ݐℎ݋݀) = {ܯଵ, ܯଶ, … , ܯ௅}, где ܯ௜ – описание методов классов, 
L – количество методов в классе. 
 
ܥܫ (ܥ݈ܽݏݏ ܫ݊ℎ݁ݎ݅ݐܽ݊ܿ݁) = {ܥܫଵ, ܥܫଶ, … , ܥܫ௄}, где ܥܫ௜ – описание на-
следуемого класса, K – количество наследуемых классов, CI – подмножество P. 
Описание поля класса содержит имя, атрибуты и тип значения. 
ܨ௜= (ܨ௜ଵ, ܨ௜ଶ, … , ܨ௜௫), ݔ= 1 (имя) + количество атрибутов поля + 1 (тип 
значения). 
Сигнатура метода может быть описана, как имя метода, атрибуты, тип 
возвращаемого значения и входные параметры. 
ܯ௜= ൫ܯ௜ଵ, ܯ௜ଶ, … , ܯ௜௬൯, ݕ= 1 (имя) + количество атрибутов метода + 1 
(тип возвращаемого значения) + количество параметров. 
В разных объектно-ориентированных языках программирования может 
быть различное число атрибутов, зависящее от выбора того или иного языка, 
причем они могут присутствовать не в любых сочетаниях. 
Паттерн – набор признаков Pp (Program pattern). 
ܲ݌= {ܥଵ, ܥଶ, … , ܥே௣}, ܥ௜ – описание класса, 
ܥ= ܥܫ∪ܨ∪ܯ, где F – описание полей класса, M – описание методов 
класса, CI – описание наследуемых классов. 
 
 
37 
Задача распознавания паттернов сводится к тому, чтобы сопоставить 
признаки программы P и признаки паттерна Pp. 
Материалы и методы решения 
В 
данной 
работе 
используется 
корпус 
программ 
на 
языке 
программирования Java, ссылка на который была приведена в статье [4]. 
Для выделения признаков программы необходимо реализовать парсер. 
После изучения статей с похожей тематикой были выбраны следующие 
признаки для классов: ClassName (имя класса), ClassModifiers (модификаторы 
доступа к классу), ClassImplements (интерфейсы, которые реализует данный 
класс), ClassExtends (наследуемые классы), Fields (поля класса), Methods (методы 
класса). 
У методов были выделены следующие признаки: MethodName (имя 
метода), MethodModifiers (модификаторы доступа), MethodParams (входные 
параметры 
метода), 
MethodReturnType 
(тип 
возвращаемого 
значения), 
MethodIncomingMethod (количество методов, который вызывает данный метод), 
MethodIncomingName (имена вызываемых методов), MethodOutgoingMethod 
(количество методов, вызывающих данный метод), MethodOutgoingName (имена 
методов, вызывающих этот метод). 
Выбор именно этих признаков обусловлен тем, что они необходимы как 
при распознавании паттернов с помощью методов статического анализа, так и 
при распознавании методами машинного обучения. В качестве метода 
распознавания паттерна был выбран статический анализ – распознавание по 
признакам. Паттерны имеют определенную структуру и иерархию классов, по 
которым их можно распознать. 
Каждому 
паттерну 
проектирования 
соответствуют 
определенные 
признаки, указывающие на присутствие этого паттерна в коде, поэтому в 
полученной коллекции деревьев для каждого паттерна достаточно будет 
проверять определенный набор условий. 
Первым рассмотренным паттерном был singleton – порождающий паттерн 
проектирования. Он гарантирует, что в программе будет только один экземпляр 
 
 
38 
класса с глобальной точкой доступа к нему. Его можно определить по 
следующим признакам класса: приватный конструктор, при этом в классе нет 
публичных конструкторов, приватное статическое поле, хранящее ссылку на 
объект этого класса, публичный статический метод для доступа к объекту класса. 
Алгоритм распознавания паттерна singleton можно записать с помощью 
псевдокода. 
ܥ≔∅ 
݂݋ݎ݁ܽܿℎ ݈ܿܽݏݏ ܿ ݀݋ 
ܾ݋݋݈ ℎܽݒ݁ܵݐܽݐ݂݈݅ܿ݅݁݀, ℎܽݒ݁ܲݎ݅ݒܽݐ݁ܥݐ݋ݎ, ℎܽݒ݁ܩ݁ݐܯ݁ݐℎ݋݀≔݂݈ܽݏ݁ 
݂݋ݎ݁ܽܿℎ ݂݈݅݁݀ ݂ ݅݊ ܿ. ݂݈݅݁݀ݏ ݀݋ 
ℎܽݒ݁ܵݐܽݐ݂݈݅ܿ݅݁݀∶= ℎܽݒ݁ܵݐܽݐ݂݈݅ܿ݅݁݀∨݅ݏܲݎ݅ݒܽݐ݁(݂) ∧݅ݏܵݐܽݐ݅ܿ(݂) 
݂݋ݎ݁ܽܿℎ ݉݁ݐℎ݋݀ ݉ ݅݊ ܿ. ݉݁ݐℎ݋݀ݏ ݀݋ 
ℎܽݒ݁ܲݎ݅ݒܽݐ݁ܥݐ݋ݎ
≔ℎܽݒ݁ܲݎ݅ݒܽݐ݁ܥݐ݋ݎ∨݅ݏܥ݋݊ݏݐݎݑܿݐ݋ݎ(݉)
∧݅ݏܲݎ݅ݒܽݐ݁(݉) 
ℎܽݒ݁ܩ݁ݐܯ݁ݐℎ݋݀
≔ℎܽݒ݁ܩ݁ݐܯ݁ݐℎ݋݀∨݅ݏܲݑܾ݈݅ܿ(݉) ∧݅ݏܵݐܽݐ݅ܿ(݉)
∧݉. ݎ݁ݐݑݎ݊ܶݕ݌݁== ܿ. ݈ܿܽݏݏܰܽ݉݁ 
݂݅ ℎܽݒ݁ܵݐܽݐ݂݈݅ܿ݅݁݀∧ℎܽݒ݁ܲݎ݅ݒܽݐ݁ܥݐ݋ݎ∧ℎܽݒ݁ܩ݁ݐܯ݁ݐℎ݋݀ ݀݋ 
ܥ≔ܥ∪ܿ 
Был также рассмотрен альтернативный способ представления и проверки 
признаков паттернов. 
В данном подходе паттерн – это набор правил, состоящих из названия 
правила и определенных выражений. 
Pattern: Rules 
Rules: Rule* 
 
 
39 
Rule: 
 
Name ‘{‘ 
 
 
(RuleExpr)* 
 
‘}’ 
Выражения правил содержат операцию и тело правила. 
RuleExpr: Op RuleBody 
Для операций предусмотрена операция require, означающая искомый 
признак, указывающий на присутствие паттерна в коде. 
Op: ‘require’ 
RuleBody: 
 
Name 
 
‘+’ Attributes (FieldRule | MethodRule | CtorRule) 
Тело метода может содержать название правила, которое необходимо 
проверить, или некоторый набор определенных признаков: атрибуты, правила 
для полей класса, методов или конструкторов. 
Attributes: (Attribute)* 
Attribute: (‘!’)?AttributeName 
Атрибуты состоят из названий атрибутов и отметки критичности. Если 
такая метка присутствует, то условие должно выполняться для всех полей класса, 
методов или конструкторов. 
FieldRule: ‘fld’ ‘->’ Type 
Правило для поля класса содержит тип хранимого в поле значения. 
MethodRule: ‘mtd’ ‘(‘ Type* ‘)’ ‘->’ Type 
Правило для методов состоит из типов параметров и типа возвращаемого 
значения. 
CtorRule: ‘ctor’ ‘(‘ Type* ‘)’ 
Правило для конструктора содержит типы входных параметров. 
Type: ‘_’ | ‘this’ | Name 
 
 
40 
Тип может содержать отметку, что тип для данного правила не имеет 
значения, как и количество параметров, this – тип значения должен совпадать с 
названием класса, для которого проверяется условие, и Name – имя правила. 
AttributeName: ‘private’ | ‘public’ | ‘static’ | ‘abstract’ | ‘override’ 
Name: [A-Za-z][A-Za-z0-9]  
В данной грамматике паттерн singleton можно представить с помощью 
следующих правил: 
Singleton 
cls { 
require static !private fld -> this 
require !private ctor (_) 
require static public mtd (_) -> this 
} 
Результаты 
Для выделения признаков был реализован парсер на языке Python 3 с 
использованием библиотеки Plyj для парсинга исходного кода на языке Java 7. 
Описанные 
методы 
поиска 
паттернов 
были 
реализованы 
на 
языке 
программирования C#, для интерфейса использовались Windows Forms. 
Первый подход поиска паттернов в деревьях признаков программ прост в 
реализации, 
однако 
он 
усложняет 
добавление 
новых 
паттернов 
для 
распознавания, так как для каждого нового паттерна придется реализовывать 
алгоритм поиска. 
Второй подход с использованием грамматики для описания паттернов 
позволяет упростить распознавание новых паттернов и более гибко описывать 
искомые паттерны. При этом алгоритм поиска будет более общим и сведется к 
проверке правил, записанных для каждого паттерна с использованием введенной 
грамматики. Для этого подхода требуется реализовать парсер, который будет 
выделять записанные в файле правила и строить по ним дерево правил. 
 
 
41 
Заключение 
В дальнейшем можно добавить в приложение большее количество 
распознаваемых паттернов проектирования, протестировать реализованный 
метод поиска паттернов на проектах, где в классах может быть использовано 
несколько 
паттернов 
проектирования. 
Функционал 
приложения 
можно 
расширить и добавить подсказки с описанием найденных паттернов, чтобы его 
можно было использовать в учебных целях, когда пользователь на готовых 
примерах смотрит, как в исходном коде реализован тот или иной паттерн. 
Благодарности 
Исследование выполнено при финансовой поддержке РФФИ в рамках 
научного проекта № 19-37-51028. 
 СТАТЬЯ
Аннотация
. В статье представлен анализ факторов, влияющих на действия 
при ведении внешнего проекта, определены контролируемые показатели. 
Представляются способы снижения негативных воздействий по средствам 
внедрения систем автоматизации и различных методик. 
Ключевые слова: внешний проект, управление проектом, управление 
рисками, фактор окружения, системы автоматизации.  
Введение 
Внешний проект – проект, выполняемый для заказчика из другой 
компании или частного лица. Следовательно, предназначается для стороннего 
лица, что обуславливает зависимость от факторов окружения [9]. Каждый тип 
факторов влияет на определенные условия в ходе выполнения проекта, но общим 
для всех является увеличение продолжительности работ в сравнении с 
аналогичным внутренним проектом. Все это усложняет выполнение работ и 
отслеживание текущих результатов, что делает для многих компаний 
нежелательным вести с другими юридическими лицами внешние проекты в 
качестве исполнителя, что в свою очередь мешает более глубокому 
взаимодействию между компаниями. Цель данного исследования – определить 
будет ли использование автоматизированных систем при работе над внешними 
проектами снижать влияние внешних факторов на бизнес-процесс. 
1. Факторы окружения 
К внешним факторам, влияющим на внешний проект, относят: поставки, 
эталонную 
власть, 
контрольные 
события, 
искусственные 
границы, 
коммуникативные издержки [7]. 
 
 
43 
Поставки – уникальные и проверяемые продукт или услуга, поставляемые 
заинтересованной стороной, спонсором или заказчиком [7]. Само наличие 
поставок уже обуславливает зависимость ресурсов проектной команды от 
третьей стороны. На практике часто без поставок невозможно выполнить какие-
либо этапы или задачи проекта, так как материалы, относящиеся к стороне 
заказчика, могут быть получены только из них. 
Эталонная власть – требования, предъявляемым заказчиком для решения 
спорных ситуаций [7]. Сам же заказчик в большинстве случаев не располагает 
компетенциями по техническим вопросам, что приводит невозможности 
реализация тех или иных аспектов без внешних вмешательств, или же привести 
в будущем к новым инцидентам. 
Контрольные события – сроки, к окончанию которых должен быть 
выполнен фиксированный список операций проекта [9]. Наличие заранее 
определенных сроков удобно при составлении плана работ, но оно не учитывает 
возможности отклонений как негативных, так и положительных. Из-за чего 
выполнение задач на опережение может вызвать нарушение в текущей работе и 
так же, как срыв сроков, затормозит весь проект. 
Искусственные границы – ограничения на используемые технические 
средства или материалы для выполнения ряда задач. Для определенного рода 
задач подходят одни инструменты, но другие так же могут быть использованы, 
но с меньшей эффективностью. Подобного рода ограничения могут быть 
причиной неоптимальных решений и проблем после сдачи работ. 
Коммуникативные издержки – затраты на обеспечение устойчивого канала 
связи [7]. Проектная команда создается из сотрудников заказчика и исполнителя, 
что порождает сложность в дальнейшем общении между членами команды. 
Помимо этого, необходим контроль действий как со стороны заказчика, так и со 
стороны исполнителя, из-за чего увеличивается объем отчетной документации. 
Пренебрежение же этим может привести к проявлению или быть частью 
сепаратизма команды. 
 
 
 
44 
2. Влияние факторов 
Любой хозяйствующий субъект в своей деятельности сталкивается с 
риском. Он лежит в основе принятия всех управленческих решений. Риск – это 
возможность возникновения неблагоприятной ситуации или неудачного исхода 
производственно-хозяйственной 
или 
какой-либо 
другой 
деятельности. 
Выделяют несколько видов рисков, но рассмотрим только те, которые 
затрагивают наши факторы [5, 6]. 
Технологический риск – риск возникновения убытков или прекращения 
деятельности в результате отказа или ненадлежащей работы систем 
технологического обеспечения работы [10]. Основными причинами роста 
данного вида рисков являются нарушение техники безопасности, условий 
пользования или применение неподходящих технологий для решения задач [6]. 
Как следует из определения, при росте вероятности данного риска, растет также 
вероятность отказа имеющихся систем, что приводит к остановки бизнес-
процесса. В нашем случае на технологический риск влияют искусственные 
границы (не подходящие технологии) и эталонная власть (нарушение условий 
пользования), также возможно влияние контрольных событий, так как работа на 
опережение может вызвать сбой в процессах, налаженных у заказчика. 
Подобного рода задержки могут привести к рискам несоблюдения графика. 
Риск качества – риск потерь (ущерба) организации из-за отклонений 
показателей качества производимых ею продуктов труда от требуемых значений 
[7]. Данный риск ведет за собой еще один, репутационный риск. Репутационный 
риск – риск потери прибыли или поставщиков, вследствие неблагоприятного 
восприятия имиджа компании [7]. Одной из сложностей поддержания качества 
является то, что требований качества для проекта и продукта и планировании 
документирования процедур демонстрации соответствия требованиям все 
заинтересованные стороны могут иметь собственные интересы в отношении 
стандартов качества [3]. Это приводит к необходимости для проектной команды 
самостоятельно 
разработать 
стандарт 
и 
проинформировать 
заказчика. 
 
 
45 
Отклонение от плана и коммуникативные издержки могут привести к утечке 
конфиденциальной информации, сокрытию растрат, невыполнения задач. 
Понижение качества, а в следствии и репутации, может привести к потере 
контрактов, деловых партнеров и в худшем случае к проявлению спекулятивных 
рисков. 
Спекулятивный риск – риск, который кроме неблагоприятных и 
нейтральных последствий предполагает также возможность благоприятных 
последствий. При спекулятивном риске у субъекта существует возможность не 
только потерять, но и получить выгоду. Чаще всего он выгоден для стороны 
заказчика, так как, в случае разрыва контракта, в судебном порядке исполнителю 
необходимо возместить убытки, а у заказчика в зависимости от обстоятельств, 
могут остаться наработки с закрытого проекта. Наиболее зависимый от 
человеческого 
фактора 
риск 
из 
приведенных, 
так 
как 
строится 
на 
психологических факторах. 
 
3. Контроль воздействий 
Из приведенных выше рисков контролю со стороны исполнителя 
поддаются: риски сроков, качества, технологические. 
Одним из способов рассчитать риски сроков является оценка по трем 
точкам: наиболее вероятная, пессимистичная и оптимистичная оценки времени 
выполнения [4]. Средняя взвешенная оценка времени выполнения (дни) 
вычисляется как: 
 
ܲതвзвеш.сроков =
ைைାସ∗஻ீା௉ை
଺
, 
(1) 
где BG – наиболее вероятное оценка времени выполнения (% дни), 
 
OO – оптимистичная оценка времени выполнения (% дни), 
 
PO – пессимистичная оценка времени выполнения (% дни). 
Формула стандартного отклонение сроков выполнения (дни) имеет вид: 
 
ߪсроков =
௉ைିைை
଺
, 
(2) 
 
 
46 
где OO – оптимистичная оценка времени выполнения (дни), 
 
PO – пессимистичная оценка времени выполнения (дни). 
Как можно заметить из формул 1, 2 для уменьшения вероятности риска и 
его отклонений достаточно сократить пессимистичную оценку. Они необходимы 
для 
определения 
максимальной 
и 
минимальной 
ожидаемых 
продолжительностей на уровне отдельных работ и всего проекта. В зависимости 
от сферы работ для этого могут быть применены АСУТП (автоматизированные 
системы 
управления 
техническим 
процессом), 
САПР 
(системы 
автоматизированного проектирования) и АСКК (автоматизированные системы 
контроля качества), снижающие влияние человеческого фактора в рабочем 
процессе. 
Для риска качества в общем случае можно использовать формулу риска 
ощущений [3, 5]: 
 
ܴ= 
∆ொିௌ
ொబ, 
(3) 
где ܳ଴ – текущий коэффициент качества (ܳ଴∈[0, … ,1], выражающий степень, 
удовлетворенности заказчика), 
 
∆ܳ – ожидаемое изменение коэффициента качества, 
 
S – издержки, невозмещаемые независимо от того, реализуется рисковое 
событие или нет. 
Показатели ∆ܳ и ܳ଴ являются неконтролируемыми в планирования, а 
потому следует сократить невозвращаемые издержки. В зависимости от сферы 
деятельности такие издержки могут быть: амортизацией техники, оплатой труда 
сотрудников, чьи функции может заменить робот, информационная система и т. 
п., затраты на маркетинг, аренду и иные виды издержек, не зависящие напрямую 
от бизнес-процесса. Общее для них всех то, что они являются результатами 
принятых в прошлом решений. С целью принятия решений с наименьшими 
издержками в будущем рекомендуется использовать СППР (системы поддержки 
принятия решений), одной из функций которых является прогнозирование [8]. 
 
 
47 
Технологический риск в случае реализации при выполнении проекта 
приводит к простою из чего следует, что его можно характеризовать как риск 
простоя в общем случае [1, 2]. В первую очередь определим коэффициент 
влияния при реализации риска: 
 
 
ܫ=
௅ை
௅ைାிை, 
(4) 
где LO – количество потерянных или приостановленных операций, 
 
FO – фактическое количество операций в период простоя. 
 
Далее определим потенциальную длительность периода простоя (мин.): 
 
 
ܶ= ∑
(ܶ௧௔௦௞ ௜+ ܶ௪௔௜௧ ௜)
ெ
௜ୀଵ
, 
(5) 
где M – количество шагов по устранению инцидента, 
 
ܶ௧௔௦௞ ௜ – длительность шага i по устранению инцидента (мин.), 
 
ܶ௪௔௜௧ ௜ – время ожидания между шагами i и i + 1 (мин.). 
На основе формул 4 и 5 вычисляется приведенное время простоя: 
 
 
ܶᇱ= ∑
ܶ௜ܫ=
ே
௜ୀଵ
∑
ܶ௜
௅ை
௅ைାிை
௡
௜ୀଵ
, 
(6) 
где N – количество периодов простоя, 
 
LO – количество потерянных или приостановленных операций, 
 
FO – фактическое количество операций в период простоя, 
 
Ti – потенциальная длительность периода простоя i. 
Определение вероятности реализации риска проводится на основе статистики по 
следующему выражению: 
 
 
ܨ= maxቀ
ேల∙ாల
଴,ହ∙ଷ଺ହ,
ேభమ∙ாభమ
ଷ଺ହ
,
ேమర∙ாమర
ଶ∙ଷ଺ହ ቁ, 
(7) 
где N6 – фактическое количество инцидентов за 6 месяцев, 
 
E6 – фактическое количество дней эксплуатации за 6 месяцев, 
 
N12 – фактическое количество инцидентов за 12 месяцев, 
 
E12 – фактическое количество дней эксплуатации за 12 месяцев, 
 
N24 – фактическое количество инцидентов за 24 месяца, 
 
E24 – фактическое количество дней эксплуатации за 24 месяца. 
 
 
48 
При моделировании можно использовать показательное распределение для 
определения количества инцидентов [12]. Формула вероятности риска 
частичного простоя имеет вид: 
 
 
ܴ௉ௌ= ܶ௜∙ܫ∙ܨ,  
(8) 
где I – коэффициент влияния при реализации риска, 
 
Ti – потенциальная длительность периода простоя, 
 
F – вероятности реализации риска. 
 
При I ≥ 50% вероятность риска частичного простоя равняется вероятности 
риска полного простоя. Как можно заметить из выражений 6, 8 основными 
параметрами для определения риска являются I и T, зависящие от структуры 
технологического процесса. Изменение количества операций напрямую 
сказывается на качестве продукта или услуги, а потому необходимо 
воздействовать на длительность периода простоя. Для его сокращения можно: 
перевести часть шагов по устранению проблемы на автоматические системы, 
повысить 
отказоустойчивость 
за 
счет 
резервирования 
процессов 
или 
компонентов систем, использующих различные подходы для достижения 
поставленных задач, проводить регулярных компенсационных работ. В любом 
из этих вариантов рекомендуется использовать АСМ (автоматизированные 
системы мониторинга) для отслеживания прецендентов и снижения времени 
реагирования. 
 
4. Результаты моделирования 
Для подтверждения приведенных выше утверждений была реализована 
имитационная математическая модель и собрана статистика по 10 000 итераций 
для тестового внешнего проекта (рис. 1) при различных условиях. Он состоит из 
трех типов процессов, для которых была сгенерирована статистика отказов по 
показательному закону [12] при λ со следующими значениями: 1.25, 1.5, 1.75, 2, 
2.25. «Узел 4» представляет собой составной процесс с параллельными 
подпроцессам, сбой в одном из которых приводит к остановке всех связанных.  
 
 
49 
Рис. 1. Бизнес-процесс тестового внешнего проекта в нотации BPMN 2.0 
 
Каждый процесс имеет свои время возобновления, длительность, 
стоимость и цену содержания резервирующей системы (табл. 1). На основе 
содержания 
рассчитывается 
дополнительное 
количество 
средств 
для 
резервирования с соответствующим множителем. Время возобновления зависит 
от типа процесса. 
Таблица 1. Процессы внешнего проекта и их показатели 
Название 
Длительность 
Время 
возобновления 
Стоимость
Содержание 
резервирования 
Узел 1 
4 
3.99 
15 000 
1 000 
Узел 2 
4 
1.2 
10 000 
2 500 
Узел 3 
3 
1.2 
12 000 
1 200 
Узел 4.1.1
2 
3.99 
11 000 
1 500 
Узел 4.1.2
12 
1.2 
16 000 
1 700 
Узел 4.2.1
6 
1.2 
24 000 
5 000 
Узел 4.2.2
6 
1.2 
20 000 
4 000 
Узел 4.3.1
8 
3.72 
9 000 
500 
Узел 5 
5 
3.99 
10 000 
650 
Результаты моделирования без учета резервирования представлены на 
рисунке 2. На графике процессов с их вероятностью отказа видно, что при росте 
λ 
понижается 
технологический 
риск. 
По 
определению 
λ 
обратно 
пропорционально математическому ожидание, следовательно, при проведении 
компенсационных работ, понижающих математическое ожидание. Это приводит 
 
 
50 
к необходимому росту λ. Следует отметить, что в средняя вероятность отказа в 
таком случае равняется 21%, а длительность превышает ожидаемую на 3.61 дня. 
Рис. 2. Результаты моделирования при различных λ без резервирования 
На рисунке 3 представлены результаты моделирования с учетом 
резервирования процессов «Узел 1», «Узел 4.2.2» и «Узел 5», определенных как 
наиболее влиятельные. При незначительном понижении вероятности отказа и 
средней длительности выросла стоимость, а с ней и риск качества. 
Рис. 3. Результаты моделирования при единичном резервировании процессов 
 
 
51 
При двойном резервировании данных процессов наблюдаются заметно 
отличающиеся результаты (рис. 4). Вероятность отказа для процессов «Узел 1» 
и «Узел 5» стремится к 0, а для «Узел 4.2.2» соответствует аналогичной без 
резервирования, но при λ = 1.5. Но в то же время, заметно выросла стоимость с 
риском качества, а технологический риск понизился до 11%, что привело к 
превышению ожидаемого времени только на 1.47. 
Рис. 4. Результаты моделирования при двойном резервировании процессов 
Заключение 
В работе представлено исследование факторов окружения, негативно 
влияющих на показатели вероятности рисков: репутационных, спекулятивных, 
технологических, качества и времени, и создана математическая модель влияния 
рисков на проект. На основе исследования определены способы снижения 
воздействий. Для контроля рисков качества необходимо использовать СППР и 
следить за структурой технологических процессов с целью снижения 
невозмещаемых издержек. В зависимости от сферы деятельности для понижения 
риска сроков, путем снижения пессимистичной оценки длительности проекта, 
могут быть использованы АСУТП, САПР и АСКК, а также необходимо следить 
за технологическими рисками. Для это следует определить процессы, 
требующие резервирования, количество и тип резервирований, проводить 
 
 
52 
регулярные компенсационные работы, использовать АСМ и следить за 
архитектурой технологических процессов, во избежание каскадов. 
Планируется модифицировать модель, путем введения большего числа 
рисков. После успешной модификации на ее основе будет разработан 
рекомендательный модуль, для оптимизации проектов. 
 СТАТЬЯ
Аннотация
. В статье представлен метод анализа требований рынка труда 
на основе текстов вакансий, позволяющий определить какие персональные 
качества ценятся работодателями и какие группы навыков специалиста наиболее 
востребованы для вакансий с интернет ресурса по поиску работы hh.ru. 
Ключевые слова: анализ текста, рынок труда, кластеризация, text mining. 
Введение  
Ежегодно вузы выпускают большое количество специалистов разного 
характера, которым требуется найти подходящую под их уровень знаний работу. 
Возникает проблема получения информации об актуальных требованиях рынка 
труда по специализациям ИТ сферы. Автоматизация исследования текстов 
вакансий значительно сократит время получения информации о рынке труда. 
Такое решение позволит новым специалистам оценить свои перспективы и 
трудоустроиться в кратчайшие сроки. 
Цель работы – разработать приложение для определения актуальных групп 
навыков специалиста на рынке труда в ИТ сфере на основе текстов вакансий  
Необходимо решить задачи: 
• 
Определить структуру базы данных; 
• 
Автоматизировать выгрузку вакансий и обновление уже имеющихся; 
• 
Разработать метод извлечения не только технологий, но и других 
навыков, которые требуются работодателям; 
• 
Разработать метод формирования навыков ИТ в группы по 
специализациям исходя из вакансий; 
 
 
55 
• 
Разработать приложение, предоставляющее пользователю доступ к 
результатам анализа вакансий; 
• 
Интегрировать решение в систему "ЦСС". 
Анализ текстов вакансий 
Ежедневно публикуется до 2000 вакансий, и важно разработать общий 
алгоритм извлечения навыков из текстов вакансий, который будет работать вне 
зависимости от структуры текста. 
На рисунке 1 представлен пример текста вакансии. 
 
Рис. 1. Пример текста вакансии 
Для анализа содержания вакансии, помимо словарей характеризующих 
слов и оцениваемых навыков, требуется коллекция персональных качеств 
работника. Коллекция персональных качеств состоит из навыков, которые 
 
 
56 
требуются 
работодателям 
вне 
зависимости 
от 
профессии, 
например 
«Ответственность» или «Пунктуальность». Для получения такого словаря нужно 
анализировать не просто отдельные слова, а целые сущности. С такой целью 
справляется анализ биграмм. 
Биграмма – это последовательность из двух элементов, проще говоря 
словосочетание, за исключением того, что часть речи в таком сочетании не имеет 
значения. С определением наиболее важных биграмм в тексте поможет TF-IDF – 
статистическая мера, используемая для оценки важности слова в контексте 
документа, являющегося частью коллекции документов [2; 169-174]. 
C помощью TF-IDF меры, для каждой биграммы определяется значение, 
которое говорит о ее важности в коллекции документов, где максимум – это 
наиболее важные биграммы и минимум – это наименее важные биграммы. То 
есть чем больше у слова значение TF-IDF метрики, тем больше оно смысла несет 
относительно документа. 
Важно учесть, что все слова в тексте проходят отдельную обработку 
лемматизацией, которая приводит слово к его нормальной форме. Это требуется 
для исключения слов, несущих одинаковый смысл, но имеющих различия в 
написании, например «Знание» и «Знания». Лемматизация более аккуратно 
обрабатывает слова в отличие от стеммера, но за это приходится платить 
большим временем обработки. 
По итогам обработки данных были получены оценки наиболее и наименее 
важных биграмм (см. таблицу 1, таблицу 2). 
 Таблица 1. Наиболее важные биграммы 
Биграмма 
TF-IDF мера 
опыт работа 
0.04673 
английский язык 
0.03542 
работа команда 
0.03275 
опыт разработка 
0.03103 
умение разбираться 
0.02779 
уверенный знание 
0.02326 
 
 
 
57 
Таблица 2. Наименее важные биграммы 
Биграмма 
TF-IDF мера 
оплата труд 
0.003 
разработка внедрение 
0.0015 
дружный команда 
0.0013 
работа база 
0.0009 
мозговой штурм 
0.0009 
международный компания 
0.0008 
 
После выявления всех важных биграмм среди большого количества 
вакансий был произведен ручной отбор персональных качеств. 
Пример словаря персональных качеств: работать в команде, английский 
язык, совместная работа, коммуникабельность, ответственность. 
После предварительного сбора данных выполняется основной алгоритм 
обработки. Для вакансии составляются наборы «Навык-Уровень знаний» в том 
числе и для личных качеств, за исключением того, что уровень знаний не 
определяется благодаря оценочному слову, а выбирается заранее и имеет 
название – “Soft”.  
Кластеризация 
После обработки каждая вакансия имеет свой набор требуемых 
технологий, и стоит задача разгруппировать вакансии по специализациям. Эту 
задачу решает кластеризация. 
Кластеризация – это объединение объектов или наблюдений в группы, 
называемые кластерами, на основе близости значений их признаков. Обучение 
модели в таком случае ведется только относительно входных данных, без 
вмешательства в ход обучения «учителя», что является преимуществом 
кластеризации [1; 151-168]. 
Перед тем, как приступить к разбиению на кластеры нужно подготовить 
входные данные. Для этого каждая вакансия представляется в виде вектора из 
 
 
58 
нулей и единиц, где единицы характеризуют наличие определенного навыка в 
вакансии, а нули его отсутствие.  
Затем набор из векторов новых вакансий подается в обученную на старых 
данных модель и позволяет ей доучиться на новых данных и провести 
группировку. 
На рисунках 2 и 3 представлены облака слов разных групп навыков.  
 
Рис. 2. Облако слов для группы мобильная разработка  
 
 
Рис. 3. Облако слов для группы веб-разработки 
 
Важно отметить, что имена группам выдаются автоматически на основе 
наиболее востребованных навыков данной группы. 
 
 
59 
Результаты 
С помощью обработанных текстов вакансий можно проанализировать 
требуемые персональные навыки на рынке труда. На рисунке 4 можно увидеть 
статистику упоминаний персональных навыков в текстах вакансий. 
 
Рис. 4. Количество вакансий для персональных навыков 
 
Можно заметить, что очень часто работодатели требуют знать английский 
язык, уметь работать в команде и быть коммуникабельным. Это объясняется тем, 
что на нынешнем рынке труда все больше набирают популярность командные 
проекты, и для успешного выполнения заданий от программиста требуется 
взаимодействовать с коллегами и работать как часть большой структуры. 
Большинство полезной для программиста литературы сейчас на английском 
языке, и его знание просто необходимо для работы с актуальными технологиями. 
С помощью полученных групп вакансий можно проанализировать 
актуальные группы навыков на рынке труда. На рисунке 5 можно увидеть 
статистику количества вакансий по разным группам навыков. 
0
200
400
600
800
1000
1200
1400
1600
Количество вакансий в которых указан навык
Наиболее востребованные персональные навыки в вакансиях
 
 
60 
 
Рис. 5. Количество вакансий по группам навыков 
Можно заметить, что лидирующую позицию на рынке труда занимает веб-
разработка. Это объясняется тем, что интернет стал неотъемлимой частью жизни  
современного человека. С помощью создания сайта можно распространять 
информацию и доносить ее до огромного количества пользователей сети. Важно 
учесть, что для реализации веб-приложений очень часто разделяют обязанности 
программистов 
на 
Backend 
и 
Frontend 
разработку, 
что 
подвержает 
востребованность умения работать в команде. Так же очень популярна 
разработка мобильных приложений, что объясняется большой популярностью 
смартфонов. 
Структура проекта 
Система «ЦСС» представляет из себя сервер, который состоит из двух 
частей: Frontend и Backend. Backend часть включает в себя выгрузчик, 
обработчик текста, кластеризацию, интерфейс для работы с базой данных и 
интерфейс для отправки данных в Frontend. Frontend часть включает в себя 
пользовательский интерфейс и интерфейс для получения данных из Backend 
части. 
0
500
1000
1500
2000
2500
3000
Веб-разработка
Работа с 1С и 
CRM
Мобильная 
разработка 
Backend Веб-
разработка 
Работа с базами 
данных
Frontend Веб-
разработка
Количество вакансий группы
Статистика вакансий по группам навыков 
 
 
61 
 
 
Рис. 6. Схема проекта 
 
С помощью API hh.ru выгрузчик загружает вакансии. После обработки 
вакансии добавляются в общую базу. Раз в неделю из базы выгружаются данные 
для кластеризации, после чего информация о группе вакансий обновляется. 
Выгрузка, обработчик данных и кластеризация были реализованы на языке 
Python с использованием библиотек: Scikit-learn, Requests, PyStemmer, NumPy, 
NLTK. В качестве СУБД в проекте используется PostgreSQL. 
База данных хранит в себе список вакансий, список уникальных навыков, 
список регионов и список групп навыков. Для каждой связи между вакансией и 
навыком в отдельном списке хранятся наборы «навык-уровень». 
Пользовательское приложение предоставляет пользователю статистику по 
выбранной группе навыков. На рисунках 7-9 представлен пример работы 
приложения.  
 
 
62 
 
 
Рис. 7. Анализ технологий выбранной группы 
 
После выбора группы пользователь видит облако слов выбранной группы 
и может получить статистику по одному из пяти наиболее востребованных 
навыка выбранной группы. 
 
Рис. 8. Анализ популярных персональных навыков  
и выбор регионов для анализа 
 
 
 
63 
После анализа технологий пользователь видит наиболее популярные 
персональные навыки по выбранной группе и может пронаблюдать изменения 
средней заработной платы по регионам, которые он сам выберет. 
 
Рис. 9. График изменения средней заработной платы по выбранным регионам 
 
Заключение 
В результате работы был разработан анализатор коллекции текстов 
вакансий для нахождения персональных навыков специалиста с помощью TF-
IDF меры. Разработан анализатор текста вакансии, с помощью собственного 
алгоритма обхода предложения и поиска наборов «Навык-Оценочное слово». 
Определена структура базы данных для хранения информации о вакансиях с 
помощью 
PostgreSQL. 
Разработан 
метод 
группировки 
вакансий 
по 
специализациям. Разработано пользовательское приложение, предоставляющее 
пользователю доступ к результатам анализа вакансий.  
В дальнейшем планируется совершенствование группировки путем 
разработки более сложного метода кластеризации. Это позволит более точно 
определять группы и уменьшит влияние «выбросов» на группы. Также 
планируется усовершенствовать метод извлечения персональных навыков для 
ускорения работы обработчика текста. 
 
 
64 
Благодарности 
Статья подготовлена в рамках разработки образовательного кейса для НТУ 
Сириус при финансовой поддержке РФФИ в рамках научного проекта № 19-37-
51028. 
 
 СТАТЬЯ
Аннотация
. На примере одного формата проектной документации по 
трубопроводам предлагается технология автоматизированной верификации 
документов, 
а 
именно 
проверки 
принципиальных 
схем 
водоводов 
и 
соответствующего текста.  
Ключевые 
слова: 
цифровая 
технология, 
трубопровод, 
схема, 
изображение, текст, автоматизированная верификация. 
Введение 
В связи с увеличением количества цифровой документации в нефтяной 
отрасли [1] актуальна и возможна более широкая автоматизация ее верификации. 
Здесь 
существуют 
2 
направления: 
обработка 
принципиальных 
схем 
трубопроводов для сравнения их со стандартами и требованиями заказчика и 
проверка орфографии и адекватности текстов. 
В [2, 3], в частности, рассматривается теория комплексной проверки 
качества технической документации: обсуждается методология обработки 
документов, отмечается корреляция ошибок в производстве и в проектировании. 
Работ по автоматизации верификации проектной документации найдено не 
было. Автоматизированная оцифровка схем трубопроводов в [4] описана только 
на уровне консольного интерфейса, и нет проверки орфографии текста. 
В то же время имеется множество цифровых технологий (ЦТ), 
выполняющих верификацию бухгалтерской документации (например, [5]). 
Соответствующие методы могут быть использованы в верификации проектной 
документации. 
Ниже приводятся результаты исследования созданного программного 
модуля. 
 
 
66 
1. 
Новый модуль поддержки  
верификации проектной документации 
 
Приведем сведения о исследуемом здесь программном модуле поддержки 
верификации текста и принципиальных схем трубопроводов. Модуль реализует 
автоматическую классификацию изображений принципиальных схем методом 
логистической регрессии [6], автоматическое распознавание текста на них с 
помощью нейронной сети LSTM [7], встроенной в используемое приложение 
Tessaract [8], и проверку орфографии основного текста текстовым редактором 
MySpell встроенным в библиотеку PyEnchant [9].  
Логистическая регрессия – статистическая модель, используемая для 
прогнозирования вероятности возникновения некоторого события путем его 
сравнения с логистической кривой.  
Для обучения алгоритма автоматической классификации изображения 
создан набор данных из документации Роснефти, находящейся в открытом 
доступе на сайте ТЭК-Торг [10]. Готовый набор таких данных не обнаружен. В 
классификации используется система векторизации изображений «Гистограмма 
направленных градиентов» (ГНГ) [11]. 
LSTM – тип рекуррентной нейронной сети, способный обучаться 
долгосрочным зависимостям. 
 Для распознавания текстов на изображении применяется система 
оптического распознавания символов Tessaract, настроенная на русский язык. 
Для поиска орфографических ошибок применена библиотека PyEnchant со 
словарем на русском языке. В этой библиотеке реализованы методы проверки 
орфографии и исправления ошибок (предлагаются варианты слов из словаря). 
Существует возможность дополнять этот словарь. 
 
 
 
 
67 
2. 
Эксперимент 
 
2.1. Классификация принципиальных схем трубопроводов 
Примеры из набора данных для оценки качества классификации 
приведены на рис. 1 и 2 [12]. Он разбит на обучающую и тренировочную 
выборки. В них изображения разделены на классы: «корректный» (рис. 1) и 
«некорректный» (рис. 2). В обучающей выборке – 60 изображений, в 
тренировочной – 16. 
Изображения считываются и сжимаются до размерности 200x200. Затем на 
каждой схеме выделяются признаки методом ГНГ – HOGDescriptor(), 
встроенным 
в 
библиотеку 
OpenCV 
[13]. 
На 
полученных 
векторных 
представлениях 
изображения 
обучается 
классификатор 
логистической 
регрессии, реализованный в библиотеке машинного обучения sklearn [14]. 
Получена точность классификации 97%. Высокий процент связан с 
выделяющимися признаками некорректных изображений, такими как: размытие, 
искривление, гауссовский шум. Из-за малого объема обучающей выборки нет 
гарантированной устойчивости классификации в случаях меньших различий 
выборок (образов схем трубопроводов). 
2.2. Чтение текста с изображения принципиальной схемы 
Для чтения текста на изображении используются: модуль pytessaract, 
распознающий текст в изображении с помощью Tessaract OCR; методы OpenCV 
считывания и повышения качества изображения символов медианной 
фильтрацией [15]. Пример верифицируемого текста представлен на рис. 1, где 
над изображением расположен некорректный заголовок. 
 
 
 
 
68 
 
Рис. 1. Пример «корректного» изображения 
 
 
 
 
69 
 
 
Рис. 2. Пример «некорректного» изображения
 
 
70 
 
 
 
Рис. 3. Результат распознавания текста на изображении 
 
На рис. 3 представлен результат распознавания текста на изображении, где 
номера 1-3 обозначают исследуемые изображения из выборки. Видны ошибки 
вследствие низкого разрешения изображений и небольшого размера части 
текста. Поэтому требуется либо разработка значительно более точного 
алгоритма распознавания текста, либо повышение качества изображений. Может 
помочь и увеличение шрифта надписей.  
 
2.3. Проверка орфографии текста 
Для проверки орфографии использована библиотека PyEnchant на языке 
Python. 
Данная 
библиотека 
реализует 
взаимодействие 
с 
различными 
алгоритмами проверки орфографии. В исследовании используется алгоритм 
проверки орфографии из Aspell. Этот алгоритм проверяет правописание слов в 
тексте посредством сравнения со словарем, добавленным в модуль. Для 
проверки русского языка был добавлен русский словарь из LibreOffice. 
Отсутствующие слова можно добавить. С опытом работы модуля увеличится 
точность проверки орфографии за счет расширения словаря. 
 
 
71 
 
 
Рис. 4. Пример проверки орфографии в выражении:  
«Это правильный, но не визде тект» 
 
На рис. 4 представлен пример проверки орфографии сообщения через 
консольный интерфейс. 
Заключение 
Проведенные эксперименты показали работоспособность предложенных 
принципов. Требуется повышение точности и устойчивость классификации 
принципиальных схем путем расширения обучающего набора данных и 
добавления классов, соответствующих проблемам на принципиальных схемах.  
В распознавании текстов документации, проверке их структуры, 
пунктуации, орфографии требуются искусственные нейросети. Это повысит 
семантическую адекватность обработки текстов.  
Исследованный программный модуль станет частью разрабатываемой 
Web-системы поддержки верификации схем трубопроводов. 
 
 
 
 
72 
 СТАТЬЯ
Аннотация
. В статье представлен процесс разработки api для 
автоматизированного анализа русскоязычных комментариев в социальных 
сетях, и алгоритма классификации токсичных, ругательных комментариев. 
Полученное API будет использоваться в Web-сервисе поддержки деятельности 
русскоязычного модератора группы в социальных сетях.  
Ключевые слова: API-приложение, модерация сообщений, обработка 
естественного языка, линейные алгоритмы классификации. 
Введение 
Спрос на услуги модератора социального сообщества с каждым годом все 
увеличивается [1], но системы поддержки его работы из-за сложности 
классификации 
комментариев 
практически 
отсутствуют. 
Однако, 
с 
популяризацией алгоритмов классификации текста проблема модерации 
комментариев становится решаемой. Потому задача разработки API-приложения 
для классификации русскоязычных комментариев социальных сетей с помощью 
алгоритмов классификации текста, является актуальной. 
Существующие приложения для модерации сообщений 
На данный момент приложений для автоматизированной модерации 
социальных сетей не существует, однако во многих социальных сетях 
внедряются простые фильтры [2] на основе списка запрещенных слов, 
составляемого модератором. Данные фильтры позволяют удалять сообщения с 
ругательствами или какими-то специальными запрещенными словами. Однако 
семантику сообщения такие фильтры не учитывают, что часто приводит к 
удалению вполне безобидных сообщений, либо пропуску комментариев с более 
тонким оскорблением.  
 
 
75 
Также проводились исследовательские работы [3,4] по классификации 
токсичных комментариев с помощью линейных классификаторов и нейронных 
сетей, показавшие хорошие результаты точности. Однако, большинство работ в 
данной сфере ведется относительно комментариев на английском языке, а не на 
русском, и используемый набор данных может быть ненадежен. 
API классификации сообщений 
Было решено разрабатывать API на языке Python, поскольку на нем 
реализовано множество модулей машинного обучения и он довольно прост в 
изучении. 
Для разработки API классификации сообщений был собран и вручную 
размечен набор данных, состоящий из 5000 комментариев. Комментарии взяты 
из социальной сети ВКонтакте с помощью библиотеки vk_api. 1135 
комментариев отмечены как токсичные, 3865 комментариев – не токсичные. 
Классы несбалансированы, а набор данных мал. 
 
 
 
Рис. 1. Пример токсичного сообщения 
 
На рис. 1 представлен пример токсичного сообщения из социальной сети 
ВКонтакте. 
Для анализа набора данных были выделены дополнительные признаки, с 
помощью библиотек Gensim, Dostoevsky и простого фильтра ругательств.  
Выделены были следующие признаки: наличие указания личности, места, 
организации; негативный, позитивный, нейтральный эмоциональные окрасы; 
наличие ругательств. 
 
 
76 
 
Рис. 2. Пример признаков для комментариев 
На рис. 2 представлен пример выделенных признаков для комментариев, 
где: 
 toxic – токсичность, 
 PER – указание на личность, 
 LOC – указание не место, 
 ORG – указание на организацию, 
 positive – позитивный эмоциональный окрас, 
 negative – негативный эмоциональный окрас, 
 rude – наличие ругательства. 
Далее были получены результаты корреляции Пирсона для выделенных 
признаков с вручную размеченной токсичностью. 
Таблица 1. Коэффициент корреляции Пирсона 
Функция 
параметра с 
F("Toxic") 
Коэф. Корел. Пирсона 
p 
F("PER")  
-0.013487633351327665 
0.3408563255644402 
F("LOC") 
-0.06327667493088972 
7.721113062130543e-06 
F("ORG") 
-0.017656503724165926 
0.6323986893140852 
F("positive") 
-0.04727098761866796 
0.0008380399482287616 
F("negative") 
0.3613570789484974 
9.22316478737137e-154 
F("neutral") 
-0.2673834873578516 
1.9770095855740052e-82 
F("rude") 
0.4134216419158385 
2.8822364997752216e-205 
 
По представленным в таблице 2 коэффициентам заметна сильная 
корреляция 
параметра 
токсичности 
с 
ругательствами 
и 
негативным 
эмоциональным окрасом. 
 
 
77 
Тогда 
для 
классификации 
стала 
задача 
предобработки 
текстов 
комментариев. На этапе предобработки из комментариев были удалены символы 
пунктуации, стоп-слова, и все слова были приведены к начальной форме с 
помощью библиотеки PyMorphy2. 
Далее для построения векторных моделей сообщения было решено 
использовать метрику TF для слов, поскольку ее использование более 
обоснованно на малых текстах комментариев, чем метрика TFIDF. Также 
использовалась векторная модель Word2Vec(min_count=5, window=10, size=150, 
negative=10, 
alpha=0.03, 
min_alpha=0.0007, 
sample=6e-5, 
sg=0), 
хорошо 
показавшая себя в классификации текстов [5]. Получаемые в модели вектора 
слов усреднялись для получения вектора сообщения. 
Для классификации было решено использовать линейные классификаторы 
MNB(alpha=1), SVC(C=0.1), NBSVM(alpha=1, C=1) [6], поскольку на малом 
количестве записей их использование более обоснованно, чем использование 
нейронных сетей [7]. Выборка записей была предварительно разделена на 
тестовую и тренировочную в отношении 1/5. 
Таблица 2. Результаты оценки классификаторов 
Метод 
 toxic 
 
 untoxic 
Accuracy
Precision Recall 
F1 
Precision
Recall 
F1 
Count_Vec 
SVC 
0.819 
0.438 
0.571 
0.780 
0.954 
0.858 
0.787 
MNB 
0.878 
0.247 
0.385 
0.732 
0.984 
0.839 
0.745 
NBSVM 
0.825 
0.433 
0.568 
0.779 
0.956 
0.859 
0.787 
Word2Vec  
SVC 
0.842 
0.707 
0.769 
0.842 
0.842 
0.902 
0.862 
MNB 
0.778 
0.779 
0.778 
0.894 
0.894 
0.894 
0.857 
NBSVM 
0.846 
0.709 
0.771 
0.871 
0.938 
0.903 
0.864 
 
Из результатов таблицы 1 следует, что наибольшей точностью 0.864 
(Accuracy) обладает набор Word2Vec векторизация и NBSVM классификация, 
хотя в некоторых частных случаях от данной классификации не отстает 
 
 
78 
Word2Vec векторизация с MNB классификацией. Потому для классификации 
был выбран набор Word2Vec + NBSVM. 
Далее с применением фреймворка Flask было разработано API, 
позволяющее как возвращать различные данные по запросам к vk_api, так и 
определять токсичность с помощью обученного набора Word2Vec+NBSVM, а 
также определять дополнительные признаки сообщения: наличие имен 
собственных, эмоциональный окрас, наличие ругательств. 
 
 
 
Рис. 3. Пример запроса на получение токсичности пользователя 
 
На рис. 3 представлен пример результата запроса на получение средней 
токсичности 100 первых постов пользователя. Ограничение в 100 постов введено 
из-за запрета на большее количество запросов к VK единоразово. 
Заключение 
Был составлен, размечен и проанализирован набор данных по токсичным 
комментариям, состоящий из 5000 тысяч комментариев из социальной сети 
ВКонтакте. Далее был разработан алгоритм классификации токсичных 
комментариев на основе Word2Vec и NBSVM алгоритмов с точностью 
классификации 86.4%, а также обосновано его преимущество в сравнении с 
иными алгоритмами. Было разработано API, позволяющее: взаимодействовать 
через запросы с данными из социальной сети ВКонтакте, проводить 
 
 
79 
классификацию токсичности комментариев, а также получать эмоциональный 
окрас, наличие ругательств и наличие имен собственных в тексте. 
Разработанное API предполагается использовать в полноценном WEB-
сервисе поддержки деятельности модератора групп в социальных сетях. В 
будущем также полученный набор данных предполагается расширить и 
добавить определение разных видов токсичности сообщений, что может 
повысить точность определения токсичности и повысит полезность приложения 
в работе модератора соц. сети. 
 СТАТЬЯ
Аннотация
. В данной статье представлено описание решения по 
распознаванию и обнаружению препятствий перед беспилотным летательным 
аппаратом (БПЛА) во время пилотирования с использованием встраиваемой 
системы компьютерного зрения – NVIDIA Jetson TX1. 
Ключевые слова: NVIDIA Jetson TX1, компьютерное зрение, машинное 
обучение, распознавание, обнаружение, БПЛА. 
 
Развитие машинного обучения и нейронных сетей способствовало 
распространению технологий компьютерного зрения. Под этими технологиями 
подразумевается получение данных со своеобразного органа зрения – 
оптической камеры, и их обработка при помощи использования математических 
методов и моделей. Применение технологий компьютерного зрения можно 
встретить во многих сферах: в системах видеонаблюдений, в медицине, в 
производственных процессах и т.д. 
В 
последнее 
время 
особую 
актуальность 
приобрела 
задача 
по 
использованию технологий компьютерного зрения в беспилотных аппаратах 
(как летающих, так и наземных): инвентаризация на складах, отслеживание 
нарушений правил дорожного движения, аэрофотосъемка и многое другое.  
Так, например, пилотирование большинством беспилотных летательных 
аппаратов (БПЛА) в таких задачах ведется вручную при помощи пультов 
дистанционного управления. Нехватка кадров, возможные потери связи с 
аппаратом могут привести к лишним затратам. Чтобы автоматизировать 
деятельность оператора, необходимо наличие системы автономной навигации. 
 
 
81 
Одним из главных этапов в решении этой проблемы является задача по 
распознаванию 
и 
обнаружению 
препятствий 
перед 
БПЛА 
во 
время 
пилотирования. 
В рамках проекта по созданию автономной системы навигации БПЛА 
необходимо было разработать модель нейронной сети, использование которой 
позволит обнаруживать и распознавать возможные препятствия перед 
беспилотником. Использование суперкомпьютера Jetson TX1 обеспечит 
производительность и энергоэффективность визуальных вычислений прямо во 
время полета. Архитектура NVIDIA Maxwell™ с 256 ядрами CUDA, 64-битные 
процессоры, возможности кодирования и декодирования видео 4K, а также 
интерфейс камеры со скоростью 1400 мегапикселей в секунду делают эту 
систему лучшей для глубокого обучения, компьютерного зрения и графических 
вычислений [1]. 
Подготовка данных для обучения модели проводилась в несколько этапов: 
1. Разбиение нескольких видеозаписей общей длиной около 15 минут на 
кадры при помощи библиотеки Python OpenCV [2]. 
2. Ручная фильтрация полученных кадров – удаление всех снимков, на 
которых отсутствуют какие-либо препятствия. 
3. Графическая СТАТЬЯ
аннотация
изображений в XML-файлы формата Pascal VOC 
при помощи инструмента labelImg [3]. 
Обучение нейронной сети выполнялось на основании базовой модели 
MobileNet SSD [4] (рис. 1), которая отличается своей мобильностью, скоростью 
и точностью. Трансферное обучение строится на том, что знания, накопленные в 
модели, подготовленной для выполнения одной задачи, могут быть перенесены 
на другую модель, чтобы помочь в построении прогнозов.  
 
 
82 
 
Рис. 1. Модель «MobileNet SSD» 
В процессе итерирования обучения нейронной сети было выявлено, что 
оптимальное количество эпох равнялось 27. Именно при этом значении сумма 
регрессионной и классификационной потерь данных для валидации была 
наименьшей – 2,2716 (рис. 2). 
 
Рис. 2. Зависимость потери для данных валидации от эпох 
В ходе выполнения сравнительного анализа выполнения обучения на CPU 
и GPU микрокомпьютера было выявлено, что время, затрачиваемое на 
вычисления, с использованием GPU более чем в 60 раз меньше, чем при 
использовании CPU. На рисунке 3 представлены графики затрат времени на 
обучение нейронной сети для трех эпох при использовании GPU или CPU. 
 
 
83 
 
а) 
 
 
 
 
 
 
б) 
Рис. 3. Зависимость времени обучения от эпох при: а) использовании CPU;  
б) использовании GPU 
Выполнение графических вычислений проходит в высокопроизводи-
тельной среде выполнения NVIDIA TensorRT [5], включающей в себя 
оптимизатор вывода глубокого обучения и среду выполнения, которая 
обеспечивает низкую задержку и высокую пропускную способность для 
приложений вывода глубокого обучения. 
Для взаимодействия обученной модели с высокопроизводительной средой 
TensorRT необходима ее конвертация в открытый формат, созданный для 
представления моделей машинного обучения, – ONNX [6] (рис. 4). 
 
Рис. 4. Описание процесса преобразования размеченных данных  
в модель нейронной сети 
TensorRT предоставляет оптимизацию INT8 и FP16 для производственных 
развертываний приложений вывода глубокого обучения, таких как потоковое 
видео, распознавание речи, рекомендации, обнаружение мошенничества и 
обработка естественного языка. Снижение точности вывода значительно 
снижает задержку приложений, что является обязательным требованием для 
многих сервисов реального времени, а также автономных и встроенных 
приложений [5]. 
 
 
84 
Для тестирования полученной модели использовалась видеозапись с 
дрона, которая передавалась на модуль обнаружения в виде потока данных  
(рис. 5). 
 
Рис. 5. Описание процесса использования модели нейронной сети 
По результатам тестирования, представленным на рисунке 6, было 
выяснено, что среднее время вычислений нейронной сети равнялось 14,9 мс, а 
время визуализации – 4,5 мс. 
 
Рис. 6. Производительность обработки входящего видеопотока 
 
Таким образом, можно сделать вывод, что изложенный способ 
использования компьютерного зрения с применением графического процессора 
способствует разработке различных систем мониторинга и обработки 
графических данных в режиме реального время. В свою очередь, развитие 
 
 
85 
вычислительных мощностей позволит автоматизировать множество важных 
процессов, требующих участия человека. 
 
 СТАТЬЯ
Аннотация
. В статье описывается процесс создания голосового 
помощника 
для 
платформы 
1С: Предприятие. 
Представлены 
методы 
распознавания и синтеза голоса. Проведен анализ мер сходств. Реализован 
алгоритм работы голосовых помощников. Обозначены перспективы развития 
программного приложения. 
Ключевые слова: голосовой помощник, распознавание речи, синтез речи, 
метрики сходства, голосовой ассистент. 
Введение 
Информационное общество предполагает широкое применение различных 
информационных технологий в повседневной деятельности. На данный момент 
невозможно представить работу предприятия без информационной системы, 
которая обеспечивает распространение, хранение и обработку информации.  
Самым популярным решением на российском рынке выступают продукты 
1С. С накоплением большого количества данных информационные системы 
становятся неструктурированными, ориентироваться в них становится сложнее. 
Работа ограниченна рутинными действиями, на которые затрачивается основная 
часть времени.  
На 
сегодняшний 
день 
популярным 
инструментов 
расширения 
информационных систем становится внедрение цифровых ассистентов с 
голосовым управлением. Голосовые помощники, существующие на данный 
момент, справляются с задачей поиска и обработки информации, а также 
выполнением определенных действий. Привязать существующего голосового 
помощника к платформе 1С: Предприятие невозможно. Поэтому для улучшения 
системы необходимо разработать универсального голосового ассистента, 
 
 
87 
который будет подключаться к любой информационной базе. Данное внедрение 
повлияет на работу персонала: появится возможность обращаться к данным из 
базы голосом, выполнять часть работы на фоне, не переключая внимания с 
основной деятельности. Кроме того предполагается, что информационная 
система с голосовым помощником повысит свою конкурентоспособность на 
рынке с похожими продуктами. 
Постановка задачи 
В данной работе была поставлена цель – создание голосового помощника 
для платформы 1С: Предприятие на языке python с использованием библиотек. 
Для достижения поставленной цели необходимо решить ряд задач: 
 разработать алгоритм работы голосовых помощников; 
 проанализировать методы распознавания голоса; 
 сравнить меры сходства для текста; 
 изучить алгоритмы синтеза речи; 
 разработать программное приложение. 
В результате получим приложение, удовлетворяющее заявленным 
требованиям. 
Алгоритм работы системы распознавания 
Голосовые помощники, существующие на сегодняшний день, имеют 
одинаковый принцип работы, различия состоят лишь в механизмах, которые 
задействованы на том или ином этапе (рис. 1). Сначала произнесенная человеком 
речь попадает в модуль распознавания.  
 
 
Рис. 1. Алгоритм распознавания речи 
 
 
88 
На следующем этапе преобразованная в текстовый запрос речь проходит 
классификацию по интентам. Под интентом в информационном поиске 
подразумевают ключевые слова запроса. Выделяют несколько основных 
интентов исходя из предполагаемого целевого действия: 
1) получение информации; 
2) выполнение определенных навыков (например, поставить напоминание, 
открыть приложение, заказать такси); 
3) выполнение 
действий 
системы 
(например, 
прибавить/убавить 
громкость, выключиться, активироваться).  
После 
определения 
интента, 
текстовый 
запрос 
подвергается 
семантическому анализу. На данном этапе выделяются отношения между 
словами, происходит понимание текста в рамках интента. Результаты разбора 
превращаются в некоторое структурированное представление, воспринимаемое 
программой, которое называется фреймом.   
Данные из фрейма подставляются в алгоритм действий, получаемый из 
некоторой базы. Алгоритм попадает в модуль выполнения, который, помимо 
этого, знает текущий контекст диалога, знает, что происходило до этого момента. 
На основании выполненных действий генерируется текст, который попадает в 
модуль синтеза речи. Сформулированный ответ слышит пользователь. 
Распознавание голоса 
Распознавание речи проходит следующие этапы:  
1. Отделение шума от голоса (рис. 2). 
Существует несколько методов для выполнения этого этапа: 
• выделение 
признаков, 
которые 
являются 
инвариантными 
относительного шума; 
• использование 
алгоритмов, 
логика 
которых 
построена 
на 
коэффициентах линейного предсказания, мел-кепстральных коэффициентах 
(коэффициенты, характеризующие сигнал на основе его спектра и амплитуды); 
• проведение цифровой обработки (маскирование шума, шумоподавление 
с использованием нескольких микрофонов).  Под маскированием шумов 
 
 
89 
понимаются алгоритмы, при которых численные значения, которые оказываются 
сравнимыми с характеристиками шума либо игнорируются системой, либо 
получают меньшие весовые коэффициенты; 
• построение массивов микрофонов. Данная технология позволяет 
выделить направленный микрофон (наиболее значимый) с переменным лучом 
направления. 
 
Рис. 2. Этапы отделения шума от голоса 
 
2. Преобразование звука в акустические параметры. 
Звуковой сигнал разбивают на отрезки одинаковой длины. Затем с 
помощью дискретных преобразований, например, преобразование Фурье, 
преобразуют в частотную область. 
3. Приведение акустической формы сигнала к фонемам. 
Разбиение акустических параметров на области сгущения, для выделения 
элементов фонем. Полученные элементы сравниваются с эталонами. В качестве 
эталонов в словарях хранятся фонемные элементы (в зависимости от полноты 
словаря, могут храниться как фонемы слов, так и отдельных слогов).   
4. Определение последовательности фонем и преобразование к тексту. 
Существует два подхода к определению последовательности фонем: 
 
 
90 
• алгоритмы на основании цепи Маркова: на вход алгоритма поступают 
фонемы с вероятностями, из которых составляется последовательность; 
• динамическое 
программирование: 
в 
каждый 
момент 
времени 
определяется предполагаемая последовательность фонем от начала до текущего 
момента времени. 
Синтез речи 
Обратный процесс распознаванию речи, не осложненный обработкой 
шумов и акцентов, выступает синтез речи (рис. 3). Основной задачей при синтезе 
речи является превращение текста в звуковую волну, наиболее приближенную к 
человеческому голосу.   
 
Рис. 3. Алгоритм синтеза речи 
Первые этап – лингвистическая обработка. Она предусматривает, во-
первых, исправление грамматических и синтаксических ошибок (для постановки 
правильной интонации), во-вторых, представление текста в едином формате 
(расшифровка 
числовых 
последовательной, 
обработка 
аббревиатур 
и 
иноязычных вставок). Второй, третий и четвертый этапы синтеза речи 
предусматривают деление текста на составляющие до тех пор, пока  каждую 
часть нельзя описать числами. Полученные неделимые части (в зависимости от 
используемой модели имеют разную размерность), называемые фреймы, 
описывают параметрами, из которых затем создают акустическую модель. 
Благодаря акустической модели генерируют звуковые волны, воспринимаемые 
человеком как речь. 
 
 
91 
В настоящее время выделяют две основные модели синтеза речи 
(таблица 1). 
Таблица 1. Модели синтеза речи 
Название 
модели синтеза 
Описание 
Достоинства 
Недостатки 
Компилятивный 
синтез 
Конкатенации 
(склейки) 
раннее 
записанных 
диктором 
звуковых 
фрагментов 
 высокое качество 
звука; 
 естественность 
звучания; 
 высокая скорость 
синтеза 
 низкая вариативность; 
 большой объем данных 
для обучения (около 20 
часов чистой речи) 
Параметрический 
синтез 
Построение 
модели, 
описывающей 
акустический 
свойства 
аудиосигнала 
для данного 
текста 
 возможность 
генерации 
разнообразной 
интонации; 
 меньшее количество 
объема данных по 
сравнению с 
компилятивным 
синтезом 
 низкая скорость работы; 
 большая 
вычислительная сложность 
(из-за применения 
глубокого обучения) 
 
В рамках рассматриваемой задачи используется модель параметрического 
синтеза, поскольку важна гибкость произношения, при этом нет необходимости 
синтезировать большой объем текста. 
Меры сходства текстов 
Одной из задачей при написании программы выступает поиск команд, 
соответствующих 
голосовому 
запросу. 
Поэтому 
голосовой 
запрос, 
преобразованный в текст, подвергается дальнейшему анализу для нахождения 
подобия.  
Прежде чем приступать к расчету коэффициента схожести текст 
подвергается предварительной обработки: 
• замена множественных пробелов на одинарные; 
• разбиение на токены (разделенные пробелами и знаками препинания 
символы); 
 
 
92 
• удаление знаков препинания; 
• перевод в нижний регистр; 
• нормализация 
(стемминг-выделения 
основ 
слова, 
лемматизация-
приведение слов к начальной форме); 
• подсчет вхождений. 
После предварительной обработки слова представляют вектора, над 
которыми можно производить арифметические действия.  
Существует несколько метрик сходства. Самыми популярными для 
определения схожести коротких предложений выступают косинусная мера 
сходства и мера Жаккара. Обе формулы оперируют такими величинами как ݒ⃗ – 
вектор слова из первого текста, а ݓሬሬ⃗ – вектор того же слова из второго текста. 
Косинусная мера сходства: 
 
ݏ݅݉௖௢௦௜௡௘(ݒ⃗,ݓሬሬ⃗) =
௩ሬ⃗∙௪ሬሬ⃗
|௩|
ሬሬሬሬሬ⃗∙|௪|
ሬሬሬሬሬሬሬ⃗=
∑
௩೔∙௪೔
ಿ
೔సభ
ට∑
௩೔
మ
ಿ
೔సభ
∙ට∑
௪೔
మ
ಿ
೔సభ
  
Мера Жаккара: 
ݏ݅݉௃௔௖௖௔௥ௗ(ݒ⃗, ݓሬሬ⃗) =
∑
݉݅݊(ݒ௜, ݓ௜)
ே
௜ୀଵ
∑
݉ܽݔ(ݒ௜, ݓ௜)
ே
௜ୀଵ
 
 
Для определения важности слов, необходимо учитывать количество 
вхождений слова в запрос, а значит косинусная мера сходства является наиболее 
подходящим вариантом для решения этой задачи, поскольку в мере Жаккара 
учитываются лишь максимальные и минимальные значения вхождения слова.   
Реализация 
При 
создании 
программного 
обеспечения 
был 
проведен 
анализ 
механизмов распознавания и синтеза речи, выбраны оптимальные средства 
разработки. На основании библиотек было разработано приложение на языке 
Python, выполняющее роль голосового ассистента. 
 
 
93 
Запуск приложения происходит с платформы 1С:Предприятие (рис. 4). 
Если exe-файл не найден на локальном компьютере, приложение загружается с 
сервера и запускается с указанными параметрами подключения. 
Стоить заметить, что данное приложение обладает универсальностью, а 
именно 
возможностью 
подключения 
к 
любой 
информационной 
базе 
1С: Предприятие. Нет необходимости произношения дословных команд, 
поскольку вычисляется мера сходства, на основании которой происходит выбор. 
Базу доступных команд можно пополнять любыми запросами. 
 
 
Рис. 4. Запуск приложения 
 
Обращение к базе и выполнение команд начинается после произнесения 
активационной фразы, которую пользователь может указать самостоятельно в 
настройках. Все произнесенные слова отображаются в окне приложения (рис. 5).  
Также диалог с пользователем виден через систему взаимодействия, 
непосредственно на платформе 1С: Предприятие (рис. 6).  
 
 
94 
 
Рис. 5. Отображение диалога в приложении 
 
На данный момент программное приложение справляется с рядом задач: 
 получение информации из базы; 
 отправка ссылок на необходимые объекты; 
 создание напоминаний, задач; 
 формирование отчетов, с указанием необходимых параметров; 
 открытие необходимых форм. 
 
 
Рис. 6. Отображение диалога в обсуждении 
 
 
95 
Заключение 
В результате выполнения поставленных задач было разработано 
программное 
приложение 
«Голосовой 
помощник 
для 
платформы 
1С: Предприятие». Данное приложение полностью справляется с возложенными 
на нее обязанностями, а именно получением необходимой информации в 
кратчайшие сроки, выполнение рутинной работы пользователей, а также 
управление платформой голосом.  
При создании программного приложения были выполнены ряд задач: 
 разработан алгоритм работы голосовых помощников; 
 проанализированы методы распознавания и синтеза голоса; 
 проведен сравнительный анализ мер сходства для текста. 
Направления дальнейшей работы: 
 реализация интерактивного создания объектов; 
 обучение системы на отвлеченный диалог. 
 
 СТАТЬЯ
Аннотация
.  В работе представлена концепция системы проверки научно-
технической документации, позволяющей быстро проверять и форматировать 
под утвержденные стандарты оформления необходимые документы. 
Ключевые слова: приложение, научно-техническая документация, 
проверка, прототип. 
Введение 
Актуальность работы обусловлена тем, что перед подачей и защитой 
научно-технической работы проводится ее проверка научным руководителем 
или редактором. 
Если при проверке обнаруживается, что работа не соответствует стандарту 
оформления, то необходимо потратить дополнительное время на исправление 
ошибок, которое могло быть направлено на улучшение качества самой работы. 
Кроме того, существует риск, что работа не будет приведена в срок к 
соответствующему формату. 
Существует потребность создания системы, которая автоматизирует 
процесс проверки и форматирования под утвержденные стандарты оформления 
научно-технической документации. Это ускорит процесс написания и позволит 
лучше сосредоточиться на самой работе. 
Уже существуют сервисы, такие как Dogovor.ru и Doczilla, но они не 
осуществляют проверку документа и не затрагивают выбранную в статье сферу, 
а их особенностью является работа с договорами, заявлениями и другими 
организационными документами. В упомянутых решениях предлагается 
выбрать тип документа и условие, а также заполнить выделенные поля. После 
 
 
98 
чего приложение создаст документ нужного формата и даст возможность его 
скачать. 
Постановка задачи 
Для 
решения 
насущных 
потребностей 
необходимо 
разработать 
информационную систему для автоматизированной проверки оформления 
научно-технической документации, которая поможет снизить затраты времени 
на исправление и исключит человеческий фактор. 
На основании описанной проблематики составлен список задач, 
расположенных в хронологическом порядке: 
1. Изучение внутренней структуры системы.  
2. Анализ существующих решений проблемы. 
3. Сбор и анализ стандартов оформления научно-технической 
документации. 
3.1. Поиск утвержденных действительных стандартов оформления 
научно-технической документации. 
3.2. Формирование перечня основных параметров утвержденных 
стандартов. 
4. Создание приложения. 
4.1. Поиск необходимого инструментария для разработки. 
4.2. Разработка системы управления базами данных. 
4.3. Разработка алгоритмов форматирования документов и поиска 
несоответствий утвержденным стандартам оформления. 
4.4. Создание веб-интерфейса. 
4.5. Тестирование. 
4.6. Анализ полученных результатов. 
Для 
проектирования 
структуры 
системы 
необходимо 
понять 
взаимодействие пользователя и приложения. 
На рисунке 1 представлен функциональная модель обработки документа 
приложением, который показывает взаимодействие пользователя и приложения. 
 
 
99 
 
Рис. 1. Функциональная модель работы приложения 
Пользователю предлагается веб-интерфейс, в котором он выбирает 
стандарт оформления и загружает документ для форматирования и проверки. 
Далее документ попадает на сервер, где и обрабатывается. После обработки 
документ сохраняется в хранилище с предоставлением возможности скачивания, 
и выводится результат проверки.  
Практическая реализация 
Для разработки приложения были выбраны следующие инструменты: 
● MySQL – реляционная система управления базами данных для работы с 
базой данных; 
● Laravel – PHP-фреймворк с открытым кодом, для структурированной и 
быстрой работы с остальными инструментами разработки; 
●  HTML – язык разметки страниц; 
● CSS – таблицы стилей для описания страниц; 
● JavaScript – язык сценариев для придания интерактивности веб-
приложению; 
● PHP – язык общего назначения, используется для обработки 
документов; 
●  библиотеки для обработки word документов. 
 
 
100 
Все эти инструменты позволили реализовать основные функции 
приложения. 
Практическая реализация 
Был разработан прототип приложения, который состоит из: 
● главной страницы с инструкцией и описанием приложения; 
● страницы 
обработчика, 
где 
можно 
выбрать 
тип 
проверяемой 
документации, загрузить документ и скачать документ после обработки. 
Результат обработки документа представлен на рисунке 2. 
 
 
Рис. 2. Результат обработки документа 
 
В текущей версии программы в алгоритм обработки включена проверка 
нумерации страниц, цвета текстовых абзацев, межстрочного интервала, верхнего 
и нижнего интервалов у определенных абзацев. Для проверки предлагается один 
вид документа – это научно-исследовательская работа. Проверяемые свойства 
хранятся в коде программы. 
Кроме того, создано хранилище документов. Для разграничения 
возможности скачивания документов в имени каждого файла содержится 
уникальный код сессии. 
 
 
101 
Перспективы исследования 
В дальнейшем планируется усовершенствовать алгоритм обработки 
документации, что включает в себя добавление: 
● проверки всех возможных типов абзацев; 
● сверки оглавления с имеющимися заголовками;  
● проверки дублирующихся подписей рисунков; 
● детального вывода ошибок в приложение; 
● системы авторизации и хранение персонализированных документов; 
● поддержки 
других 
форматов 
и 
ГОСТов 
научно 
технической 
документации; 
● поддержки прочих версий word файлов расширения docx. 
Весь этот функционал позволит решить все основные и дополнительные 
проблемы приложения. 
 СТАТЬЯ
Аннотация
. В работе представлен опыт разработки подсистемы триажа 
пациентов на плановую операцию сердца в региональной медицинской 
информационной системе Тюменской области с использованием машинного 
обучения. Целью данной работы является повышение эффективности 
взаимодействия медицинского персонала с пациентами в медицинской 
информационной системе. В работе отражены результаты проектирования 
подсистемы триажа, составлены подробные схемы каждого модуля. Автор 
описывает 
все 
этапы 
построения 
моделей 
машинного 
обучения 
для 
прогнозирования периода пребывания пациента в стационаре и прогнозирования 
вероятности выздоровления. В работе отражен опыт использования облачного 
сервиса IBM Cloud Pak и применения в качестве алгоритма градиентного 
бустинга. 
Ключевые слова: машинное обучение, медицина, data science, 1С, IBM 
Cloud Pak. 
Введение 
Автоматизация процессов, протекающих в жизнедеятельности объектов 
здравоохранения, существенно повышает эффективность их работы, что 
напрямую влияет на качество медицинского обслуживания пациентов. 
Оснащение 
медицинских 
учреждений 
качественным 
и 
современным 
программным обеспечением позволяет упростить задачу хранения и обработки 
большого количества данных, требуемых для качественного обслуживания 
пациентов. Вследствие этого, продуктивность врачебного персонала повышается 
 
 
103 
и большинство внутренних процессов протекают без участия человека на основе 
автоматизации. 
Находят 
свое 
применение 
и 
современные 
технологии 
интеллектуального анализа данных. Подтверждением этому является внедрение 
на 
федеральном 
уровне 
вертикально-интегрированной 
медицинской 
информационной системы (ВИМИС) с 2020 года. На данный момент, одна из 
задач ВИМИС в области анализа данных – это прогнозирование онкологических 
заболеваний, но повсеместно ВИМИС захватывает и другие медицинские 
области. 
В региональной медицинской информационной системе Тюменской 
области, начиная с 2015 года, накопился достаточный объем данных, 
нуждающихся 
в 
изучении 
и 
их 
анализе. 
Ранее, 
уже 
применялся 
экспериментальный опыт разработки модели машинного обучения, связанный с 
оценкой рисков сердечно-сосудистых заболеваний. Точность построенной 
модели составила 97%. Со временем открываются новые области и идеи для 
применения интеллектуального анализа данных. Прежде всего, они достигаются 
путем общения напрямую с пользователями системы – врачебным персоналом. 
Но следует понимать, что медицина – сложная и важная область в нашей жизни, 
и применение таких новшеств должно происходить осознано. Использование 
результатов машинного обучения должно носить рекомендательный характер. 
1. Постановка задачи 
Подсистема триажа пациентов на плановые операции с использованием 
интеллектуального анализа данных предназначена для медицинской сортировки 
пациентов, ожидающих проведения оперативных вмешательств, с учетом их 
первичных показателей здоровья и других значимых факторов. Главная идея 
подсистемы – создание инструмента для организации электронной очереди на 
операции с применением машинного обучения. 
Целью создания данной подсистемы является повышение эффективности 
взаимодействия медицинского персонала с пациентами в медицинской 
информационной системе. 
 
 
104 
Понятие «эффективность» включает в себя три ключевых показателя: 
 
уменьшение затрачиваемого времени на регистрацию пациента для 
проведения оперативных вмешательств; 
 
повышение пропускной способности отделения; 
 
сокращение числа промежуточных бюрократических этапов от 
первичного приема до проведения операции; 
Для достижения поставленной цели были определены следующие задачи:  
 
создание модели для прогнозирования периода пребывания пациента 
в стационаре; 
 
создание модели для прогнозирования вероятности выздоровления 
пациента; 
 
разработка модуля прогнозирования нагрузки коечного фонда 
отделения; 
 
разработки 
модуля 
очередей 
пациентов 
на 
оперативные 
вмешательства. 
Перед разработкой подсистемы было проведено интервьюирование 
медицинского персонала, который будет работать с системой. В ходе 
обсуждения были выявлены необходимые требования к подсистеме и составлена 
контекстная диаграмма. Были выявлены четыре роли пользователей, которые 
будут непосредственно работать с подсистемой – врач, заведующий отделением, 
главный врач (руководители МО) и сотрудник МИАЦ. Главный врач и МИАЦ 
получают из системы отчеты в срезе МО, отделений, номенклатур медицинских 
услуг (НМУ) и по полисам (ОМС, ДМС и т.д.), также главный врач может 
просматривать прогнозы нагрузки на отделения. Добавлением пациентов и 
изменением их номеров в очереди занимаются врач и заведующий отделением. 
Заведующий имеет дополнительную возможность исключать пациентов из 
очереди и прогнозировать нагрузку на отделение. 
 
 
 
 
105 
2. Проектирование подсистемы триажа пациентов на операции 
Подсистема триажа пациентов на плановые операции – это подсистема, 
предназначенная для организации электронной очереди и прогнозирования 
состояния 
коечного 
фонда 
по 
отделениям 
с 
применением 
методов 
интеллектуального анализа данных. Данная подсистема является модульной, 
работа которых может не зависеть друг от друга. 
Обработка и хранение полученных данных из моделей машинного 
обучения производится внутри медицинской информационной системы (МИС) 
на базе платформы 1С. 
Функционирование моделей ML находится вне контура МИС. 
На рисунке 1 изображена общая схема разрабатываемой подсистемы 
триажа пациентов. 
 
Рис. 1. Общая схема структуры подсистемы триажа пациентов 
3. Модуль прогнозирования нагрузки коечного фонда отделения 
Данный модуль предназначен для прогнозирования загруженности 
отделения по количеству занятых и свободных коечных мест. При 
прогнозировании собирается первичная информация по каждому пациенту, 
 
 
106 
который находится на лечении в стационаре и по результатам, формируется 
возможное состояние коечного фонда на указанную дату прогноза. Пациенты в 
отделение могут поступать несколькими способами: планово, экстренно и путем 
перевода из других отделений. Для обеспечения запаса мест для экстренных 
пациентов, модуль учитывает процент резервных коек по каждому из отделений. 
Наглядная схема работы изображена на рисунке 2. 
 
Рис. 2. Схема работы модуля прогнозирования состояния коечного фонда 
4. Модуль организации очереди пациентов на операции 
Работа 
данного 
модуля 
направлена 
на 
обеспечение 
локального 
инструмента МИС, предназначенного для организации очереди пациентов на 
различные операции. Ответственное лицо имеет возможность использовать 
модуль как вручную, так и в автоматическом режиме, с помощью оценки 
«рейтинга» пациента обученной моделью машинного обучения. При добавлении 
пациента в очереди, по нему собирается первичная информация, необходимая 
для прогноза вероятности его выздоровления и его периода пребывания в 
стационаре. Затем, данные передаются в модели, которые возвращает результат 
в виде вероятности выздоровления пациента и периода его пребывания в 
стационаре. По окончанию, результирующая функция вычисляет «рейтинг» 
пациента и назначает ему номер в очереди. Ответственное лицо, или врач, может 
 
 
107 
скорректировать итоговый результат, и добавить пациента в очередь вручную. 
Общая схема работы модуля представлена на рисунке 3. 
 
Рис. 3. Схема работы модуля организации очереди пациентов на операцию 
 
5. Построение модели машинного обучения «Прогнозирование 
периода пребывания пациента в стационаре» 
Поскольку основной задачей данной модели является прогнозирование 
периода пребывания пациента в стационаре, то был собран ряд данных, 
связанных непосредственно с его госпитализацией. Сбор данных осуществлялся 
в разрезе случаев (медицинских карт). Данные выгружались с рабочей базы 
Областной 
клинической 
больницы 
№1 
города 
Тюмени 
по 
кардиохирургическому отделению в период с 1 января 2018 года. Данные 
пациентов были деперсонифицированы путем выгрузки их системных 
идентификаторов. В МИС, на данный момент, записывается большой объем 
данных по пациенту в период его лечения в стационаре, но для решения данной 
задачи было принято решение выделить следующий ряд данных, загружаемых 
из МИС: пол, дата рождения, дата госпитализации, диагнозы, дата выписки. 
Дальнейшая обработка данных для обучения модели осуществлялась в среде 
Python, с использованием библиотек: Pandas и LabelEncoder. 
 
 
108 
Признак «Пол» был преобразован в категориальный признак «SEX» по 
принципу: «0» – женский пол, «1» – мужской пол. Большинство записей (около 
67%) принадлежит мужскому полу.  
Признак «Дата рождения» преобразован в непрерывный признак «AGE» 
(возраст). Большая часть пациентов относится к возрастной группе от 50 
до 70 лет.  
Признак «Дата госпитализации» был преобразован в категориальный 
параметр 
«MONTH_OF_HOSPITALIZATION» 
(месяц 
госпитализации), 
закодированный по порядковому номер месяца в году. Все значения 
распределены равномерно, но в наиболее популярными являются летние и 
осенние месяцы.  
Признак «Дата выписки» изначально был преобразован в непрерывный 
признак «Время пребывания в стационаре» путем нахождения разности между 
двумя датами: госпитализации и выписки, а затем был сформирован новый 
признак «TIME_OF_HOSPITALIZATION_INTERVAL», который разделен на 3 
класса: «до 5 дней», «от 5 до 14 дней», «от 14 дней». Разделение на такие классы 
было согласовано с заказчиком. Этот признак, в дальнейшем будет являться 
целевым.  
В МИС диагнозы хранятся в международном формате МКБ-10. Например, 
диагноз с кодом «I21.3», подразумевает под собой острый трансмуральный 
инфаркт миокарда неуточненной локализации. При обсуждении возможных 
вариантов преобразования этого параметра с врачебным персоналом, было 
принято решение подсчитывать количество диагнозов по родительскому 
диагнозу в рамках одного случая. Т.е. был взят только родительский диагноз до 
точки, в результате из кода «I21.3» был получен диагноз «I21». Количество 
уникальных значений диагноза составило – 474 родительских кодов МКБ-10. 
Далее, с помощью Dummy-кодирования, для данного признака были 
созданы N новых признаков по шаблону «DIAGNOSIS_%диагноз%», где N – 
число уникальных диагнозов из выборки и %диагноз% – один из уникальных 
диагнозов.  
 
 
109 
По окончанию предобработки, было получено 5430 записей. Количество 
признаков – 495. 
Для экспериментального моделирования использовалась платформа IBM 
Cloud Pak for Data. 
В качестве тестируемых алгоритмов были выбраны классификаторы 
дерево решений, случайный лес и градиентный бустинг. Наиболее оптимальные 
показатели показал последний алгоритм – градиентный бустинг, поэтому было 
принято решение выбрать его в качестве основного и подбирать гиперпараметры 
относительно него. 
Для повышения точности модели важную роль сыграл параметр 
«Максимальная глубина» (max_depth), поскольку в исходном наборе данных 
большое количество признаков. Итоговые гиперпараметры модели получились 
следующие: число деревьев (n_estimators) – 100, Размер шага (eta) – 0.3, 
Минимальное изменение значения loss функции для разделения листа на 
поддеревья (gamma) – 0, максимальная глубина дерева (max_depth) – 30, 
L2 регуляризация (lambda) – 1, L1 регуляризация (alpha) – 1. 
В результате, модель показала хорошую точность, процент правильно 
определенных классов на обучающей выборке составил 85.43%, на тестовой – 
84.3%. Соотношение обучающей и тестовой выборки – 90 и 10% соответственно. 
6. Построение модели машинного обучения «Прогнозирование 
вероятности выздоровления» 
Прогнозирование вероятности выздоровления пациента должно иметь 
высокую точность, поскольку от этого зависит план лечения пациента. На 
данный момент, в МИС содержится большой объем неструктурированных 
медицинских документов, данные которых вводятся врачами в свободной 
форме. 
С 
недавнего 
времени 
происходит 
внедрение 
вертикально-
интегрированной медицинской системы на федеральном уровне, которая 
предназначена для сбора структурированных сведений по пациентам. Поэтому, 
сейчас правильно подготовленных данных не так много, и в рамках данной 
 
 
110 
работы было принято решение, провести эксперименты с имеющимися 
параметризированными данными – показателями здоровья пациента по общему 
анализу крови (ОАК). 
Задача данной модели заключалась в бинарной классификации пациентов 
по признаку «Выздоровление» (да/нет). В качестве предиктора выздоровления, 
по результатам обсуждения с врачебным персоналом, было принято решение 
использовать значение фракции выброса левого желудочка (ФВЛЖ). Данный 
параметр эхокардиографии отвечает за процент выброса крови в сосуды из 
левого желудочка сердца.  
Так как главная задача модели состоит в бинарной классификации, то было 
принято решение преобразовать данный показатель в бинарный признак 
«Выздоровление» (1 – да, 0 – нет). К выздоровлению относятся те случаи,  
в которых ФВЛЖ перед выпиской находится в норме (> 55%). 
Для подготовки данных для обучения модели была произведена выгрузка 
с рабочей базы ОКБ-1 за период с 1 января 2018 года по всем пациентам,  
у которых имелся медицинский документ «Протокол эхокардиографии»  
и 
присутствуют 
показатели 
здоровья 
по 
ОАК 
и 
показания 
диастолического/систолическое давления перед выпиской. 
Были выгружены следующие признаки: пол, дата рождения, вид 
транспортировки, 
состояние, 
срочность 
госпитализации, 
диагнозы, 
диастолическое давление, систолическое давление, процент эозинофилов, 
гематокрит, процент базофилов, процент моноцитов, процент лимфоцитов, 
процент 
нейтрофилов, 
базофилы, 
эозинофилы, 
лимфоциты, 
моноциты, 
нейтрофилы, тромбокрит, средний объем тромб, относительная ширина 
распределения тромбоцитов, ширина распределения эритроцитов, тромбоциты. 
Признак «Пол» был также как и в первой модели преобразован  
в категориальный признак «SEX» по принципу: «0» – женский пол, «1» – 
мужской пол. 
Аналогично, признак «Дата рождения» преобразован в непрерывный 
признак «AGE» (возраст). 
 
 
111 
Признаки 
«Вид 
транспортировки», 
«Состояние», 
«Срочность 
госпитализации» преобразованы в категориальные. Большинство пациентов 
поступало в плановом порядке, в удовлетворительном состоянии и способными 
передвигаться самостоятельно. 
Показатели здоровья не изменялись и не преобразовывались. 
Диагнозы были обработаны тем же способом, что и в первой модели (см. 
п. 5). 
ФВЛЖ, как уже было указано ранее, преобразован в бинарный классовый 
признак «Выздоровление» (1 – да, 0 – нет). В небольшой степени преобладают 
выздоровевшие пациенты. 
В результате было выгружено 1023 записи с 382 признаками. 
Моделирование производилось так же, как и с первой моделью, с помощью 
сервиса IBM Cloud Pak for Data. 
В результате, модель показала хорошую точность, процент правильно 
определенных классов на обучающей выборке составил 90,74%, на тестовой – 
91,63%. Соотношение обучающей и тестовой выборки – 90 и 10% соответ-
ственно. Итоговые гиперпараметры модели получились следующие: число 
деревьев (n_estimators) – 100, Размер шага (eta) – 0.3, Минимальное изменение 
значения loss функции для разделения листа на поддеревья (gamma) – 0, 
максимальная глубина дерева (max_depth) – 15, L2 регуляризация (lambda) – 1, 
L1 регуляризация (alpha) – 0. 
Заключение 
Процесс реализации данного проекта включает два важных аспекта: 
проектирование и реализация. 
Первый аспект – проектирование подсистемы включал в себя анализ и 
разработку различных спецификаций к проектируемой системе. На данном этапе 
должны 
быть 
сформулированы 
перечни 
специфических 
особенностей 
проектируемой системы, а также разработаны диаграммы, отражающие 
ключевые моменты в процессе жизнедеятельности системы. Также были 
 
 
112 
подобраны технологии и обсуждены цели и задачи каждого компонента 
системы.  
Второй аспект, подразумевал под собой создание моделей машинного 
обучения, 
разработку 
пользовательского 
интерфейса 
и 
программную 
реализацию всех компонентов. Для построения моделей машинного обучения 
был произведен сбор данных с рабочих баз ОКБ-1, на основе которых 
происходило обучение запланированных моделей. Полученные модели были 
размещены на выделенном виртуальном сервере, вне контура МИС. Далее, на 
основе на предыдущего этапа проектирования разрабатывалась подсистема, 
обладающая, необходимой в рамках поставленных задач, функциональностью. 
За дальнейшим развитием системы стоит тестирование, с помощью 
которого будут дорабатываться упущенные моменты на стадиях проектирования 
и разработки. Заключительными этапами разработки являются внедрение и 
эксплуатация продукта. Поскольку данная система является частью единой 
большой системы, от которой зависит множество факторов, влияющих на 
процессы внутри медицинских учреждений, то вопрос об интеграции требует 
тщательного анализа и проверок со стороны квалифицированных экспертов. 
 СТАТЬЯ
Аннотация
. В статье рассматривается исследование подходов для 
определения интересов на основе данных студентов ИМиКН в социальный сети 
«Вконтакте». Проанализированы результаты определения спрогнозированных 
интересов группы студентов с использованием кластерного анализа методом k-
средних, кластеризации графов и словарного подхода, проведена экспертная 
оценка и сделаны выводы. 
Ключевые слова: сбор данных, извлечение данных, анализ данных, 
классификация, кластеризация, графы, Python, социальная сеть. 
 
Социальные сети направлены на создание сообществ со схожими 
интересами, взглядами, увлечениями. На сегодняшний день одними из самых 
активных пользователей таких интернет-площадок являются студенты, почти 
каждый из них зарегистрирован в одной из популярных социальных сетей для 
нахождения своих единомышленников, интересных сообществ, подходящих 
мероприятий. Поэтому для университета вопрос об определении интересов 
групп студентов становится важным, так как это позволяет отследить активность 
и 
увлеченность 
студента 
в 
разных 
областях, 
чтобы 
предложить 
соответствующие конкурсы и форумы, курсы по выбору и элективные 
дисциплины и улучшить поиск целевой аудитории для формирования 
студенческих сообществ.  
Перед авторами работы была поставлена задача провести исследование 
методов для определения интересов на данных по студентам Института 
математики и компьютерных наук в социальной сети «Вконтакте», в которой 
 
 
115 
определено 28 тематик для сообществ и групп. В исследовании было решено 
выделить 17 из них: автомобили, спорт, игры, хореография, IT, кинематограф, 
образование и наука, дизайн и иллюстрация, литература, туризм и активный 
отдых, культура и искусство, животные, музыка, фотография, СМИ и блоггинг, 
мода, экономика и финансы.  
Были использованы текстовые данные о подписках и записей студентов 
ИМиКН, полученные с помощью интерфейса VK API. Для работы определены 
классы тематик T= [ݐ଴, ݐଶ, … , ݐଵ଺] и выделен класс студентов S = [ܵݐଵ, ܵଶ, … , ܵଶଵ଴]. 
Для каждого студента Sj определено количество групп в подписках в каждой 
тематике [݇௧బ, ݇௧భ, ݇௧మ, … , ݇௧భల]. 
В качестве подходов для определения интересов пользователей были 
рассмотрены следующие методы: кластеризация графов, метод k-средних и 
словарный подход. 
На первом этапе исследования был выполнен кластерный анализ методом 
k-средних, основной задачей которого является разбиение множества объектов 
определенной структуры на подмножества по некоторым комбинированным 
признакам, при этом объекты одного множества имеют примерно одинаковые 
характеристики [1].  
 
Рис. 1. Визуализация результата работы метода k-средних 
 
 
 
116 
Результат работы метода k-средних показывает соотношение студентов, 
относящихся к тематике в каждом кластере (см. рис. 1). Самым многочисленным 
оказался кластер с темой «Образование и наука», что объяснимо, так как 
исследуемыми пользователями были студенты. 
На втором этапе исследования рассматривался алгоритм кластеризации 
графов, который можно представить в виде графа, вершинами которого будут 
являться студенты, объединенные общими интересами.   
По входным данным был построен полный, неориентированный, 
взвешенный граф G, веса в котором между двумя вершинами рассчитывались 
как евклидово расстояние в 17-мерном пространстве [2]. 
Использовав алгоритм Р. Прима, было построено минимальное остовное 
дерево в графе G и отсечено (m-1) ребер с максимальным весом, где m – это 
количество желаемых кластеров, полученное эмпирическим анализом [2]. 
 
Рис. 3. Визуализация результата работы кластеризации графа 
 
В результате работы алгоритма кластеризации графов обнаружилось, что 
шестой кластер оказался с неопределенной тематикой (см. рис. 3). Исследовав 
страницы студентов, вошедших в кластер, выяснилось, что у них меньше пяти 
сообществ в подписках, что затруднило поиск похожих пользователей 
(см. табл. 1).  
 
 
117 
Таблица 1. Описание кластеров 
№ 
Тематика кластера 
Количество 
пользователей 
1 
Дизайн и иллюстрация, Культура и искусство, 
Литература, Фотография 
49 
2 
Литература, Музыка, СМИ и блоггинг 
24 
3 
IT, Игры 
29 
4 
Музыка, IT, Дизайн и иллюстрация 
41 
5 
Культура и искусство, Литература, Музыка 
28 
7 
Дизайн и иллюстрация 
23 
6 
Тематика не определена 
3 
8 
Музыка 
13 
 
На третьем этапе исследования для определения интересов студентов с 
помощью словарного подхода была произведена предобработка и группировка 
данных. По входным данным пользователя был получен «мешок слов» [4]. Для 
работы алгоритма был спроектирован словарь объемом 7645 слов со следующей 
структурой: 
{«W1»: t0, 
 «W2»: t1, 
 ... ... ... … , 
 «W7645»: t16}. 
Количественное распределение слов в словаре по тематикам приведено в 
таблице 2. 
Таблица 2. Словарь по тематикам 
№ 
Тема 
Кол-во 
№ 
Тема 
Кол-во 
0 
IT 
602 
9 
музыка 
559 
1 
автомобили 
503 
10 образование и наука 
577 
2 
дизайн и иллюстрация 
497 
11 сми и блоггинг 
305 
3 
животные 
344 
12 спорт 
572 
 
 
118 
№ 
Тема 
Кол-во 
№ 
Тема 
Кол-во 
4 
игры 
367 
13 туризм и активный отдых 
349 
5 
кинематограф 
446 
14 фотография 
287 
6 
культура и искусство 
470 
15 хореография 
362 
7 
литература 
350 
16 экономика и финансы 
535 
8 
мода 
520 
 
 
 
 
В результаты работы метода для каждого студента Sj построен список 
[݇௧బ, ݇௧భ, ݇௧మ, … , ݇௧భల], из которого выбираются 3 максимальных элемента такие, 
что max1 ≥ max2 ≥ max3, и подсчитывается среднее арифметическое всех 
элементов V. Так как студенты могут иметь несколько интересов, был 
спроектирован алгоритм индивидуального отбора тематик, в котором C – 
количество интересов для каждого студента Sj (рис. 4). 
 
Рис. 4. Блок-схема алгоритма выбора количества интересов 
 
 
119 
Выходные данные представляют собой самые интересные тематики для 
каждого студента. 
Результаты работы словарного подхода в разрезе тематик показали, что 
большинство студентов ИМиКН интересуется образованием и наукой, в то время 
как в данной группе хореографией никто не увлекается (рис. 5). 
 
 
 
Рис. 5. Результаты работы словарного подхода 
 
После проведения всех этапов исследования было сделано экспертное 
заключение. Сравнительный анализ экспертной оценки показал, что на текущих 
данных кластерный анализ методом k-средних определяет интерес верно в 67% 
случаев, кластеризация графов в 44%, а словарный подход в 61% (см. рис. 6). 
Также стоит отметить, что кластерный анализ методом k-средних 
определяет только один интерес, поэтому в экспертной оценке результатом 
может быть только однозначный ответ (см. рис. 6). 
 
 
120 
 
Рис. 6. Анализ экспертной оценки 
Таким образом, реализовав и проанализировав методы для определения 
студентов ИМиКН на группы по интересам в социальной сети ВКонтакте, можно 
сделать вывод: 
 кластерный анализ лучше справился с поставленной задачей, но, в отличие 
от остальных алгоритмов, интерес может быть только один;  
 кластеризация графов больше подходит для выделения групп с похожими 
интересами из-за структуры модели алгоритма; 
 словарный метод подходит для выявления нескольких интересов, но 
требует объемного словаря и дальнейших исследований с определением 
наилучшей метрики для выбора количества тематик. 
Благодарности 
Статья подготовлена в рамках разработки образовательного кейса для НТУ 
Сириус при финансовой поддержке РФФИ в рамках научного проекта № 19-37-
51028. 
 
 
 
 
 
121 
 СТАТЬЯ
Аннотация
. В статье рассматривается метод построения рекомендаций по 
изучению новых технологий для студентов ИТ-направлений подготовки. 
В основе лежит анализ текстов студенческих работ и метод поиска 
ассоциативных правил, построенных с использованием данных, извлеченных из 
текстов вакансий. В результате разработано веб-приложение, реализующее 
функционал рекомендательной системы навыков. 
Ключевые слова: анализ данных, поиск ассоциативных правил, 
рекомендательная система. 
В настоящее время остро стоит вопрос о трудоустройстве молодежи, 
особенно выпускников вузов. По данным выборочного исследования Росстата 
около 20% студентов ИТ-специальностей, окончивших вузы в 2017-2019 годах 
трудоустроены не по специальности. Так студент-программист при поиске 
работы часто сталкивается с проблемой несоответствия имеющихся навыков или 
их отсутствия по сравнению с теми, которые указаны в интересующих его 
вакансиях. 
Данную проблему можно решить путем выявления интересующей 
студента специализации и построения рекомендаций по изучению технологий, 
которые чаще всего используются в данной области. Технологии, которыми 
владеет студент, можно выявить из текстов его работ, а подходящие для 
изучения новые навыки можно определить путем поиска ассоциативных правил, 
на основе данных, полученных при анализе требований соответствующих 
специализаций на рынке труда. 
 
 
124 
В качестве источников данных для анализа актуальных требований рынка 
труда и профессиональной подготовки студентов были использованы тексты 
вакансий с перечислением требуемых гавыков, а также тексты выпускных 
квалификационных работ (ВКР) ИТ-направлений подготовки студентов 
Института математики и компьютерных наук Тюменского государственного 
университета. 
Анализ ВКР заключается в поиске ключевых слов – технологии, которые 
студент использовал в своей разработке. Предварительно текст подвергается 
обработке: приведение к нижнему регистру, удаление стоп-слов и токенизация 
по предложениям. Поиск использованных технологий в тексте осуществляется 
на основе подготовленного корпуса ключевых слов, специфичных для ИТ сферы. 
Таким образом, текст ВКР характеризуется совокупностью приобретенных 
студентом навыков. 
Фундаментальной 
частью 
разработанной 
системы 
является 
модифицированный подход к формированию рекомендаций на основе задачи 
поиска ассоциативных правил, предложенный в исследовании [1]. В результате 
периодического анализа автоматически обновляемых данных о вакансиях, с 
помощью алгоритма FP-Growth формируется множество правил, каждое из 
которых представляет совокупность: 
ܵ= {ܲ, ܣ, ܿ},  
где ܲ−множество компетенций, 
       ܣ−множество ассоциативных компетенций к ܲ, 
      ܿ−значение достоверности, что ܣ соответствует ܲ. 
Модификация подхода заключается в формировании специального 
векторного пространства навыков, к которому применяется алгоритм KNN, для 
отбора рекомендаций для студента. Рассмотрим формальную постановку задачи: 
 
Дано: 
 
Множество ассоциативных правил ܮ= {ܵ௜ | ݅= 1, ݊
തതതതത, ݊= |ܮ|} 
 
Множество навыков студента ܯ. 
 
 
125 
Требуется составить множество рекомендаций: 
ܴ= {ݎ | ݎ−рекоммендованная к изучению технология}. 
Алгоритм получения рекомендаций состоит из 4 этапов: 
Этап 1. Отбираем множества ассоциативных правил: 
ܮᇱ= {ܵ|ܯ⊆ܲ, |ܯ∩ܲ| = max|ܯ∩ܲ|, ܲ∈ܵ, ܵ∈ܮ } 
Этап 2. Формируем упорядоченное множество всех навыков: 
ܶ= ܲ∪ܣ∪ܯ, ܲ∈ܵ, ܣ∈ܵ, ܵ∈ܮ′ 
 
   Формируем векторное пространство навыковܸ, где 
ݒ= (ݒ଴, ݒଵ, … , ݒ௠), 
ݒ௜= ൝
1, если ݐ௜∈ܲ∪ܯ,
ܿ, если ݐ௜∈ܣ\ܯ, ܿ∈ܵ,
0, если ݐ௜∉ܲ∪ܯ,
 
݉= |ܶ|, ݐ௜∈ܶ, ݒ∈ܸ, ܵ∈ܮᇱ, ܲ∈ܮᇱ, ܣ∈ܮᇱ, |ܸ| = |ܮᇱ| + 1 
Этап 3. Вычисляем расстояние от ݒ଴до остальных векторов и выбираем ݇ 
ближайших в множество ܸ′. 
Этап 4. Формируем множество ܶᇱ= ൛ݐ௜หݐ௜∈ܶ, ݒ௝
௜≠0, ݒ௝∈ܸ′ൟ. 
 
   Конструируем множество рекомендаций ܴ= ܶᇱ\ܯ. 
Функционал рекомендательной системы. В качестве основного 
функционала рекомендательной системы выступает возможность получения 
списка рекомендаций по изучению новых технологий и освоения новых навыков 
со стороны студента на основе текстов его работ, предварительно загруженных 
в систему. Так, пользователь может выбрать одну из своих работ и получить 
список использованных им технологий, а также список рекомендованных к 
изучению технологий, которые наиболее близко подходят к уже приобретенным 
им компетенциям. 
Пример реализации. В качестве подтверждения результатов можно 
привести примеры рекомендаций, полученных в ходе проведения исследования, 
в котором были проанализированы тексты 7877 вакансий ИТ-специализации. В 
результате анализа был получен список из 4770 ассоциативных правил, каждое 
 
 
126 
из которых содержит наиболее встречающиеся (более чем в 70% вакансий) 
множества компетенций специалистов. 
Предположим, что пользователь выбрал текст курсовой работы по 
дисциплине «Структуры и алгоритмы компьютерной обработки данных», в 
результате анализа которого был получен список использованных технологий: 
ACID, Akka, C, C++, CI, concurent programming, Elixir, Erlang, Git, GitLab, GitLab 
CI, Hadoop, JVM, Linux, NoSQL, Rust, Scala, UNIX, YAML. Большинство из этих 
технологий присущи DevOps-инженерам, поэтому пользователь получит 
рекомендации по изучению новых технологий, специфичных для данной 
специальности: SQL, CD, Docker, PostgreSQL (см. рис. 1). 
 
 
Рис. 1. Интерфейс рекомендательной системы 
 
В результате была разработана рекомендательная система навыков для 
студента, основанная на анализе текстов его работ и актуальных требований 
рынка труда ИТ-специалистов. Анализ результатов показал эффективность 
предложенного подхода к формированию рекомендаций. 
 
 
 
127 
Благодарности 
Статья подготовлена в рамках разработки образовательного кейса для НТУ 
Сириус при финансовой поддержке РФФИ в рамках научного проекта № 19-37-
51028. 
 
 СТАТЬЯ
Аннотация
. В данной статье рассмотрены теоретические аспекты 
технологии «Ментальная арифметика», ее влияние на познавательные процессы 
обучающихся и возможность ее включения в школьную программу. 
Ключевые 
слова: 
ментальная 
арифметика, 
технология, 
абакус, 
познавательные процессы. 
Способ мышления и восприятия информации современного поколения 
школьников, выросшего в эпоху развития информационных технологий, 
значительно отличается от всех предыдущих поколений. Ученые называют 
данный феномен клиповым мышлением – поверхностное фрагментное знание 
(Старицына О.А. [1], Лясковская И.И., Суркова Л.В. [2]). В связи с этим система 
образования должна адаптироваться под современные реалии, учитывать 
особенности детей в обучении и правильно организовать образовательный 
процесс.  
На данный момент в мире существует большое количество технологий и 
методик развития интеллектуальных способностей детей. Одной из таких 
технологий является ментальная арифметика.   Далее рассмотрим, что такое 
ментальная арифметика ее особенности и влияние на интеллектуальное развитие 
детей. 
Ментальная арифметика – это технология обучения быстрому счету, 
посредством использования счетов Абакус (рис. 1). Абакус состоит из рамки, 
внутри которой вертикально расположены спицы, на которые нанизано по пять 
 
 
129 
косточек. Первую строку косточек отделяет горизонтальная перекладина. Она 
разделяет небесные и земные косточки. Небесные – верхние косточки, земные – 
нижние. Для того чтобы набрать земные косточки их поднимают большим 
пальцем, опускают указательным. Небесные косточки поднимаются и 
опускаются только указательным пальцем. Одновременно двумя пальцами 
пользуются, если нужно набрать число, состоящее из небесных и земных 
косточек. 
 
Рис. 1. Абакус 
Также существуют некоторые правила набора чисел. Одна земная косточка 
обозначает единицу – на первой спице, десяток – на второй, сотню – на третьей, 
тысячу – на четвертой и т.д. Аналогично, небесная косточка обозначает сразу 
пять единиц, пять десятков, пять сотен и т.д. Числа на двух или трех спицах 
набираются одновременно двумя руками. 
 В начале обучения ребенок учится выполнять различные арифметические 
действия, а именно сложение, вычитание, умножение, деление. Когда навык 
счета учеником отработан, то следующим шагом в обучении становится переход 
на счет на ментальных счетах. Это тот же абакус, только в бумажном варианте. 
Ученик по тому же принципу выполняет действия, представляя их в уме. Также 
во время занятий педагог использует флеш-карты.  На одной стороне написано 
число, а на обратной стороне картинка с этим числом, набранным на абакусе.  
 
 
130 
В большинстве своем, ученые, проводившие исследования по данной 
технологии утверждают, что данная технология не только улучшает навыки 
быстрого счета, но и развивает познавательные процессы (Вострецова Н.С. [3], 
Медведева Л.В. [4]): 
1. Формируется навык быстрого счета устного счета, данный навык поможет 
детям быстрее справляться с выполнением арифметических действий на 
уроках 
математики. 
Ментальная 
арифметика 
формирует 
интерес 
обучающихся к изучению математики.  
2. Помимо быстрого счета, развиваются познавательные процессы, то есть 
внимание, память и мышление. Когда ребенок концентрируется на 
выполнении заданий, он одновременно с этим тренирует внимание и 
зрительную память. Также в тренировке зрительной памяти способствует 
использование 
флеш-карт. 
Краткосрочная 
память 
тренируется 
посредством постоянного решения примеров, а долгосрочная память – 
запоминанием формул. 
3. При работе на счетах Абакус, ребенок использует обе руки, что 
способствует 
гармоничному 
развитию 
обоих 
полушарий 
мозга. 
Задействование обоих полушарий оказывает влияние на образование 
нейронных связей, то есть формируются образное и логическое мышление. 
4. Развивается мелкая моторика, что, как известно, также положительно 
влияет на интеллектуальное развитие ребенка.  
Несмотря на все выше сказанное, педагоги выделяют следующие риски 
раннего обучения ментальной арифметики (Шварц А.Ю.[5]): 
1. В ментальной арифметике дается один алгоритм, который тренируется 
детьми и кроме счета на абакусе не изучаются другие модели. В обучении 
математике более важным является понимание, а не скорость вычислений. 
2. Ребенок, обучавшийся ментальной арифметике до школы, когда приходит 
в первый класс теряет интерес к обучению, так как уже научился быстро 
считать. 
 
 
131 
3. Ментальная арифметика привязана к десятичной системе счисления, 
поэтому возникнет трудность с пониманием других систем счисления. 
4. Также данный метод осложняет усвоение дробей, десятичные дроби 
усваиваются проще, чем обыкновенные. 
В итоге рекомендуется не обгонять школьную программу изучением 
ментальной 
арифметики, 
а 
использовать 
данную 
технологию 
как 
вспомогающую. То есть после изучения определенной темы можно показать 
ученику, что определенный пример можно посчитать ментально. Также 
ментальная арифметика может быть полезна детям, которые уже обладают 
определенными навыками, но испытывают трудности.  
На сегодняшний день в России ментальная арифметика развита на 
достаточном уровне в рамках дополнительного образования. В отличие от таких 
стран как Япония, Китай и Сингапур, в нашей стране ментальная арифметика не 
входит в основную образовательную программу. Но во многих школах 
некоторые учителя математики осваивают ее, проходя курсы повышения 
квалификации.  Поэтому мы бы хотели рассмотреть возможность применения 
ментальной арифметики в школьном курсе математики.  
Курс ментальной арифметики рассчитан на детей разных возрастных 
категорий. Как правило, обучение ментальной арифметике направлено на детей 
от 6 до 13 лет. Весь курс ментальной арифметики включает в себя изучение 
следующих тем: простое сложение и вычитание, счет с переходом через десятки, 
умножение и деление, проценты, действия с дробями, квадратный корень, 
степени. 
Проанализировав школьные учебники математики за 5 класс (Зубаре- 
ва И.И., Мордкович А.Г. [6], Мерзляк А.Г., Полонский В.Б., Якир М.С. [7]), а 
также изучив основные методы счета на абакусе (Малсан Би [8]) были выделены 
темы, в которых есть возможность включения упражнений из ментальной 
арифметики (табл. 1).  
 
 
 
132 
Таблица 1. Соответствие тем из ментальной арифметики  
с темами в школьных учебниках 
Тема из ментальной 
арифметики 
Тема из школьного учебника 
Пример  
(решить устно) 
1. Сложение и вычитание 
«Сложение и вычитание 
натуральных чисел» 
183+732+268+317 
589-264-127 
2. Умножение и деление 
«Умножение и деление 
натуральных чисел» 
314*258 
261:7 
3. Проценты 
«Проценты. Нахождение процента 
от числа» 
Найти 23% от 400 
4. Дроби 
«Дробные числа и действия над 
ними» 
2,374+1,725 
0,8-0,573 
4,28*7,6 
9,044:38 
5. Степени 
«Степень числа» 
9଺ 
 
Но хотелось бы отметить, что арифметические действия ученики 
выполняют постоянно на каждом уроке математики. Как и во время устного 
счета, так и при решении различных задач. Поэтому применять ментальный счет 
можно практически на каждом уроке, но в меру, как дополнительный способ 
счета, не обгоняя школьную программу. 
Изучение каждой из тем, представленных в таблице, делится на два этапа: 
первый – освоение формул и правил счета на абакусе, второй – переход на 
ментальные счеты (счет в уме). Рассмотрим на примере сложения, вычитания и 
умножения школьный метод и методы, которые предлагает ментальная 
арифметика. В школе для упрощения сложения и вычитания чисел, ученикам 
предлагается метод сложения и вычитания в столбик. В ментальной арифметике 
числа можно сложить и вычесть на абакусе, используя некоторые правила, 
формулы и методы.  
1. Простое сложение и вычитание 
2. Метод «Помощь брата» 
3. Метод «Помощь друга» 
4. Упрощенный (комбинированный) метод 
 
 
133 
Умножение и деление более сложных примеров в школе также 
выполняется в столбик. В ментальной арифметике – количество цифр в двух 
множителях позволяет определить, с какой по счету спицы набирать ответ на 
абакусе. «A», «b», «y» – три цифры в   множителях, поэтому ответ необходимо 
«записывать» с третьей справа спицы. Если при умножении «a» на «y» или  
«b» на «y»  получается число < 10, то ставим впереди него ноль.  
Для того чтобы выполнять эти действия, ребенок должен хорошо знать 
таблицу умножения.  В ментальной арифметике изучаются примеры умножения 
числа на однозначные и многозначные числа. 
 
Нельзя сказать, что ментальная арифметика – это замена школьным 
способам выполнения арифметических действий. В школе при изучении данных 
тем, главной задачей стоит понимание, а не скорость счета. В ментальной 
арифметике основой являются алгоритмы, формулы и правила, которые 
позволяют быстро посчитать тот или иной пример. Но если применять данную 
технологию правильно, в соответствие с возрастом ребенка и его знаниями, то 
ментальная арифметика будет положительно влиять на всестороннее развитие 
личности. В итоге, следует отметить, что элементы ментальной арифметики 
можно применять в школьной программе, при этом не опережая изучение 
соответствующих школьных тем, т.е. ментальная арифметика может стать 
дополнительной (вспомогательной) технологией. 
Так 
как 
мы 
определили, 
что 
ментальная 
арифметика 
является 
дополнительной технологией, а также изучив плюсы и минусы ее применения, 
мы предлагаем ввести ее в школу как элективный курс. Ментальная арифметика 
дает свои результаты в долгосрочной перспективе благодаря регулярным 
занятиям, поэтому предлагаем годовой курс для 5 класса с двумя занятиями в 
неделю. Изучив методические рекомендации по содержанию и структуре 
элективных курсов (Нифонтов В.И., Шмыглева Е.В [9]), мы представляем 
описание элективного курса «Ментальная арифметика», который носит 
ознакомительный характер.  
 
 
 
134 
Срок реализации курса: 1 год. 
Количество занятий в неделю: 2 часа. 
Возраст учащихся: 11-12 лет (5 класс).  
Форму обучения мы предлагаем использовать очную, групповую (10-15 
человек). 
Цель курса: развитие интеллектуальных и познавательных способностей, 
вычислительных навыков посредством обучения счету на абакусе. 
Задачи курса: 
 
формирование умения счета на абакусе; 
 
обучение умению считать в уме; 
 
развитие концентрации внимания;  
 
развитие воображения; 
 
увеличение объема памяти; 
 
формирование мотивации на получение дополнительных знаний. 
Содержание курса: 
1 модуль: Знакомство с ментальной арифметикой и абакусом, правила 
передвижения косточек, изучение блоков «братья» и «друзья». Решение 
примеров на закрепление. 
2 модуль: Знакомство с числами 1-9 на абакусе. Сложение и вычитание на 
абакусе чисел 1-9. Выполнение заданий на простое сложение и вычитание в 
пределах 1-9. Решение примеров на закрепление. 
3 модуль: Набор чисел 10-99 на абакусе, сложение и вычитание чисел в 
пределах 10-99. Решение примеров на закрепление. 
4 модуль: Набор трехзначных чисел от 100 до 999 на абакусе. Простое 
сложение и вычитание в пределах 100-999. Решение примеров на закрепление. 
5 модуль: Изучение метода сложения и вычитания «Помощь брата». 
Изучение формул входящих в данный метод. Решение примеров на сложение и 
вычитание данным методом. 
 
 
135 
6 модуль: Изучение метода сложения и вычитания «Помощь друга». 
Изучение формул входящих в данный метод.  Решение примеров на сложение и 
вычитание данным методом. 
7 модуль: Сложение и вычитание упрощенным (комбинированным) 
методом. Изучение формул входящих в данный метод. Решение примеров на 
сложение и вычитание данным методом. 
8 модуль: Переход на ментальные счеты, решение примеров разными 
методами на ментальных счетах. 
Планируемые результаты: 
1. Освоение правил работы на абакусе. 
2. Освоение основных правил сложения и вычитания чисел на абакусе. 
3. Иметь конкретные представления о составе многозначных чисел. 
Предполагается, что 
у обучающихся данного курса 
улучшаться 
вычислительные 
навыки, 
повысятся 
познавательная 
активность 
и 
интеллектуальные способности посредством счета на абакусе. 
 
 СТАТЬЯ
Аннотация
. В статье рассматриваются способы решения математических 
задач повышенного уровня на построение графиков функций, заданных 
неэлементарно – с помощью пределов. Предложено решение обратной задачи: 
нахождение представления кусочно-заданной функции в виде предела.  
Ключевые слова: функция, заданная с помощью предела, построение 
графика функции, исследование функций. 
 
Построение и исследование графиков функций – одна из важных задач при 
обучении математике. Изучение графиков функций и их свойств продолжается 
на протяжении всего курса алгебры с 7 по 11 класс. Наиболее полно эта тема 
рассматривается в высших учебных заведениях при изучении математических 
дисциплин, в частности, математического анализа. 
Трудоемкость процесса исследования и построения графика функции 
зависит от способа ее задания. В типовых задачах требуется исследовать 
функцию, заданную аналитически: формулой ݕ= ݂(ݔ). Но существуют задачи 
на построение графиков функций, как правило, повышенного уровня сложности, 
которые встречаются в олимпиадах по высшей математике [1]. К ним относятся, 
например, задачи, в которых функция задана с помощью предела. 
Для решения подобных задач необходимо исследовать предел в 
зависимости от значений ݔ, а затем приступать к построению графика 
полученной кусочно-заданной функции. Решая задачу, нужно помнить основные 
 
 
138 
пределы, которые связаны, в первую очередь, со свойствами показательной и 
степенной функций. 
Рассмотрим наиболее важные пределы. 
1) lim
௡→ஶݔ௡. 
При нахождении предела от ݔ௡, рассматриваем промежуток [0; +∞). 
Поэтому получим 
lim
௡→ஶݔ௡= ൝
0,
если 0 < ݔ< 1,
1,
если ݔ= 1,
∞,
если ݔ> 1.
 
2) lim
௡→ஶݔଶ௡. 
При нахождении предела от ݔଶ௡, рассматриваем промежуток (−∞; +∞), 
так как (ݔଶ)௡= ݔଶ௡. Поэтому получим 
lim
௡→ஶݔଶ௡= ൝
0,
если |ݔ| < 1,
1,
если |ݔ| = 1,
∞,
если |ݔ| > 1.
 
Задания на построение графика или исследования функции, заданной с 
помощью предела, встречаются в задачниках по математическому анализу 
[2,3,4] и сборниках задач студенческих олимпиад [1]. Рассмотрим несколько 
примеров из классических сборников задач таких авторов, как Л.Д. Кудрявцев, 
Б.П. Демидович, Н.Я. Виленкин и др. 
Пример 1 [5, §3 №2]. Построить график функции ݂(ݔ) = lim
௡→ஶ
௫೙
ଵା௫೙, ݔ≥0. 
Для решения задачи необходимо рассмотреть следующие случаи: 
1) Если ݔ= 0, то ݂(0) = 0; 
2) Если ݔ= 1, то ݂(1) =
ଵ
ଶ; 
3) Если 0 < ݔ< 1, то lim
௡→ஶݔ௡= 0 и ݂(ݔ) = 0;  
4) Если ݔ> 1, то lim
௡→ஶݔ௡= ∞ и ݂(ݔ) = 1.  
Функция претерпевает разрыв в точке ݔ= 1. 
 
 
 
 
139 
Получаем кусочно-заданную функцию: 
݂(ݔ) = ൞
0,
если 0 ≤ݔ< 1,
1
2 ,
если ݔ= 1,
1,
если ݔ> 1.
 
Теперь мы можем построить график (рис. 1). 
 
Рис. 1. График функции ݂(ݔ) = ݈݅݉
௡→ஶ
௫೙
ଵା௫೙, ݔ≥0 
 
Пример 2 [3, №720]. Построить график функции ݂(ݔ) = lim
௡→ஶ
ଵ
ଵା௫೙, ݔ≥0. 
Для решения задачи необходимо рассмотреть следующие случаи: 
1) Если ݔ= 0, то ݂(ݔ) = 1;  
2) Если ݔ= 1, то ݂(1) = 1/2;  
3) Если 0 < ݔ< 1, то lim
௡→ஶݔ௡= 0 и ݂(ݔ) = 1;  
4) Если ݔ> 1, то lim
௡→ஶݔ௡= ∞ и ݂(ݔ) = 0.  
Получаем кусочно-заданную функцию: 
݂(ݔ) = ൞
1,
если 0 ≤ݔ< 1,
1
2 ,
если ݔ= 1,
0,
если ݔ> 1.
 
Теперь мы можем построить график (рис. 2). 
 
 
140 
 
 
Рис. 2. График функции ݂(ݔ) = ݈݅݉
௡→ஶ
ଵ
ଵା௫೙, ݔ≥0 
 
Пример 3 [4, §10 №64.7]. Построить график функции ݂(ݔ) =
lim
௡→ஶ√1 + ݔ௡
೙
, ݔ≥0.  
Для решения задачи необходимо рассмотреть следующие случаи: 
1) Если ݔ= 0, то ݂(ݔ) = 1;  
2) Если ݔ= 1, то ݂(1) = 1; 
3) Если 0 < ݔ< 1, то lim
௡→ஶݔ௡= 0 и ݂(ݔ) = 1; 
4) Если ݔ> 1, то lim
௡→ஶݔ௡= ∞ и ݂(ݔ) = ݔ.  
Получаем кусочно-заданную функцию: 
݂(ݔ) = ቄ1,
если 0 ≤ݔ≤1,
ݔ,
если ݔ> 1.
 
Теперь мы можем построить график (рис. 3). 
Показательные функции нечасто бывают задействованы в задачах о 
построении графика функции, заданной через предел. Мы составили свою задачу 
с использованием показательной функции и интересными особенностями 
графика.  
 
 
 
141 
Задача 1. Построить график функции ݂(ݔ) = lim
௡→ஶ
ଶೣ∙௫మ೙ାଵ
௫మ೙ାଶೣ . 
Для решения задачи необходимо рассмотреть следующие случаи: 
 
 
Рис. 3. График функции ݂(ݔ) = ݈݅݉
௡→ஶ√1 + ݔ௡
೙
, ݔ≥0 
1) Если |ݔ| < 1, то ݂(ݔ) = 2ି௫; 
2) Если |ݔ| = 1, то для ݔ= 1 ⇒ ݂(ݔ) = 1  и для ݔ= −1 ⇒ ݂(ݔ) = 1; 
3) Если |ݔ| > 1, то ݂(ݔ) = 2௫. 
Получаем кусочно-заданную функцию: 
݂(ݔ) = ቐ
2ି௫,
если |ݔ| < 1,
1,
если |ݔ| = 1,
2௫,
если |ݔ| > 1.
 
Теперь мы можем построить график (рис. 4). 
Как и для многих математических задач, интересно рассмотреть обратную 
задачу: функцию, заданную кусочно, определить в виде предела. Рассмотрим 
один из вариантов этой задачи. 
Задача 2. Пусть функция ܨ(ݔ) задана кусочно (например, см. рис. 5) 
ܨ(ݔ) = ൜߮ଵ(ݔ),
0 < ݔ< 1,
߮ଶ(ݔ),
1 < ݔ< +∞. 
Необходимо представить ее в виде предела.  
Очевидно, что задача имеет различные решения. Для нахождения нужного 
предела могут быть использованы функции различных типов. Однако мы 
 
 
142 
предлагаем найти решение, используя функции, рассмотренные ранее в 
примерах 1 и 2. Обозначим соответственно  ߙ(ݔ) = lim
௡→ஶ
ଵ
ଵା௫೙ и ߚ(ݔ) = lim
௡→ஶ
௫೙
ଵା௫೙. 
 
 
Рис. 4. График функции ݂(ݔ) = ݈݅݉
௡→ஶ
ଶೣ∙௫మ೙ାଵ
௫మ೙ାଶೣ 
 
Рис. 5. График функции F(x) 
 
Будем считать функции ߙ(ݔ) и ߚ(ݔ) в некотором смысле «базисными» и выразим 
через них ܨ(ݔ) следующим образом: 
ܨ(ݔ) = ߮ଵ(ݔ) ∙ߙ(ݔ) + ߮ଶ(ݔ) ∙ߚ(ݔ) 
 
 
 
143 
Подставим вместо ߙ(ݔ) и ߚ(ݔ) их выражения через пределы. Получим:  
ܨ(ݔ) = ߮ଵ(ݔ) ∙lim
௡→ஶ
1
1 + ݔ௡+ ߮ଶ(ݔ) ∙lim
௡→ஶ
ݔ௡
1 + ݔ௡ 
Преобразуем выражение к одному пределу, используя соответствующие 
свойства. Функции ߮ଵ(ݔ) и ߮ଶ(ݔ) можно внести под знак предела, как 
константы, так как они не зависят от ݊. Получим: 
ܨ(ݔ) = lim
௡→ஶቆ߮ଵ(ݔ)
1 + ݔ௡+ ߮ଶ(ݔ) ∙ݔ௡
1 + ݔ௡
ቇ= lim
௡→ஶ
߮ଵ(ݔ) + ߮ଶ(ݔ) ∙ݔ௡
1 + ݔ௡
. 
Можно также рассмотреть функцию с точкой разрыва ݔ= ܽ: 
ܨ(ݔ) = ൜߮ଵ(ݔ),0 < ݔ< ܽ,
߮ଶ(ݔ), ܽ< ݔ< +∞. 
В этом случае, сделав замену, ݐ= ܽݔ ⇒ݔ=
௧
௔ , дальнейшие вычисления 
проводим аналогично. 
В 
настоящее 
время, 
школьники 
и 
студенты 
часто 
используют 
компьютерные программы и другие приложения для решения математических 
задач, в том числе и для построения графиков. Можно ли с их помощью верно 
построить график функции, заданной через предел? Такие приложения как 
Photomath и Geogebra не могут решить эту задачу. При этом, предел при 
конкретном значении ݔ будет вычислен верно. 
База знаний и набор вычислительных алгоритмов Wolfram Alpha, 
зарекомендовавшая себя как надежная программа, разработанная для решения 
математических задач, также не может справиться с построением графика такой 
функции. На некоторых промежутках части графика изображаются верно. 
Рассмотрим несколько примеров (рис. 6-11). 
 
Рис. 6. Команды в Wolfram Alpha для построения графика из примера 1 
 
 
144 
 
Рис. 7. Изображение графика функции в Wolfram Alpha из примера 1 
 
Рис. 8. Команды в Wolfram Alpha для построения графика из примера 2 
 
Рис. 9. Изображение графика функции в Wolfram Alpha из примера 2 
 
 
145 
 
Рис. 10. Команды в Wolfram Alpha для построения графика из примера 3 
 
Рис. 11. Изображение графика функции в Wolfram Alpha из примера 3 
Таким образом, в общем случае компьютерные программы и приложения 
не способны верно построить график фукнции, заданной с помощью предела. 
Поэтому решение таких задач классическими методами математического 
анализа является, по-видимому, единственно возможным. 
Решение и составление таких задач является важной составляющей в 
предметной подготовке будущего учителя математики. Это объясняется тем, что 
студенту для успешного решения таких задач необходимо знать понятие предела 
функции, его свойства и основные методы вычисления, а также понятие 
непрерывности функции; уметь использовать пределы для определения 
непрерывности функции и выявления точек разрыва. Кроме того, эти задачи 
демонстрируют будущему учителю математики достоинства, недостатки и 
границы применения ИКТ в обучении [6]. 
 
 
146 
 СТАТЬЯ
Аннотация
. 
В 
статье 
рассматриваются 
особенности 
восприятия 
математических 
понятий, учениками с ограниченными 
возможностями 
здоровья, с задержкой психического развития, трудности в восприятии, усвоении 
и запоминании абстрактного материала.  
Ключевые слова: задержка психического развития, восприятие и 
усвоение математических понятий, долговременная память, кратковременная 
память, адаптированная программа, обучение математике школьников с ОВЗ. 
 
В настоящий момент, проблема обучения детей с ограниченными 
возможностями здоровья (ОВЗ) является актуальной. Специалистами и учеными 
определены основные препятствующие особенности личностной организации и 
способностей учеников с различными видами ОВЗ, в процессе их интеграции в 
образовательный процесс. Подробнее рассмотрим обучение математике 
школьников с задержкой психического развития (ЗПР). Каждый индивид, в силу 
своей 
индивидуальности, 
имеет 
личный 
набор 
качеств 
и 
умений, 
сформированных в процессе социализации, однако, когда речь заходит про детей 
с диагнозом ЗПР, специалистов, изучающих инклюзивное образование детей с 
ЗПР, условно, делят на два лагеря. 
Первые, считают первопричиной данного расстройства, социально-
педагогические пробелы. Неблагополучное окружение ребенка, асоциальность, 
деструктивность. Приверженцы этой стороны, относят детей с ЗПР, к 
труднообучаемым, неприспособленным, педагогически запущенным детям. 
 
 
148 
Другие же авторы, связывают отставание в психическом развитии у таких детей, 
именно с органической недостаточностью, и минимальной дисфункцией 
головного мозга. Однако, обе стороны, выделяют следующие проблематичные 
аспекты, 
являющиеся 
преградой, 
в 
полноценном 
усвоении 
общей 
образовательной программы. 
Немаловажный аспект, заключается в неусидчивости, и невозможности 
долговременной фокусировки внимания ребенка, на однообразном действии. 
Ребенку присуща быстрая утомляемость, интерес к деятельности пропадает 
довольно стремительно, внимание переключается на иной род занятий. В данном 
случае, эта особенность, тесно граничит с гиперактивностью, характерной для 
детей с ЗПР.  
Вторым аспектом является, особенность восприятия новой информации. 
Это проявляется в присущей ученику фрагментарности выделения информации 
и медлительности ее усвоения. Ученику представляется сложным переписать 
текст задания без ошибок, выделить необходимую фигуру в сложном 
изображении. При этом, дети с ЗПР, вполне прекрасно могут распознавать 
знакомые фигуры и предметы в реалистичных изображениях.  
В 
процессе 
обучения 
математике, 
первые 
две 
особенности, 
в 
совокупности, могут давать сниженный уровень внимательности, приводящий к 
путанице в процессе решения задания, или контрольной работы. К примеру, в 
приведенных результатах научного исследования Костенковой Ю.А., на базе 
коррекционной школы для инклюзивного обучения детей с ЗПР, было показано, 
что, при прохождении контрольного тестирования по предмету «Математика», 
ученики с ЗПР, могли перепутать знаки сложения и умножения, не дописывали 
скобки в примерах, что в корне меняло ход решения задачи. Так же, ученики с 
ЗПР, вкрадчиво вчитывались в текст задания, неоднократно проговаривая его 
вслух. Уровень повышенной утомляемости был отмечен, уже на 15 минуте 
проведения контрольного тестирования. Возникали проблемы с устным счетом 
даже целых чисел, в особенности при применении операций с делением и 
 
 
149 
вычитанием. Затруднение вызывало произнесение вслух ряда чисел в обратном 
порядке.  
Так же, проявляется своеобразность запоминания, и памяти, у детей с ЗПР. 
В силу особенности восприятия, лучше запоминается демонстративная часть 
материала, нежели словесно преподнесенная. Кратковременная память имеет 
избирательный характер. Для формирования качественной долговременной 
памяти, при обучении детей с ЗПР математике, вне зависимости от возраста, 
внедряют более частое повторение пройденного материала, по сравнению с 
детьми, обучающимися по общеобразовательной программе. Если говорить о 
продуктивном формировании кратковременной памяти у ученика с ЗПР, 
необходимо применять наглядность, демонстративность, обучать учеников 
разделять группы предметов по подгруппам, при этом, стараясь сохранить 
целостность общей картины.  
Ход мышления, и постановка решения любого рода задач, у ребенка с ЗПР, 
определенно требует корректировки. Слабо развитое абстрактное мышление. 
Низкий уровень мотивации при решении поставленных перед учеником задач. 
Зачастую, имеет место быть абсолютная несформированность даже основных 
мыслительных математических операций. Так же, проявляется низкий уровень 
избирательности способов, путей решения поставленной задачи, неправильный 
подбор инструментария.  
Последние приведенные аспекты, на практике, проявляются в незнании, 
или, не запоминании, порой, даже элементарных, необходимых к усвоению 
знаний в области математики. В младших классах это проявляется в незнании 
таблицы умножения, базовых свойств фигур, правил сложения и вычитания, 
умножения и деления, применения скобок и так далее. Выбор нестандартного 
способа решения, приводящего к неправильному результату. К старшим 
классам, данная особенность частично компенсируется, однако, среди учеников 
с ЗПР, прослеживается периодически возникающая сложность в восприятии и 
запоминании, а также понимании, устройства сложных математических формул, 
и возможности применения их на практике.  
 
 
150 
Затруднительность в общении со сверстниками, может выражаться 
посредством нарушений в развитии речевого аппарата. Причем, к поступлению 
в школу, подавляющая часть детей с ЗПР, компенсирует большую часть 
пробелов в этой области. Однако, даже при правильном звуко-фонетическом 
произношении, может ярко проявляться скольжение и лавирование в речи 
ученика, что может мешать восприятию произнесенного ребенком. Словарный 
запас, по сравнению с учениками общеобразовательных программ, менее 
обширен. Причем, это не проявляется в обычном, повседневно-бытовом 
общении, 
однако, 
выходя 
за 
границы 
данной 
формы 
взаимообмена 
информацией, ученик, может теряться, не до конца осознавать, о чем идет речь.  
Ученики с ЗПР нуждаются в особом построении модели обучения. 
Основополагающими ступенями данной модели, для успешной интеграции 
ученика в процесс изучения математики, являются следующие шаги: 
1. 
Разработка 
адаптированной 
образовательной 
программы 
по 
математике; 
2. 
Непрерывное сопровождение процесса обучения узконаправ-
ленными специалистами (дефектолог, психолог, логопед, социальный педагог); 
3. 
Медицинское сопровождение, с прохождением лечения, и, или, 
профилактическими занятиями в медицинском учреждении. 
Если процесс параллельного сопровождения медицинской организацией, а 
также, узконаправленными специалистами, примерно ясен, возникает вопрос. 
Что должна представлять из себя адаптированная программа для детей с 
задержкой психического развития? 
Выделяются два основных подхода к организации образовательной 
деятельности 
учеников 
с 
ЗПР 
– 
личностно-ориентированный 
и 
дифференцированный. 
В 
основу 
личностно-ориентированного 
подхода, 
закладывается 
учет 
индивидуальных 
особенностей 
ученика. 
Дифференцированный подход, применяется, в процессе разработки программы 
образовательной деятельности группы учеников. Но, при необходимости, в 
процессе 
применения 
дифференцированного 
подхода, 
применяется 
 
 
151 
индивидуализация, 
ориентированная 
непосредственно 
на 
определенного 
ученика. На основании выбора родителей ученика с ЗПР, а также, предписания 
комиссии ПМПК способа обучения, определяется непосредственный подход для 
организации 
образовательной 
деятельности, 
создается 
адаптированная 
образовательная 
программа. 
Данная 
программа 
должная 
учитывать 
психофизические возможности ученика, иметь коррекционную направленность, 
для упрощения восприятия материала, учитывать необходимость корректировки 
часов 
занятий, 
в 
связи 
с 
параллельным 
ведением 
ученика 
узкоспециализированными и медицинскими специалистами.  
Можно выделить следующие особенности процесса обучения по предмету 
«Математика» ученика с ЗПР:  
1) 
коррекционная направленность изучения предмета; 
2) 
в связи с высокой степенью отвлекаемости и утомляемости, при 
организации учебного процесса детей с ЗПР, преподавателю необходимо 
специально организовывать и направлять внимание детей; 
3) 
неоднократность повторения – залог успеха в усвоении материала; 
4) 
каждое задание, или задачу, необходимо проговаривать четко, 
разбивать на шаги и пункты, вводя последующие части задания, после 
успешного завершения предыдущей части. Дробление и порционность. 
Последовательность; 
5) 
по окончанию занятия, у ученика должно создаваться ощущение 
успеха, закладываться положительные эмоции. Таким образом формируется 
мотивационный компонент к последующим занятиям. В связи с тонкой 
душевной организацией, ученики с ЗПР, нуждаются в поощрении даже малых 
успехов; 
6) 
наглядность и практичность в процессе введения и последующего 
изучения материала, способствуют лучшему усвоению; 
7) 
необходимо практиковать максимальное погружение в речевую 
среду, на каждом занятии; 
 
 
152 
8) 
после наступления пика момента утомляемости, который может 
продемонстрировать ученик с ЗПР (таковым может служить и приступ 
гиперактивности), категорически нельзя принуждать, одномоментно, ученика 
приступать снова к заданию. Имеет место отдых, переключение на иной род 
деятельности, смена вида занятия; 
9) 
введение практики факультативов и внеклассной деятельности, 
поможет преподавателю расширить границы времени, отведенные нормативной 
документацией на изучение предмета. При необходимости неоднократного 
повторения материала, или пропуска занятия по медицинским показаниям, 
необходимо закладывать время и возможность, для повторного изучения темы. 
 
 СТАТЬЯ
Аннотация
. В статье раскрываются теоретические аспекты использования 
дистанционных образовательных технологий в обучении математике. Дается 
характеристика моделей дистанционного обучения. Показаны возможности 
использования дистанционных образовательных технологий в обучении 
математике в средней школе. 
Ключевые 
слова: 
дистанционные 
образовательные 
технологии, 
электронное обучение, обучение математике, информационные технологии. 
 
В настоящее время идет активный процесс модернизации системы 
образования. В Концепции модернизации российского образования в качестве 
приоритетных обозначены задачи обеспечения доступности образования вне 
зависимости 
от 
места 
жительства 
обучающегося. 
В 
Федеральном 
государственном образовательном стандарте одним из основных требований к 
личностным 
результатам 
образования 
указывается 
«формирование 
ответственного отношения к учению, готовности и способности обучающихся к 
саморазвитию и самообразованию на основе мотивации к обучению и 
познанию». Эти вопросы приобретают особую актуальность в связи с пандемией 
коронавируса, выдвинувшей на первый план проблему разработки механизма 
получения качественного и доступного образования и потребовавшей 
пересмотра 
существующих 
технологий, 
средств 
и 
методов 
обучения. 
Преподавание 
математики 
должно 
способствовать 
формированию 
у 
обучающихся 
математического 
мышления, 
умения 
использовать 
математические знания  в быстро меняющихся социально-экономических 
 
 
154 
условиях. 
Эффективным 
средством 
решения 
данных 
задач 
являются 
дистанционные образовательные технологии.   
Анализ научной и методической литературы показывает, что в настоящее 
время интерес к дистанционным технологиям в обучении только возрастает. 
Сущность технологии дистанционного обучения раскрывается в работах 
А.А. Андреева, М.Е. Вайндорф-Сысоевой, Е.С. Полат, Г.К. Селевко и др. 
Согласно исследованиям М.Е. Вайндорф-Сысоевой, дистанционное 
обучение появилось в 1982 году в университете штата Висконсин как тип 
заочного (корреспондентского) обучения и рассматривалось как обучение на 
расстоянии. В мае 1997 года в России стартовал эксперимент по внедрению 
дистанционного обучения [1, с. 11]. Термин «дистанционные образовательные 
технологии» часто отождествляется с понятиями «электронное образование», 
«дистанционное обучение», «компьютерные технологии обучения». Как 
самостоятельную 
форму 
обучения 
на 
расстоянии, 
«реализуемой 
с 
использованием средств интернет-технологий и других интерактивных 
технологий», рассматривает дистанционное обучение Е.С. Полат [2, с. 12].  
Электронное обучение в Законе об образовании РФ рассматривается как 
один из способов организации образовательной деятельности с применением 
информации, которая содержится в базах данных и необходима для реализации 
основных образовательных программ. К электронному обучению нормативно 
также 
относят 
информационно-телекоммуникационных 
сети, 
которые 
осуществляют передачу необходимой информации по каналам связи. При этом, 
дистанционные 
образовательные 
технологии 
– 
это 
«образовательные 
технологии, реализуемые в основном с применением информационно-
телекоммуникационных 
сетей 
при 
взаимодействии 
обучающихся 
и 
педагогических работников на расстоянии» [3].  
Однако, существуют и явные отличия дистанционного образования от 
электронного обучения, например, М.Е. Вайндорф-Сысоева отмечает, что 
первое предполагает наличие электронной образовательной среды и баз данных, 
а второе – «взаимодействие учителя и учащегося на расстоянии» [1, с. 15]. 
 
 
155 
Таким образом, дистанционные образовательные технологии не являются 
формой образования, а представляют собой форму организации образовательной 
деятельности, при этом они являются средством получения образования и 
представляют собой взаимодействие обучающегося и педагога на расстоянии. 
Среди 
преимуществ 
дистанционных 
образовательных 
технологий 
К.С. Савранская, Л.И. Красноплахтова выделяют возможность самостоятель-
ного формирования графика обучения, доступность, экономию временных и 
финансовых ресурсов. В качестве ограничений данной технологии отмечаются: 
необходимость 
наличия 
специального 
оборудования 
и 
программного 
обеспечения, ограничение социализации воспитанников; зависимость от 
качества работы Интернета, необходимость навыков работы с компьютером и 
интернет сайтами, увеличение временных затрат, отсутствие контроля 
самостоятельного выполнения обучающимися учебных заданий [4, с. 3]. 
По мнению Н.Е. Отекиной, использование дистанционных образова-
тельных технологий в процессе обучения позволяет в более быстрые сроки 
проводить проверку знаний при помощи электронного тестирования и 
формировать отчеты по их результатам. Система дистанционного обучения 
позволяет отслеживать активность учащегося, временные затраты на тот или 
иной вид деятельности (просмотр видео материалов, тестирование и др.)  
[5, с. 13]. 
Таким образом, под дистанционными образовательными технологиями 
понимаются «образовательные технологии, которые могут быть реализованы в 
основном с использованием информационно-телекоммуникационных сетей на 
расстоянии, и такие технологии учитывают взаимодействие обучающихся и 
педагогических работников». Успешность обучения школьников по всем 
дисциплинам, при использовании дистанционных технологий (различных типов) 
зависит от качества электронных ресурсов, используемых в образовательном 
процесс и требует от учащихся самоорганизованность и умения целесообразно 
выстраивать свой график обучения. А также выбирать методы, методики и 
 
 
156 
средства реализации для каждой поставленной цели и успешно применять их на 
практике. 
В настоящее время в процессе изучения математики существует 
возможность использовать следующие дистанционные технологии: модульные 
технологии, 
кейс-технология, 
гейм-технологии, 
ТВ-технология, 
сетевые 
технологии. По мнению В.И. Снегуровой, использование дистанционных 
образовательных технологий в процессе обучения математике в средней школе 
требует выбора модели двустороннего взаимодействия педагога и учащегося, 
сочетающего асинхронное взаимодействие с систематическими консультациями 
и периодическим проведением занятий в режиме on-line. В таких случаях, 
педагог имеет доступ к различным образовательным ресурсам, позволяющим 
эффективно проводить дистанционные уроки математики. Образовательные 
порталы для учителей и учеников такие как ЯКласс, Яндекс.Учебник, Учи.ру, 
Российская электронная школа (РЭШ) содержат материалы, позволяющие 
учащимся изучить более глубоко учебные разделы, а также проводить 
школьникам самодиагностику по изученному материалу. С помощью данных 
образовательных 
ресурсов 
педагог 
может 
самостоятельно 
создавать 
проверочные работы по выбранной теме, регулировать объем и количество 
заданий, количество повторов и другие параметры. Данные сайты позволяют 
отслеживать индивидуальные достижения учащихся, количество времени, 
затраченного ребенком на изучение темы. 
Платформы Google Forms, Kahoot!, Madtest, Learningapps позволяют 
создавать задания для проведения контроля знаний учащихся. Например, тесты, 
как с закрытым, так и с открытым ответом, кроссворды, викторины, паззлы и т.п. 
Существуют также видео-платформы, позволяющие проводить онлайн-
уроки для учащихся. К ним относятся Zoom, Skype и Microsoft Teams. Каждая из 
платформ имеет свои недостатки и достоинства, которые представлены в 
таблице 1. 
 
 
 
157 
Таблица 1. Сравнение платформ 
Платформа 
Достоинства 
Недостатки 
Zoom 
Наличие интерактивной доски; 
Демонстрация файлов; 
Мультиплатформа; 
Чат; 
Проведение тестов; 
Виртуальная рука. 
Ограничение 
продолжительности. 
Skype 
Демонстрация файлов; 
Мультиплатформа; 
Чат; 
Виртуальная рука. 
Ограничение количества 
участников (до 50 чел.); 
Нет интерактивной доски. 
MS Teams 
Наличие интерактивной доски; 
Демонстрация файлов; 
Мультиплатформа; 
Чат; 
Проведение тестов; 
Удобно выдавать задания; 
Виртуальная рука. 
Нет явных недостатков. 
 
Специализированные сайты по подготовке к ВПР и государственным 
экзаменам также содержат дидактические и контрольно-измерительные 
материалы для осуществления целенаправленной работы по подготовке к 
различным видам аттестации по математике (https://math-oge.sdamgia.ru/, 
https://math-ege.sdamgia.ru/) в формате дистанционного обучения.  
Эффективность обучения математике с использованием дистанционных 
образовательных технологий определяется наличием у педагога технических 
умений (навыков работы с компьютерными программами, разработки 
электронных пособий); методических умений (методикой разработки и 
проведения дистанционных занятий); технологических умений (грамотного 
использования информационно-цифровых ресурсов на различных типах 
дистанционных занятий). В процессе использования дистанционных технологий 
обучения в процессе преподавания математики существенно меняется роль 
педагога. 
Акцент 
смещается 
в 
сторону 
тьюторской 
функции, 
когда 
преподаватель не просто передает знания, а руководит процессом обучения, 
указывая учащемуся на имеющиеся затруднения и способы их преодоления. 
 
 
158 
 СТАТЬЯ
Аннотация
. В статье демонстрируются анимационные возможности 
среды Geogebra при изучении темы «Элементарные преобразования графиков 
функций». Разработаны динамические примеры, демонстрирующие наглядность 
изучения этой темы в Geogebra, и описаны методические особенности работы с 
ними. 
Ключевые слова: график функции, анимационная модель, динамический 
чертеж, визуальное представление, Geogebra, элементарные преобразования 
графиков функций. 
Изучение графиков функций – важный раздел школьного курса 
математики. Данный раздел включает в себя одну из ключевых тем алгебры – 
«Элементарные преобразования графиков функций». Впервые учащиеся 
знакомятся с преобразованиями графиков в 7 классе при изучении линейной 
функции. В дальнейшем элементарные преобразования графиков встречаются в 
8-11 классах при изучении различных видов функций: парабол, гипербол, 
степенных, тригонометрических, показательных, логарифмических и др. 
Изучение графиков функций можно сделать более эффективным, если при 
обучении использовать информационные технологии. Они позволяют сократить 
время на изображение графиков на доске и в тетради, сделать более наглядным 
работу учащихся с ними. При изучении этой темы важно, чтобы у учащихся 
сформировались четкие визуальные представления, связанные с различными 
преобразованиями графиков функций. Для результативного формирования 
 
 
160 
визуальных представлений о таких преобразованиях недостаточно использовать 
только статичные чертежи на доске и в учебнике. 
Использование на уроках математики анимационных динамических 
моделей позволяет успешно решить данную проблему. Этой теме в последнее 
время посвящено много исследований, например, [1, 2]. Важно отметить, что 
применение компьютерной анимации обеспечивает активное восприятие нового 
учебного материала и повышает наглядность его представления. Динамическая 
визуализация учебного материала, по мнению экспертов и педагогов, 
представляет собой один из наиболее эффективных методических приемов 
обучения, 
который 
способен 
активизировать 
мысль 
обучающегося 
и 
поддерживать интерес к изучаемому материалу [3]. 
Одной из наиболее широко используемых динамических сред является 
Geogebra, которая позволяет создавать различные виды анимации (например, 
ручная анимация, кнопочная анимация и ползунковая анимация) [2]. Цель  
статьи – разработать в Geogebra динамические задания и примеры, позволяющие 
эффективно и наглядно сформировать у учащихся визуальное представление об 
элементарных преобразованиях графиков функций. Разработанные нами задания 
непосредственно связывают деятельность учащихся с теми преобразованиями 
графиков функций, которые нужно выполнить при решении.  
Пример 1. Используя график функции ݕ= ܽݔଶ, постройте график 
функции ݕ= −2(ݔ−3)ଶ+ 5. 
Указание. Измените старший коэффициент ܽ, вписав соответствующее 
значение в окно ввода. Сдвиньте график функции ݕ= ܽݔଶ, прижав точку ܣ с 
помощью мыши. 
Учитывая методические особенности решения этой задачи, покажем 
работу учащегося при его выполнении в динамической среде Geogebra. 
Учащийся открывает апплет в онлайн-версии Geogebra (перейдя по указанной 
учителем ссылке). На рабочем листе задана парабола ݕ= ܽݔଶ со старшим 
коэффициентом ܽ= 1. Значение старшего коэффициента можно изменять в окне 
ввода (см. рис.1). Для выполнения данного задания учащемуся необходимо 
 
 
161 
вспомнить, что графиком функции ݕ= ܽ(ݔ−݉)ଶ+ ݊ является парабола, 
которую можно получить из графика функции ݕ= ܽݔଶ с помощью двух 
параллельных переносов: сдвига вдоль оси ݔ на ݉ единиц вправо, если ݉> 0, 
или на – ݉ единиц влево, если ݉< 0, и сдвига вдоль оси ݕ на ݊ единиц вверх, 
если ݊> 0, или на – ݊ единиц вниз, если ݊< 0. 
Определив старший коэффициент, учащийся вписывает значение ܽ= −2 
в окно ввода, тем самым получив график функции ݕ= −2ݔଶ. Следующее 
преобразование, которое необходимо выполнить – сдвиг графика функции 
ݕ= −2ݔଶ на 3 единицы вправо вдоль оси абсцисс. Учащийся с помощью мыши 
передвигает параболу ݕ= −2ݔଶ и получает график функции ݕ= −2(ݔ−3)ଶ. 
Затем полученный график также с помощью мыши учащийся передвигает на 5 
единиц вверх вдоль оси ординат и получает график искомой функции 
ݕ= −2(ݔ−3)ଶ+ 5 (см. рис.1). 
 
 
 
 
Рис. 1. Графики в Geogebra для примера 1 
 
Пример 2. Используя график функции ݕ=
ଶ
௫, постройте график функции 
ݕ=
ଶ
௫ିଵ+ 3. 
 
 
162 
Указание. Сдвиньте график функции ݕ=
ଶ
௫, прижав точку ܣ с помощью 
мыши. 
Опишем методику работы с этим заданием. Учащийся открывает апплет в 
онлайн-версии Geogebra (перейдя по указанной учителем ссылке). На рабочем 
листе задана гипербола  ݕ=
ଶ
௫ и фиксированная точка ܣ на ее графике (см. 
рис. 2). При решении данного задания учащемуся необходимо вспомнить 
описанные в предыдущем примере преобразования графика функции. Учащийся 
должен определить, что график функции ݕ=
ଶ
௫ିଵ+ 3 получается из данного 
графика ݕ=
ଶ
௫ с помощью таких же двух элементарных преобразований. 
Необходимо выполнить следующее преобразование – сдвиг графика функции 
ݕ=
ଶ
௫ на 1 единицу вправо вдоль оси абсцисс, т.е. учащийся с помощью мыши 
передвигает график функции ݕ=
ଶ
௫ и получает ݕ=
ଶ
௫ିଵ. Затем полученный 
график учащийся с помощью мыши передвигает на 3 единиц вверх вдоль оси 
ординат и получает график искомой функции ݕ=
ଶ
௫ିଵ+ 3 (см. рис. 2). 
 
 
Рис. 2. Графики в Geogebra для примера 2 
 
Таким образом, при выполнении рассмотренных заданий учащиеся 
используют изученные ими свойства параболы и гиперболы и с помощью 
 
 
163 
манипулятора – мыши на компьютере или рукой на экране планшета могут 
изменять значение старшего коэффициента параболы в окне ввода и передвигать 
графики функций вправо и вверх до нужного положения. При этом учащиеся 
наблюдают в движении все изменения графиков функций, что формирует их 
визуальное представление о преобразованиях. 
Созданные в Geogebra апплеты можно использовать не только при 
решении заданий во время урока, но и при выполнении домашнего задания 
учащимися, что способствует формированию самоконтроля обучаемого.  
Использование 
анимационных 
возможностей 
динамической 
среды 
Geogebra является необходимым при изучении данной темы, так как оно 
позволяет эффективно сформировать наглядное представление об элементарных 
преобразованиях графиков функций. Причем применение разработанных и 
используемых на уроках математики динамических заданий направлено не на 
устранение «ручного труда» учащегося – выполнение упражнений в тетради, а в 
первую очередь на расширение арсенала средств учителя. Данный арсенал 
необходим для обучения математике, для наглядного и динамического поиска 
решения задач, для построения анимационных моделей и чертежей к задачам, 
решаемыми учащимися. 
Таким образом, в статье представлены анимационные возможности 
интерактивной среды Geogebra и разработаны динамические чертежи для 
изучения элементарных преобразований графиков функций. Приведенные в 
статье примеры анимационных заданий демонстрируют целесообразность и 
необходимость их использования для эффективного формирования визуальных 
представлений, связанных с преобразованиями графиков функций. 
Необходимо отметить, что современный учитель должен не только владеть 
основными математическими компьютерными инструментами, но и совместно с 
обучающимися 
создавать 
и 
использовать 
наглядные 
представления 
математических объектов. Разработка и создание в Geogebra динамических 
моделей является важным умением будущего учителя математики, так как 
применение компьютерной анимации позволяет улучшить качество работы 
 
 
164 
учителя, способствует более прочному усвоению учебного материала 
учащимися и повышает наглядность его представления [4, 5]. 
 
 СТАТЬЯ
Аннотация
: в статье рассматриваются основные трудности, с которыми 
столкнулись школьники в период дистанционного обучения, пути их решения, а 
также 
перспективы 
на 
дальнейшее 
использование 
дистанционных 
образовательных технологий при обучении математике в режиме «онлайн». 
Ключевые 
слова: 
дистанционное 
обучение, 
педагогическое 
исследование, дистанционные образовательные технологии, инструментарий, 
математика, обучение математики. 
 
Проблема эффективности дистанционного обучения среди школьников на 
сегодняшний день набирает все большие обороты. Уже много лет посещение 
детьми школы воспринимается как обязательный этап жизни. Но будет ли так 
всегда? Нужно ли готовить детей к новой форме обучения, но уже на постоянной 
основе?  
Актуальность изучаемого вопроса заключается в том, что в условиях 
самоизоляции отношение школьников к учебному процессу постепенно 
изменяется, и с наступлением онлайн-обучения в школах, учебная деятельность 
переходит на новый этап развития и подвергается кардинальным изменениям, 
что неуклонно отражается на школьниках и их отношении к изучению 
математики. Важно понять, готовы ли школы к переходу в онлайн-формат, и как 
улучшить учебную деятельность в нестандартных условиях?  
Школьному обучению в 2020 году пришлось преодолеть множество 
препятствий, таких как: резкий переход в онлайн, стресс как у учеников, так и у 
учителей, плохое самочувствие, низкая мотивация, новые условия обучения, и 
 
 
166 
тому подобные факторы, которые несомненно повлияли на изменение 
образовательного процесса. Как правило, в российских школах не практикуется 
дистанционное обучение на постоянной основе, за исключением специальных 
школ, формат которых отличается от средних образовательных учреждений. 
Однако, в связи с коронавирусной инфекцией на территории Российской 
Федерации, все учебные учреждения, а в частности все школы перешли в 
дистанционный формат. Чтобы ответить на вопрос об эффективности 
дистанционного обучения в период самоизоляции, стоит разобраться в чем же 
все-таки различие между двумя главными видами обучения: дистанционным 
обучением и привычным очным. 
Дистанционное обучение имеет все те же цели, задачи, содержание 
деятельности, методы, средства и педагогические приемы, что и очное, за 
исключением добавочных методов и средств для работы с компьютерными 
технологиями. Здесь на помощь приходят дистанционные образовательные 
технологии, которых на сегодняшний момент существует очень много. 
Виды дистанционных образовательных технологий: 
• кейсовая – в ее основе лежит возможность реализации текстовых, 
мультимедийных учебно-методических материалов, а также их отправка 
учащимся для самостоятельного изучения информации, стоит помнить, что 
представленный вид ДОТ используется только при регулярных консультациях с 
учителем; 
• телевизионно-спутниковая 
– 
данная 
технология 
основана 
на 
применении интерактивного телевидения: видеоконференции, виртуальных 
практических занятий; 
• сетевые технологии –  это прежде всего телекоммуникационные сети, 
которые применяются для обеспечения учащихся учебно-методическим 
материалом и взаимодействия с различной степенью интерактивности между 
преподавателем и учащимся.  
Важно отметить тот факт, что виды представленных дистанционных 
образовательных технологий не следует применять все сразу, так как это может 
 
 
167 
послужить перегрузкой школьников, и интерес к обучению может совсем  
исчезнуть. С другой стороны, очевидно, применение дистанционных технологий 
в обучении математике – это ключ к повышению эффективности российского 
образования.  
Что 
касается 
методов 
обучения, 
то 
можно 
предположить, 
что 
востребованными останутся методы устного объяснения и лекций, то есть 
визуализация происходит не с помощью школьной доски, а с помощью вывода 
информации на экран и онлайн доски в программе, где занимается класс. Таким 
образом, при внедрении дистанционных технологий в обучение меняется и 
взаимодействие учителя с учениками. При использовании дистанционных 
образовательных 
технологий 
взаимодействие 
субъектов 
образования, 
осуществляется в три этапа: 1) выполнение обучаемыми задания учителя; 
2) реакция преподавателя на ответ обучаемых; 3) 
действие 
обучаемых 
в 
ответ на реакцию преподавателя. 
В ходе проведенного опроса учителей Тюменской области были 
установлены следующие факты: 
А) Предпочтение при обучении математики в школе отдается кейсовой 
технологии.  Здесь взаимосвязь с учениками воспринимается учителем через 
общую эмоциональную атмосферу проводимого урока, через внешнее поведение 
учащихся, их местоположение, их организацию рабочего пространства, 
выражение лица, заинтересованность, увлеченность в процесс изучения какой-
либо темы, и т.д.  
Пренебрежение этим психологическим компонентом может привести к 
существенному искажению информации, который говорит о самом качестве 
усвоения знаний, компрометируя тем самым, саму идею использования 
компьютерных технологий в учебном процессе.  
Б) 
Среди 
основных 
средств 
дистанционного 
обучения, 
которые 
используют учителя Тюменской области можно выделить следующие: учебные 
книги (в бумажном экземпляре или на электронном носителе); сетевые учебные 
пособия, доступ к которым получает учащийся; аудиовизуальные средства 
 
 
168 
обучения; самостоятельные работы, проводимые с помощью онлайн платформ; 
тренажеры с удаленным доступом; компьютерные программы; тестирование 
знаний с удаленным доступом. 
В) 
Основным 
средством 
и 
вспомогательным 
инструментом 
в 
дистанционном формате обучения стали образовательные компьютерные 
программы, такие как «Microsoft Teams», «Zoom», «Skype», и другие. Следует 
отметить, что учителя отдают предпочтение корпоративной платформе «MS 
Teams», 
обосновывая 
выбор 
удобным 
интерфейсом 
рассматриваемой 
программы и наличием всех необходимых функций для успешного обучения. 
Следующим этапом исследования был проведен опрос среди учеников 
школ города Тюмени. Основная задача опроса состояла в том, чтобы выяснить 
как отразилась трансформация учебного процесса на школьниках и с какими 
трудностями им пришлось столкнуться. В социологическом опросе приняли 
участие 56 школьников, в частности это ученики 8-11 классов. Вопросы были 
направлены на освещение трех основных аспектов учебного процесса: 
психологического, организационного и предметного. Школьникам было 
предоставлено 
35 
вопросов, 
благодаря 
которым 
мы 
смогли 
сделать 
определенные выводы.   
В ходе обработки данных исследования было установлено, что основными 
трудностями в процессе изучения математики в дистанционном формате у 
школьников стали следующие: 
1) Низкая мотивация к изучению математики; 
2) Затруднения в просьбе помочь справиться с трудностями обучения; 
3) Чрезмерное времяпрепровождения за монитором;  
4) Частые самостоятельные работы; 
5) Недостаточное количество часов по изучению предмета; 
6) Большой объем домашней работы; 
7) Отсутствие разнообразия на уроках математики; 
8) Отсутствие опыта учителя работы с компьютером. 
 
 
169 
Безусловно, перечисленные трудности требуют решений. Для помощи 
учителям и обучающимся был разработан методический инструментарий по 
применению.  
Педагогический инструментарий содержит в себе следующие компоненты: 
1. 
Рекомендации по организации и проведению дополнительных 
консультаций в режиме онлайн. Такие консультации необходимы для быстрой 
адаптации школьников к новым условиям образовательной среды и должны 
быть организованы с целью помочь учащимся справиться с вопросами, которые 
вызывают трудности при изучении математики. При этом, не обязательно 
реализовывать 
данную 
идею 
посредством 
видеоконференций, 
можно 
использовать чаты и отдельные форумы для обсуждений. 
2. 
Рекомендации по выбору типов уроков математики с применением  
ИКТ. Дистанционные технологии – базис дистанционного обучения, а ИКТ – 
своеобразный помощник дистанционной образовательной технологии (ДОТ), 
без которого организовать учебный процесс просто невозможно. ИКТ, 
используемые на уроках математики могут быть следующими: компьютерные 
презентации, компьютерные обучающие программы, электронные книги и 
учебники, мультимедийные устройства, поиск информации в интернете, 
интерактивные тесты, учебные конференции, онлайн доска, видео-уроки, и 
прочее. 
3. 
Рекомендации 
по 
использованию 
большего 
количества 
творческих/исторических д/з в онлайн формате. Как показывает статистика, 
школьникам крайне тяжело воспринимать математику в чистом виде на 
удаленном обучении, именно поэтому крайне важно разнообразить уроки 
математики, добавить творческих заданий, исторических ракурсов, физ. 
минуток, и таким образом, у обучающихся появится мотивация к учению и 
хороший заряд эмоций на продолжение урока. 
4. 
Рекомендации по использованию аудиальных, визуальных и 
аудиовизуальных методов. Опыт учителей показывает, что можно проводить как 
аудио, так и видео уроки, но конечно визуальное восприятие не сравнить ни с 
 
 
170 
одним другим, поэтому третий метод работы будет более эффективен для 
образовательного процесса, а особенно для восприятия детьми математики. 
5. 
Рекомендации по использованию активных ссылок. Одно из 
преимуществ дистанционного обучения – быстрый ориентир по сети интернет. 
Поскольку мы уже договорились, что будем использовать на уроках творческие 
задания, исторические факты и прочее, то чтобы сэкономить драгоценное время 
урока, на помощь приходят активные ссылки, заранее подготовленные учителем 
или учениками, которые позволят «разбавить» монотонный урок. 
6. 
Рекомендации по использованию видео-уроков. На различных 
видеохостингах, таких как «youtube», «Яндекс.эфир», и многих других, 
прослеживается огромное количество видео роликов на любые интересующие 
темы, и математика не обошла данную степь стороной. Благодаря тому, что 
ученики находятся возле компьютера, они могут всегда обратиться к видео-
урокам, если кто-то плохо усвоил учебный материал, а учитель в свою очередь 
может помочь школьникам, и отобрать ссылки более полезных и эффективных 
видео роликов по той или иной теме. 
7. 
Рекомендации по разработке онлайн тестов, с элементами обратной 
связи. Такие тесты – отличная замена самостоятельным работам. Как показывает 
проведенное 
исследование 
ученики 
жалуются 
на 
слишком 
частые 
самостоятельные работы. Педагогов можно понять, ведь очень сложно 
проследить какой процент учащихся понял тему, а какой нет, особенно если ты 
не видишь класс от слова «совсем». Но слишком частые самостоятельные – 
перегруз и стресс для любого школьника. Поэтому на их место приходит онлайн 
тест по пройденной теме, если так угодно учителю. Он может договориться со 
школьниками и не выставлять оценки в случае плохого результата, и затем более 
плодотворно отработать трудную тему. 
8. 
Рекомендации по  выбору сервисов для разработки тестовых заданий  
по математике: сервис «Online Test Pad». Бесплатный многофункциональный 
сервис для проведения тестирования и обучения. Сервис позволяет учителю 
математики сэкономить время на создание собственного теста, а также выделяет 
 
 
171 
пользу для учеников, поскольку темы довольно интересные, содержат в себе 
задания с межпредметными связями, подходит как для начальных классов, так и 
для среднего и старшего звена.  
9. 
Рекомендации по использованию интернет площадки – «Microsoft 
Teams». Один из самых важных компонентов учебного процесса в 
дистанционном обучении. Именно благодаря данной платформе, учитель 
математики может контролировать учебный процесс, а именно: проводить 
видеоконференции 
и 
консультации, 
пользоваться 
онлайн 
доской, 
контролировать чат, демонстрировать экран, видеть присутствующих на уроке, 
загружать файлы в команду, не путаясь в классах, создавать и принимать 
задания, и многое другое. 
Таким образом, разработанный инструментарий поможет учителю 
математики оперативно реализовать любой тип урока, будь то изучение нового 
материала, закрепление знаний, промежуточный контроль или любой другой.  
Следует помнить, что дистанционное обучение в любой момент может 
вновь молниеносно ворваться в российские школы, и абсолютно все участники 
учебного процесса должны быть к этому готовы и не повторять ошибок, с 
которыми они столкнулись на онлайн обучении. 
 СТАТЬЯ
Аннотация
. В статье идет речь о реализации уровневой дифференциации 
на уроках математики посредством организации практикумов по решению 
текстовых задач на движение. В работе сформулирована значимость текстовых 
задач 
на 
движение 
в 
школьном 
курсе 
математики, 
рассмотрен 
дифференцированный 
подход 
к 
обучению, 
представлены 
различные 
классификации практикумов. Также приведен список тем, в рамках которых 
можно организовать практикум.  
Ключевые 
слова: 
математика, 
текстовые 
задачи 
на 
движение, 
дифференцированное обучение, практикум. 
 
Давно доказано, что текстовые задачи являются важным средством 
обучения математике. Их рассматривали такие известные математики, как 
Л.М. Фридман [1], Ю.М. Колягин [2], Д. Пойа [3] и др. С их помощью школьники 
осваивают вычислительные навыки, учатся видеть взаимосвязь между 
величинами, получают опыт применения математических знаний к решению 
жизненных задач. Но зачастую, у учащихся при виде текстовой задачи 
появляются отрицательные эмоции, многие, выполняя домашнюю или 
контрольную работу, пропускают задание решить задачу. Причин тому очень 
много. Например, школьники не видят связь величин, рассматриваемых в тексте 
задачи, не понимают процессы, которые описаны, не знают этапы решения, 
нередко у них возникают проблемы и с выделением условий. Страх перед 
задачей появляется из-за неумения составлять, необходимые для решения, 
уравнения и неравенства, из-за неумения проводить вычисления.  
 
 
174 
Одним из самых распространенных типов текстовых задач являются 
задачи на движение, которые рассматриваются в рамках каждой темы школьного 
курса математики. Начиная с начальной школы и на протяжении всего обучения, 
дети изучают арифметический и алгебраический метод решения текстовых 
задач, а для старшеклассников можно выделить блок задач, которые решаются с 
помощью производной и интеграла.  
При изучении любой темы из школьного курса математики, в том числе и 
текстовых задач, нужно учитывать, что каждый учащийся имеет свои 
особенности, склонности и интересы, но, кроме этого, у всех свой уровень 
готовности к образованию. Соответственно, чтобы активизировать весь класс, 
необходимо предлагать учебный материал каждому учащемуся в зависимости от 
зоны его ближайшего развития, а реализовать это можно с помощью 
дифференцированного обучение.  
Дифференцированное обучения в математике предполагает создание 
групп учащихся, различающихся по содержанию обучения, формам и уровню 
учебных требований к ним [4]. По содержанию образования выделяют 
уровневую и профильную дифференциации. [5]. Профильная дифференциация 
предполагает развитие склонностей и творческих способностей школьников и их 
подготовку к продолжению образования в выбранной области. Уровневая 
дифференциация – организация обучения, в рамках которой учащиеся 
самостоятельно могут выбирать уровень глубины и сложности усваиваемого 
содержания обучения. Реализовать уровневую дифференциацию можно не 
только с помощью самостоятельных и контрольных работ, творческих заданий, 
но и в рамках проведения целого урока. Наиболее подходящим для этого 
является урок-практикум.  
На 
уроках-практикумах 
осуществляется 
работа 
по 
закреплению 
изученного теоретического материала, что позволяет сформировать у учащихся 
умения и навыки решения основных типов задач, опорных задач темы, а также 
оформления решений. Такие уроки воспитывают креативность мышления, 
позволяют учащимся проявить свою самостоятельность, а для учителя – это 
 
 
175 
хорошая 
возможность 
учесть 
неоднородность 
класса: 
подобрать 
соответствующие задания для сильных учащихся и повысить предъявляемые 
требования, чтобы улучшить их уровень знаний по теме и в целом подкрепить 
интерес к предмету, а также составить свой список обязательных заданий для 
учеников с низкой обучаемостью. На таких уроках появляется возможность 
использования групповых форм работы. Естественно, подготовка к уроку-
практикуму занимает у учителя большой объем времени, но при проведении 
такого урока он сможет не только дифференцировать учащихся, но и, 
проанализировать их работу, выявить пробелы в знаниях и составить план по их 
восполнению [6]. 
Организация урока-практикума может осуществляться по следующему 
плану: 
1. 
Выбор темы, постановка цели и задач практикума.  
Уроки-практикумы, 
как 
правило, 
проводятся 
после 
изучения 
определенного цикла тем. Часто на них отводится два часа, поэтому, 
замотивировав себя на проведения практикума, учителю необходимо для начала 
высвободить уроки. Также учителю нужно определить какое место занимает 
практикум в тематическом планировании.  
2. 
Составления плана урока для учителя, а также инструкции для 
учащихся. 
На данном этапе учителю необходимо продумать в какой форме будет 
проводиться практикум и как, в зависимости от уровня знаний учащихся, 
дифференцировать задания. 
3. 
Подготовка учебной литературы, оборудования. 
В рамках этого этапа учитель непосредственно занимается подбором 
задачного материала. 
4. 
Проведение урока-практикума. 
Важно отметить, что урок-практикум не является самостоятельной 
работой, учащиеся всегда могут обсудить с учителем, возникшие вопросы. 
5. 
Подведение итогов и анализ. 
 
 
176 
На данном этапе учитель не только проверяет и оценивает работу 
учащихся, но и проводит рефлексию, как для учеников, так и для себя. 
Анализирует пробелы в знаниях учащихся, составляет план по их устранению, 
выявляет сильные и слабые группы учащихся, выделяет плюсы и минусы в 
организации практикума [7]. 
Обычно в литературе выделяют такие типы уроков-практикумов, как:  
 
урок-практикум, направленный на углубление теории;  
 
урок-практикум групповой обработки информации;  
 
урок-практикум индивидуальной обработки информации;  
 
урок-практикум контроля знаний;  
 
зачет;  
 
комбинированный урок-практикум [7]. 
Но часто учителя в своей работе используют нестандартные типы, 
например, в своей статье: «Технология обучения математике в классах с 
углубленным изучением предмета» Горохова Надежда Васильевна, учитель 
математики города Оренбурга, выделила следующие типы уроков-практикумов 
[8]: 
1. 
Практикум «по горизонтали и вертикали». 
Суть данного практикума в следующем: если учащийся справляется с 
задачей, он переходит к следующей более сложной, т.е. вниз по вертикали, если 
же у школьника возникли вопросы, он консультируется с учителем, а после 
получает подобную задачу, т.е. двигается по горизонтали; 
2. 
Практикум «по баллам». 
Учащимся предлагается набор задач, для каждой указано сколько баллов, 
может получить школьник, если предоставит верное решение. Учитель заранее 
проговаривает какое количество баллов необходимо набрать, чтобы получить 
отметки «5», «4», «3». Учащиеся в зависимости от своих возможностей 
выбирают задачи, важно отметить, что, выбирая самые простые, невозможно 
получить «5», если школьник не может решить какое-то задание, он оставляет 
его для консультации с учителем. Данный практикум отнимает очень много сил 
 
 
177 
у учителя, т.к. необходимо составить большое количество заданий, также 
потратить много времени на проверку. 
3. 
«Стандартный блок» и «нестандартный блок». 
Учитель готовит для урока два комплекта заданий с разными критериями 
оценивания. Учащиеся самостоятельно, учитывая свои способности, выбирают 
один из них.  
4. 
«Разноуровневый» практикум. 
В 
рамках 
данного 
практикума 
учащимся 
предлагается 
набор 
разноуровневых задач (задачи базового уровня, повышенного и высокого). 
Учитель самостоятельно распределяет школьников по уровням. 
5. 
Практикум «абитуриента». 
Данный тип практикума целесообразно использовать в выпускных 
классах. В течение четверти (полугодия) каждую неделю выделяется по часу на 
решение задач определенного раздела (например, задачи по планиметрии, 
неравенства различных видов и т.д.). 
Проанализировав школьные рабочие программы, можно выделить 
большое количество тем, в рамках которых удастся провести практикум по 
текстовым задачам на движение. Один из вариантов перечня таких тем приведен 
ниже (Рис. 1). 
Составляя практикумы необходимо учитывать уровень знаний учащихся, 
особенности темы, целесообразно использовать как простые задачи, так и задачи 
повышенной сложности. Например, в рамках практикума по горизонтали и 
вертикали для учащихся 8 классов на тему «Решение текстовых задач на 
движение с помощью неравенств и систем неравенств», учащимся предлагается 
четыре текстовых задачи на движение (Рис. 3), которые необходимо решить, 
обязательно составляя неравенства или системы неравенств. Первая задача – 
самая простая, ее можно решить, и не составляя неравенство, это позволяет 
учащимся проверить правильность своих действий и настроиться на работу. 
Решается эта задача с помощью линейного неравенства. Чтобы решить вторую 
задачу, учащимся необходимо составить систему из двух линейных неравенств 
 
 
178 
с одной переменной и решить ее. Третья задача решается с помощью системы 
неравенств с двумя переменными. В данной задаче необходимо не просто 
решить систему, а оценить результат. Четвертая задача – это задача 
повышенного уровня сложности. Прежде, чем составить неравенство учащимся 
необходимо внимательно разобраться с условием задачи и выполнить некоторые 
вычисления. А затем, составив неравенство, решить его методом интервалов.  
 
Рис. 1. Темы ШКМ, в рамках которых можно организовать практикум  
по текстовым задачам на движение 
 
Рис. 2. Практикум для 8 класса "Решение текстовых задач на движение  
с помощью неравенств и систем неравенств" 
 
 
179 
 
Рис. 3. Практикум для 8 класса "Решение текстовых задач на движение  
с помощью неравенств и систем неравенств" (продолжение) 
Подводя итог, нужно сказать, что тема «Текстовые задачи на движение», 
действительно, вызывает много трудностей у школьников. Но организовывая 
интересные уроки с учетом индивидуальных особенностей учеников, учитель 
сможет не только укрепить интерес учащихся, но и улучшить их навык решения 
текстовых задач.  
 
 СТАТЬЯ
Аннотация
. Формирование навыка самоконтроля важно в процессе 
обучения, так он прямо влияет на успеваемость учащегося. Поэтому разработка 
методики формирования навыка является актуальной целью в учебном процессе. 
Результатом исследования теоретической базы вопроса самоконтроля является 
разработка собственной методики формирования навыка самоконтроля.  
Ключевые 
слова: 
навык 
самоконтроля, 
формирование, 
дневник 
самоконтроля, процесс обучения, успеваемость.  
Самоконтроль является неотъемлемым элементом учебной деятельности. 
Навык самоконтроля сказывается на формировании знаний, умений и навыков. 
А как следствие на общей успеваемости в процессе обучения.  
Поэтому разработка методики формирования навыка самоконтроля в 
процессе обучения является целью данной работы.  
Тема формирования навыка самоконтроля является довольно актуальной, 
так как умение учиться повышает успеваемость учащихся. А навык 
самоконтроля напрямую связан с умением учиться.  
Самоконтроль является важной и неотъемлемой частью жизни. Под 
самоконтролем понимается выявление, измерение и оценивание собственных 
знаний, умений, навыков и достигнутых результатов развития. Очень важно 
сформировать данный навык на начальном этапе обучения.  
Значимость навыка самоконтроля велика. Самоконтроль является одним 
из учебных универсальных действий. Следовательно, на нем строится весь 
процесс обучения.  
Существует множество различных приемов и методов формирования 
навыка самоконтроля. Каждый автор в своей методике опирался на различную 
 
 
182 
теоретическую базу, состоящую из исследований в областях педагогики и 
психологии.  
При разработке личной методики формирования навыка самоконтроля как 
средства повышения успеваемости учащихся в качестве теоретической базы 
были взяты следующие работы: 
1) 
Концепция зоны ближайшего развития Л.С. Выготского. Основной 
мыслью данной концепции является тот факты, что действие, выполняемое 
учеником сегодня с помощью педагога, сможет быть выполнено завтра 
самостоятельно.  
2) 
Теория поэтапного формирования умственных действий П.Я. Галь-
перина. Он выделяет 6 этапов формирования умственных действий. 
А также использовался личный опыт. 
Сама методика формирования навыка самоконтроля включает в себя 
несколько этапов. Первый этап – это определение уровня сформированности 
навыка на начальном моменте работы. Определить можно с помощью 
специальных критериев: 
– наличие потребности в самоконтроле (наличие стремления к 
самопроверке и внешнему контролю); 
– овладение различными видами самоконтроля (проверка по алгоритму, 
сравнение с готовым ответом или решение, достигать ответа, выполнять 
поставленные задачи, следовать правилам и т.д.); 
– уровень произвольного самоконтроля (включаемость в работу, решение 
задания, самостоятельность в действиях). 
Условно можно разделить на 4 уровня сформированности навыка 
самоконтроля. 
Второй этап – использование различных методов и форм формирования 
навыка на уроках математики. Используются в основном 3 формы для 
формирования навыка: фронтальная, индивидуальная и парная. А методам 
формирования можно отнести коллективная проверка задания, взаимопроверка 
с соседом по парте, выполнение проверки по алгоритму, проверка с готовым 
 
 
183 
решением или ответом, составление обратных задач. Методы можно 
использовать на любом уроке, не прибегая к дополнительной подготовке.  
Третьим этапом является введение дневника самоконтроля как средства 
формирования навыка самоконтроля. Дневник самоконтроля разработан для 
учеников разных возрастных групп: младшие школьники (2-5 классы) и старшие 
школьники (6-11 классы). Он представляет собой таблицу, заполняемую 
школьниками после самостоятельных и домашних работ. Дневник способствует 
прослеживаю успеваемости как на уроках математики, так и на других учебных 
предметах. Визуализация своих успехов и неудач способствует внутренней 
мотивации для более продуктивной работы. В дневнике самоконтроля для 
младших школьников необходимо заполнять следующие колонки: предмет, дата, 
количество заданий, количество выполненных правильно, своя оценка работы. В 
дневнике для старших школьников колонки немного отличаются: предмет, дата, 
тема, процент правильно выполненных заданий, вид ошибок, вид заданий с 
ошибками, своя оценка работы. Говоря, о старших школьниках, то дневник 
самоконтроля позволяет им определить затруднительную для них тему, вид 
заданий1, или наиболее распространенный вид допускаемых ошибок2. Благодаря 
чему они самостоятельно или с помощью педагога сможет устранить имеющиеся 
трудности. Также в этом этапе вводится дневник контроля учителя. Этот дневник 
организует внешний контроля успеваемости ученика со стороны учителя. Так 
как вводя и развивая элементы самоконтроля, нельзя пускать процесс обучения 
на самотек. Необходим внешний контроль, который при необходимости будет 
помогать и корректировать успеваемость учащихся. Поэтому дневник контроля 
учителя содержит следующие колонки для заполнения: предмет, дата, тема, 
                                                
1 Вид 
заданий: 
устные 
вопросы, 
письменные 
вопросы, 
текстовые 
задачи, 
вычислительные примеры, уравнения, неравенства, доказательства. 
2 Вид ошибок: вычислительные, незнание метода или алгоритма решения, непонимание 
условия задания, незнание свойств, правил и т.д., описка (невнимательность), ошибка в 
построении, неправильное решение, незаконченное решение, не выполнено.  
 
 
 
184 
процент правильно выполненных заданий, вид ошибок, вид заданий с ошибками, 
метод нахождения ошибок, темы для повторения.  
И на четвертом этапе вводится коррекция успеваемости. Потому что, как 
уже говорилось выше, весь процесс формирования навыка самоконтроля и 
процесс обучения должен проходить под контролем педагога. Возникают 
ситуации, когда ученик не в состоянии справиться сам, успеваемость падает и 
необходима коррекция. Коррекция начинается с поиска и анализа трудных для 
ученика моментов. После чего индивидуально проводятся консультации, на 
которых повторяется все теоретическая база, необходимая для устранения 
ошибок. И после выбирается необходимые средства, отработки трудных 
моментов. В своей методике отражены 3 основных средства: использование 
тематических заданий, использование однотипных заданий, устранение 
однотипных ошибок.  
Разработанная методика подходит для использования как очного формата 
обучения, так и для дистанционного. Но отличие будет состоять в том, что во 
время дистанционного формата обучения все самостоятельные и контрольные 
работы будут проводиться дома, без постоянного контроля со стороны педагога, 
и нет полной уверенности в том, что ученик все выполнял самостоятельно. 
Поэтому нельзя с уверенностью говорить о хороших результатах, как о хорошем 
владении изученным материалом.  
 
Исходя из всей теоретической базы и практических методик разных 
авторов, 
удалось 
сформировать 
собственную 
методику 
формирования 
самоконтроля как средства повышения успеваемости учеников. Работу по 
формированию навыка самоконтроля необходимо производить с начальной 
школы до выпуска из нее. При этом, использование методов и средств 
формирования навыка необходимо производить комплексно и постоянно. Навык 
самоконтроля способствует повышению успеваемости учащихся. Поэтому его 
формирование актуально в момент начала обучения.  
 
 
 
 
185 
 СТАТЬЯ
Аннотация
: 
в 
статье 
рассматриваются 
основные 
дистанционные 
образовательные технологии при подготовке к единому государственному 
экзамену по математике, а также представлены примеры ее применения в 
школьной среде. 
Ключевые 
слова: 
дистанционное 
образование, 
дистанционные 
технологии, онлайн-курсы, вебинары, ЕГЭ. 
 
 
В связи с последними событиями в мире все российское образование было 
вынуждено перейти на дистанционный формат обучения. Именно этот период в 
школьной жизни заставил задуматься об очень важном вопросе, а именно: что 
нужно предпринять, чтобы обучение было результативным, а ученики активно 
проявляли интерес к неизведанным горизонтам.  
 
Дистанционные образовательные технологии – это образовательные 
технологии, 
реализуемые 
с 
применением 
информационно-
телекоммуникационных 
сетей 
на 
расстоянии, 
предусматривающие 
взаимодействие 
учеников 
и 
педагогов. 
Данное 
обучение 
требует 
самостоятельности от ученика: нахождение нужной информации в интернет-
пространстве, умение анализировать, достигать поставленных целей на уроках и 
уметь решать задания. Данная форма обучения – это отличная платформа для 
размышления и проявления фантазии в рамках уроков как для учителя, так и для 
ученика. Такие методы обучения не только повышают активное взаимодействие 
ученика и учителя, но и открывают всесторонние доступы к различной 
информации, что в следствии развивает умение классифицировать информацию. 
 
 
187 
Данная методика, как показывает практика, заставляет изменить организацию 
урока, что можно отнести к перестройке образовательной системы. Как раз в 
этой новой образовательной системе действует такая схема: «ученик-ученик», 
«учитель-ученик» и ученик – как равноправный участник образовательной 
деятельности.  
Дистанционные технологии начали свое активное развитие еще до 
пандемии, когда, к примеру, выпускники записывались на онлайн-курсы по 
подготовке к ЕГЭ по математике, покупали различные чек-листы. Можно 
выделить наиболее популярные дистанционные технологии: 
1. Онлайн-курсы; 
2. Дистанционные тренажеры; 
3. Вебинары на базе онлайн-платформ. 
Первый и наиболее популярный вид дистанционных технологий 
заключается в онлайн-курсах. Кроме того, будущие учителя и уже работающие 
педагоги в век компьютерных технологий должны работать с дистанционными 
образовательными технологиями и уметь пользоваться различными курсами. 
Дистанционный 
курс, 
который 
помогает 
участнику 
более 
подробно 
познакомиться и понять математику, должен содержать в себе четыре главные 
составляющие: 
1. Педагогическое администрирование; 
2. Учебно-методическое администрирование; 
3. Техническое администрирование; 
Как правило, хороший дистанционный курс должен на протяжении 
прохождения быть под наблюдение закрепленного педагога, то есть тьютора. 
Современный, проработанный курс должен нести собой также некую 
познавательную и самостоятельную деятельность ученика. Целью и задачами 
курсов по подготовке к ЕГЭ по математике являются всеобщими –  обучающийся 
должен самостоятельно научиться познавать новые горизонты, стремиться к 
развитию и, конечно, расширять математические знания, дабы добиться 
желаемых результатов по государственному экзамену, и, естественно, 
 
 
188 
пользоваться таким инструментом, как обратная связь между педагогом и 
учеником. Также одним из плюсов является то, что участник онлайн-курса может 
в любой момент вернуться к неусвоенной теме. 
Различные курсы, ориентированные на подготовку к ЕГЭ по математике, в 
основном основываются на практике. Практика решения как актуальных задач, 
которые по возможности могут попасться на настоящем экзамене, так и 
устаревших задач, которые, несомненно, развивают логику и математическое 
мышление. Также рассматриваются разные варианты решения однотипных 
задач прошлых лет, чтобы отработать и усовершенствовать логические навыки. 
Контроль, как показывает практика, основывается на двух точках – 
обратная связь от тьютора и тестирование, результаты которого даются через 
некоторое время.  
Следующим 
вариантом 
проведения 
подготовки 
к 
единому 
государственному экзамену по математике являются дистанционные тренажеры. 
Дистанционным тренажером является обычный тест на время, где участник 
выбирает нужные ему темы и знает заданные временные рамки. К примеру, 
большинство сайтов дают максимум час на решение таких тем, как 
«Элементарные бытовые задачи», «Графики. Диаграммы», «Планиметрия. 
Длина. Площадь» и «Производная. Первообразная». Тест автоматически 
составляется по запросу ребенка и начинает отсчет времени также 
автоматически.  
Данная 
дистанционная 
технология 
вырабатывает 
такое 
качество 
индивидуума, как шаблонность. Шаблонность выражается в склонности 
мыслить обыденными, трафаретными решениями. С одной стороны, ЕГЭ по 
математике требует некоторой шаблонности, но минусом можно считать то, что 
в основном ребенок не понимает, что решает, делает все на автомате. Также 
почти все дистанционные тренажеры дают только правильный ответ, но не 
показывают решения. Следовательно, из всего вышесказанного можно сделать 
вывод, что онлайн-тренажер не расширяет кругозор знаний, не развивает и «не 
прокачивает» образовательные навыки.  
 
 
189 
Вебинары на базе онлайн-платформ – это то, что сейчас встречается в 
рекламе на различных сайтах и интернет-приложениях; то, что сейчас в нашем 
обществе имеет огромную популярность. Можно с уверенностью сказать, что 
вебинар – это одно из средств создания открытого образования, которое 
основано на технологиях дистанционного обучения.  
Вебинар – он же онлайн-семинар – обычно принято проводить раз в 
неделю в течение часа. Чтобы вовремя попасть на него, выпускникам 
отправляются сообщения с указанием времени проведения, темы и информации 
для доступа к мероприятию. На вебинаре по подготовке к профильной 
математике еженедельно поднимаются сложные темы, активно показывается 
решение и проводится практика, что несомненно несет за собой положительную 
статистику сдачи ЕГЭ после своевременного посещения таких видов 
дистанционных технологий.  
В период развивающихся дистанционных технологий и активно 
охватывающего все сферы деятельности дистанционного образования, хотелось 
бы встречать наиболее проработанные онлайн-курсы. Хотелосьб бы представить 
всеобщему вниманию концепцию элективного курса по подготовке к единому 
государственному 
экзамену 
по 
математике, 
реализуемого 
посредством 
дистанционных методов. 
Любой 
образовательный 
дистанционный 
ресурс, 
нацеленный 
на 
подготовку к сдаче ЕГЭ по математике, в первую очередь, должен 
разрабатываться с учетом поставленной цели. Недостаточно в онлайн-курсе 
иметь лишь список проводимых лекций и практик – часто после этого выпускник 
просто не будет продолжать свое обучение. Школьной теории и практики вполне 
достаточно, чтобы сдать экзамен на средний балл.  Предпочтение школьников 
отдается именно дистанционному дополнительному образованию, поскольку 
оно реализуется не только в качестве улучшения базовых математических 
знаний, но и в качестве развития логики и умении решать задачи повышенной 
сложности. В самом начале создания курса, попробуйте ответить на такие 
вопросы: 
 
 
190 
 Зачем школьнику данный курс? 
 На выходе какой результат сможет получить школьник? 
 Какие знания, умения и навыки будут активно совершенствоваться? 
Следующим пунктом является анализ школьного курса математики, 
начиная с пятого класса, заканчивая одиннадцатым. Для себя и своего будущего 
курса нужно отметить каким темам, по вашему мнению, уделено наименьшее 
внимание и время прохождения. Проанализировать задания в ЕГЭ, отметить по 
каждому тему и свести с математическим курсом. К примеру, для 
положительного решения восемнадцатого задания в математическом курсе 
недостаточно как теории, так и практики. Следовательно, в курсе должно быть 
уделено больше времени на рассмотрение задания и анализа его основной 
концепции.  
Каждый модуль должен иметь собственную цель, которая с прохождением 
приближает участника к общей выбранной цели и задачам. Также из этого 
следует, что последовательность тем должна быть расположена с учетом 
возрастания сложности, логики и класса, в котором должна была изучаться тема. 
Самым популярным, работающим, но и простым является следующий метод – от 
простых задач к сложным. К примеру, сначала выпускник решает неравенство с 
помощью простейшего тождественного преобразования – замены, а затем 
начинает практиковаться в решении, к примеру, тригонометрических неравенств 
с изображением на так называемом «круге».  
Онлайн-курс должен содержать в себе дополнительные материалы – будь 
это научные статьи, которые привлекли бы внимание выпускников и развивали 
интерес к изучению математики, или лонгриды, дополнительные видеоуроки с 
объяснениями, чеклисты. Достаточно хорошей идей является наличие 
конспектов, аннотаций, интеллект-карт к каждому онлайн-уроку. 
И последний, но очень важный пункт, которого должен придерживаться 
создатель онлайн-курса – это промежуточные точки контроля. Одна, но большая 
контрольная работа не сулит хороших результатов по окончанию курса – 
выпускник не сможет на финишной прямой исправить тему, которая показала 
 
 
191 
отрицательные результаты. Именно поэтому нужно заранее обозначить 
контрольные точки после каждого модуля, где будут присутствовать весомые, 
важные темы. В качестве контроля можно предложить небольшой тест, по 
результатам которого проверяющему будет ясно, с какой темой у выпускника 
имеются проблемы и дать обратную связь.  
Таким образом, данные рекомендации по созданию онлайн-курса можно 
активно использовать, чтобы участники добивались приемлемых результатов. А 
также не стоит забыть, что подготовка к ЕГЭ в дистанционной форме – это 
продуктивный вариант формы работы и усвоения новых знаний. 
 
 СТАТЬЯ
Аннотация
. 
В 
статье 
обсуждается 
важная 
составляющая 
профессиональной подготовки будущего учителя математики – навыки 
исследовательской 
деятельности. 
На 
основе 
некоторых 
известных 
геометрических задач сформулированы и решены исследовательские задачи о 
последовательностях прямоугольников и квадратов, вписанных в данный 
треугольник. Составление и решение таких задач студентами с использованием 
динамической среды Geogebra формирует их навыки исследовательской 
деятельности необходимые в будущей профессиональной деятельности. 
Ключевые слова: исследовательская деятельность студентов, подготовка 
будущих учителей математики, исследовательская задача. 
 
Эффективная подготовка будущего учителя математики невозможна без 
формирования навыков исследовательской деятельности. Результативность 
организации и реализации такой деятельности в предметной подготовке 
существенно зависит от содержания, постановки и методов решения задач, с 
которыми будут сталкиваться студенты [1].  
Вовлечение студентов в деятельность, направленную на самостоятельное 
составление 
и 
решение 
межпредметных 
исследовательских 
задач 
с 
использованием информационно-коммуникационных технологий (например, 
 
 
193 
таких как GeoGebra), развивает инициативность и мотивирует их к 
самостоятельной поисковой и экспериментальной деятельности. 
Важным моментом для мотивации студентов является знакомство с 
новыми современными публикациями и новыми результатами по проблеме 
исследования. Многие студенты зачастую теряют интерес к исследовательской 
деятельности, если полученные ими результаты уже известны более 1000 лет, а 
решение поставленных перед ними задач можно найти в Интернете. 
Другим значимым моментом для успешного формирования навыков 
исследовательской деятельности является постепенное усложнение задач. 
Излишне сложные первоначальные задачи также могут снизить мотивацию к 
исследовательской деятельности, и, как следствие, навыки такой деятельности 
будут сформированы на низком уровне. 
Для того чтобы обеспечить положительную динамику в работе студента 
необходимо обеспечить на начальном этапе простоту и наглядность в задачах. 
Можно начинать работу с самых часто встречающихся и хорошо изученных 
математических объектов. 
Опишем опыт нашей работы по составлению и решению межпредметных 
исследовательских задач с использованием информационно-коммуникационных 
технологий. 
На начальном этапе студенты знакомятся с задачами, которыми 
занимались математики еще с древних времен. Например, с такими, как задача 
Дидоны и задача Евклида (в данный треугольник ܣܤܥ вписать параллелограмм 
ܣܦܧܨ наибольшей площади) [2]. Выполняя информационный поиск, сравнение 
и анализ различных задач по этой теме, выясняется, что и в современной 
математике есть задачи (в том числе и нерешенные), связанные с наибольшими 
или наименьшими величинами, характеризующими какую-либо фигуру [3]. 
Для задач на «вырезание» или «вписывание» фигуры в фигуру очевидной 
становится их практическая направленность: интерес представляет, например, 
способы вырезания прямоугольника наибольшей площади из различных 
геометрических фигур. Теоретический интерес этого направления исследования 
 
 
194 
подчеркивается наличием результатов, полученных в середине XX века. 
Немецким математиком Зюссом была доказана теорема о том, что в любую 
выпуклую фигуру можно вписать параллелограмм, площадь которого равна 
половине площади фигуры. Аналогичных результатов для вписанных в 
геометрические фигуры квадратов нет, поэтому многие вопросы остаются 
открытыми [4]. 
Рассмотрим 
исследовательские 
задачи, 
которые 
были 
нами 
самостоятельно сформулированы и решены. 
Задача 1. Найти наибольшее значение отношения площадей квадратов, 
вписанных в прямоугольный треугольник с катетами ܽ и ܾ. 
Решение. Очевидно, что вписать квадрат в прямоугольный треугольник 
можно двумя способами (см. рис. 1). 
 
Рис. 1. Квадраты, вписанные в прямоугольный треугольник 
Найдем площади для этих квадратов. Используя подобие треугольников 
(или координатный метод) можно получить следующие результаты. Для первого 
квадрата (рис. 1) получим  ܵଵ= ቀ
௔௕
௔ା௕ቁ
ଶ
, для второго квадрата (рис. 1 ) получим 
 ܵଶ= ൬
௔௕√௔మା௕మ
௔మା௕మା௔௕൰
ଶ
, где ܽ, ܾ – катеты треугольника. 
Для 
нахождения 
наибольшего 
значения 
отношения 
ௌభ
ௌమ 
составим 
отношение: 
ݎ= ඨܵଵ
ܵଶ
=
ܽଶ+ ܾଶ+ ܾܽ
(ܽ+ ܾ)√ܽଶ+ ܾଶ,
ܽ, ܾ> 0. 
 
 
195 
Заметим, что при ܽ= ܾ получим ݎ=
௔మା௔మା௔మ
ଶ௔మ√ଶ
= 
ଷ
ଶ√ଶ. Преобразуем ݎ, разделив на 
ܾܽ числитель и знаменатель, 
ݎ=
ܽ
ܾ+ ܾ
ܽ+ 1
ܽ+ ܾ
√ܾܽ⋅√ܽଶ+ ܾଶ
√ܾܽ
= 
ܽ
ܾ+ ܾ
ܽ+ 1
ቆටܽ
ܾ+ ටܾ
ܽቇ⋅ටܽ
ܾ+ ܾ
ܽ
. 
Сделаем замену ට
௔
௕+ ට
௕
௔= ݐ (несложно проверить, что ݐ≥2), тогда 
ቆට
௔
௕+ ට
௕
௔ቇ
ଶ
=
௔
௕+
௕
௔+ 2 = ݐଶ. 
Получаем 
௔
௕+
௕
௔= ݐଶ−2. 
Тогда 
ݎ 
можно 
рассмотреть как функцию от ݐ: 
ݎ(ݐ) =
ݐଶ−1
ݐ⋅√ݐଶ−2
. 
Исследуем эту функцию при ݐ≥2. Получаем 
ݎ′(ݐ) = 
−2
ݐଶඥ(ݐଶ−2)ଷ. 
Следовательно, ݎ(ݐ) монотонно убывает при ݐ≥2 и max ݎ(ݐ) = ݎ(2) =
ଷ
ଶ√ଶ. 
Тогда наибольшее отношение 
ௌభ
ௌమ= ቀ
ଷ
ଶ√ଶቁ
ଶ
=
ଽ
଼. Таким образом, отношение 
площадей квадратов, вписанных в прямоугольный треугольник, удовлетворяет 
неравенству 
ܵଵ
ܵଶ
≤9
8. 
Этот результат является новым, он не встречался в изученной нами литературе 
или в Интернете. 
Задача 2. Как из остроугольного треугольника вырезать квадрат наибольшей 
площади? Сколько различных способов решения этой задачи существует [3]? 
 
 
196 
 
Рис. 2. Квадрат, вписанный в произвольный треугольник 
 
Решение. Зададим остроугольный треугольник с вершинами ܱ, ܣ и ܤ. Введем 
систему координат так, чтобы ܱ – начало координат, ось абсцисс – ܱܤ. Проведем 
высоту ܣܪ (см. рис. 2). Тогда сторона ܱܪ= √ܽଶ−ℎଶ. Далее получим 
ܱܦ: ݕ=
௛
√௔మି௛మା௛ ∙ݔ, ܣܤ: ݕ= −
௛
௕ି√௔మି௛మ∙(ݔ−ܾ) 
Приравняем правые части уравнений и найдем из этого выражения ݔ: 
ݔ= ܾ൫√ܽଶ−ℎଶ+ ℎ൯
ܾ+ ℎ
 ⟹ݕ∗= ܾ∙ℎ௕
ܾ+ ℎ௕
 
Получаем три разных площади квадрата, лежащих на сторонах ܽ, ܾ и ܿ 
ܵ௕= ൬ܾ∙ℎ௕
ܾ+ ℎ௕
൰
ଶ
, ܵ௔= ൬ܽ∙ℎ௔
ܽ+ ℎ௔
൰
ଶ
, ܵ௖= ൬ܿ∙ℎ௖
ܿ+ ℎ௖
൰
ଶ
 
Выразим из формул ܵ∆=
ଵ
ଶ∙ܽ∙ℎ௔=
ଵ
ଶ∙ܾ∙ℎ௕=
ଵ
ଶ∙ܿ∙ℎ௖ произведение и 
подставим в формулу площади: 
ܽ∙ℎ௔= 2ܵ∆⟹ ℎ௔= 2ܵ∆
ܽ⟹ܵ= ൬2ܵ∆
ܽ+ ℎ൰
ଶ
= ቌ
2ܵ∆
ܽ+ 2ܵ∆
ܽ
ቍ
ଶ
 
Определим, при каких значениях ݔ> 0 выражение ݔ+
ଶௌ
௫ будет наименьшим: 
ݔ+ 2ܵ
ݔ= √2 ∙ܵ ∙ቆݔ
√2ܵ
+ √2ܵ
ݔቇ≥2√2 ∙ܵ, 
так как для любых положительных чисел ݔ, ݕ верно неравенство 
௫
௬+
௬
௫≥2.  
 
 
197 
Причем, из равенства 
ݔ
√2ܵ
+ √2ܵ
ݔ
= 2  ⟹ݔ= √2ܵ. 
Найдем отношение площади такого квадрата к площади треугольника: 
ܵ≤ቆ
2ܵ∆
2ඥ2 ∙ܵ∆
ቇ
ଶ
= ܵ∆
2 ⇒ܵ
ܵ∆
≤1
2, 
причем равенство достигается, когда сторона треугольника равна высоте, 
опущенной на эту сторону. Таким образом, в остроугольном треугольнике 
вписанный квадрат наибольшей площади нужно строить на меньшей стороне и 
его площадь не больше половины площади данного треугольника. 
Задача 3. Какую часть площади треугольника занимает последовательность 
вписанных в него прямоугольников наибольшей площади (см. рис. 3)? 
 
Рис. 3. Последовательность прямоугольников, вписанных в треугольник 
Решение. Известно, что наибольшая площадь прямоугольника, вписанного в 
треугольник равна половине площади этого треугольника т.е. ܵଵ=
ଵ
ଶܵ஺஻஼ [5]. 
Рассмотрим последовательность ܵଵ, ܵଶ, … , ܵ௡, … прямоугольников наибольшей 
площади, вписанных «вертикально» в данный треугольник (см. рис. 3). Выразим 
площади вписанных прямоугольников через площадь данного треугольника ܵ∆. 
Очевидно, что коэффициент подобия соседних прямоугольников в этой 
последовательности равен 
ଵ
ଶ. Тогда 
ܵଵ= 1
2 ܵ∆,  ܵଶ= 1
2 ⋅൬1
4 ܵ∆൰,  ܵଷ= 1
2 ⋅൬1
16 ܵ∆൰, … ,  ܵ௡= 1
2 ⋅൬1
4௡ିଵܵ∆൰. 
 
 
198 
Следовательно, 
сумма 
площадей 
всех 
прямоугольников 
этой 
последовательности является суммой бесконечно убывающей геометрической 
прогрессии: 
ܵ= ෍ܵ௜
ஶ
௜ୀଵ
= ܵ∆
2 ⋅൬1 + 1
4 + 1
4ଶ+ ⋯+ 1
4௡+ ⋯൰= ܵ∆
2 ⋅4
3 = 2
3 ܵ∆. 
Рассмотрим теперь аналогичные «горизонтальные» последовательности 
прямоугольников наибольшей площади, вписанные по направлению к вершинам 
ܣ и ܥ треугольника. Заметим, что ∆ ܣܤଵܥଵ и ∆ ܣܤܥ подобны и коэффициент 
подобия ݇=
ଵ
ଶ . Заметим, что для ݅≥2 выполняется ܵ௜
ᇱ+ ܵ௜
ᇱᇱ= ܵ௜ (см. рис. 3). 
Тогда сумма площадей двух «горизонтальных» последовательностей будет 
равна: 
෍(ܵ௜
ᇱ+ ܵ௜
ᇱᇱ) =
ஶ
௜ୀଶ
෍ܵ௜
ஶ
௜ୀଶ
= ൬2
3 −1
2൰ܵ∆= 1
6 ܵ∆ 
Таким образом, площадь, которую займут все последовательности 
прямоугольников наибольшей площади, вписанных в треугольник, равна:  
2
3 ܵ∆+ 1
6 ܵ∆= 5
6 ܵ∆. 
Задача 4. Рассмотрим последовательность квадратов, вписанных в 
прямоугольный треугольник (см. рис. 4). Какую часть площади треугольника 
занимает последовательность этих квадратов? 
 
Рис. 4. Последовательность квадратов, вписанных в треугольник 
 
 
199 
Решение. Заметим, что сторона квадрата ܽଵ=
௔௕
௔ା௕ (см. рис. 4). Можно 
показать, что стороны вписанных квадратов можно задать рекуррентной 
формулой 
ܽ௡ାଶ=
௔೙శభ
మ
௔೙. Эта формула задает бесконечно убывающую геометрическую 
последовательность площадей квадратов ܵଵ, ܵଶ, … , ܵ௡, … при ܵଵ= ቀ
௔௕
௔ା௕ቁ
ଶ
 и 
ݍ=
௕
௔ା௕, очевидно, что |ݍ| < 1. Найдем сумму площадей квадратов этой 
последовательности 
ܵ=
௔మ௕మ
(௔ା௕)మ⋅
ଵ
ଵି
್మ
(ೌశ್)మ
=
௔మ௕మ
(௔ା௕)మ⋅
(௔ା௕)మ
(௔ା௕)మି௕మ=
௔మ௕మ
௔(௔ାଶ௕) =
௔௕మ
௔ାଶ௕. 
Выясним, 
какую 
часть 
занимает 
площадь 
квадратов 
этой 
последовательности по отношению к площади данного прямоугольного 
треугольника? Так как ܵ஺஻஼=
௔௕
ଶ, то отношение площади треугольника к 
площади последовательности квадратов: 
ௌಲಳ಴
ௌ
=
௔௕
ଶ⋅
௔ାଶ௕
௔௕మ= 1 +
௔
ଶ௕. 
Итак, мы установили, что последовательность квадратов вписанных в 
прямоугольный треугольник является бесконечно убывающей геометрической 
прогрессией и отношение занимаемой этой последовательностью площади 
внутри прямоугольного треугольника к площади самого прямоугольного 
треугольника равно 
௔
ଶ௕+ 1 и не превосходит 
ଷ
ଶ для ܽ≤ܾ [6]. 
Таким образом, опыт нашей работы по составлению и решению 
представленных исследовательских задач позволяет утверждать, что такая 
деятельность 
способствует 
формированию 
у 
студентов 
навыков 
исследовательской 
деятельности, 
необходимой 
для 
их 
будущей 
профессиональной деятельности. 
 
 СТАТЬЯ
Аннотация
. 
В 
статье 
рассматривается 
одна 
из 
основных 
тем 
стереометрии, в частности, построение сечений многогранников. Выделены 
основные знания, умения, навыки которыми должен овладеть учащийся для 
успешного 
усвоения 
темы. 
Рассматривается 
использование 
дифференцированного 
подхода 
в 
обучении 
учащихся, 
который 
продемонстрирован на примере данной темы. 
Ключевые слова: дифференцированный подход к обучению, геометрия, 
стереометрия, сечения, методы построения сечений, учащиеся. 
Задачи на построение сечений многогранников являются одними из самых 
трудных тем стереометрии. Исследованием вопросов построения сечений 
занимались такие ученые, как Далингер В.А. [1], Четверухин Н.Ф. [2] и др. Они 
отмечают, что стереометрические задачи на построение играют особо важную 
роль в формировании и развитии пространственных представлений. 
В школьном курсе геометрии рассматриваются различные методы 
построения сечений, такие как: следов, параллельного переноса, внутреннего 
проецирования, комбинированный.  
Для 
успешного 
усвоения 
темы 
«Сечения», 
согласно 
основной 
образовательной программы по предметной области «Математика», 
- 
ученик должен знать: основные определения курса планиметрии, 
взаимное расположение точек и прямых;  
- 
ученик должен уметь: изображать на рисунке точки, прямые и 
плоскости в заданном взаимном расположении, пересекающиеся, параллельные 
и скрещивающиеся прямые, пересечение прямой и плоскости, параллельность 
 
 
202 
прямой и плоскости, пересечение и параллельность плоскостей, треугольные и 
четырехугольные призмы и пирамиды, тел вращения и их элементы; задавать 
плоскость с помощью трех точек, точки и прямой, пересекающимися или 
параллельными прямыми и изображать их на рисунке, линейный угол 
двугранного угла и изображать его на рисунке;  
- 
ученик должен владеть: конструктивными навыками [3]. 
Несмотря на широкую известность в методических кругах данной темы, 
методистами отмечается о недостаточном уровне сформированности у учащихся 
умения построения сечений. В частности, статистические данные Тюменской 
области по результатам ЕГЭ показывают, что стереометрическая задача является 
мало решаемой, трудной задачей. Доля выпускников, получивших 2 балла, в 
2019 году составляла 0,25%, а в 2020 году 0,65%. Среди выпускников, набравших 
1 балл, показатель упал почти в два с половиной раза: 1,12% в 2020 году и 2,73% 
в 2019 году. 
Одной из возможных причин таких результатов является то, что в 
школьном курсе геометрии на решение задач по теме «Сечения» отводится 2% 
от количества всех уроков курса стереометрии. Кроме того, проведенный анализ 
школьных учебников по геометрии показал, что методы построения сечений не 
представлены в явном виде, то есть через описания алгоритмов, а предъявляются 
школьнику в виде решения какой-либо первоначальной задачи. Это влечет за 
собой проблемы в структурировании этапов построения сечений. Поэтому 
учителям необходимо в процессе изучения данной темы применять оптимальные 
педагогические технологии, одной из которых является дифференцированное 
обучение. 
Дифференцированный подход к обучению рассматривается в работах 
Селевко Г.К., Фирсова В.В.  и др. [4]. Основной идеей является не только 
дифференциация учащихся, но и дифференциация учебных заданий. Не 
существует единого алгоритма деления учащихся на группы. Например, 
дифференциация по успеваемости (Фирсов В.В.) [4], по уровню познавательной 
активности и самостоятельности (Закатова И.В.) [4], по успеваемости по 
 
 
203 
предмету, темпу работы на уроке, способности к изучению предмета 
(Гузик Н.П.) [4].  
Дифференциация учебных заданий подразумевает использование заданий 
разного уровня сложности, которая раскрывается либо в условии задачи, либо 
при выборе метода решения. Потенциал таких задач велик и применение 
способствует постепенному усвоению учебного материала.  
В силу того, что тема «Сечения» вызывает затруднения школьников и 
ограничено в учебном времени, то возникает проблема организации обучения 
методам построения сечений с использованием возможности использования 
дифференцированного подхода. 
Приведем пример вариативного занятия по теме «Сечения тетраэдра» с 
применение дифференцированного подхода к обучению. 
Учащимся предлагается решить задачи четырех уровней, отличающихся 
по сложности построения сечений. Представленные задачи комбинируются 
такими образом, что каждая предыдущая задача становится опорной для каждой 
последующей. На первых трех уровнях необходимо построить сечение тетраэдра 
плоскостью, проходящей через точки M, N, P, в зависимости от расположения 
этих точек. 
Уровень 1.  Предлагаются задачи (рис. 1), в которых сечение строится 
путем проведения прямых через точки, лежащие на ребрах. 
 
Рис. 1. Примеры задач первого уровня 
 
 
 
204 
Уровень 2. Задачи (рис. 2) усложняются тем, что некоторые точки лежат 
не на ребрах, а на гранях тетраэдра.  
 
Рис. 2. Примеры задач второго уровня 
 
Уровень 3. Задачи данного уровня (рис. 3) характеризуются произвольным 
расположением точек. 
 
Рис. 3. Примеры задач третьего уровня 
 
На четвертом уровне предлагаются задачи, которые решаются без 
определенного алгоритма. Например, определить, можно ли построить 
прямоугольный параллелепипед, в котором диагональное сечение равнялось бы 
боковой грани [5]. 
Таким образом, дифференцированный подход к обучению может являться 
инструментом в изучении данной темы, при этом учащиеся постепенно 
усваивают теоретический материал и способы построения сечений. В процессе 
обучения устраняются пробелы в учебном материале, воспитываются 
самостоятельность и усидчивость, развивается интерес к изучению математики.  
 
 
205 
 СТАТЬЯ
Аннотация
: Подготовка квалицированного и конкурентноспособного на 
рынке труда специалиста состоит из комплекса информационных и учебно-
воспитательных технологий. В статье рассматриваются современные и 
актуальные на сегодняшний день программные средства, применение их 
возможностей 
для 
повышения 
качества 
процесса 
профессионального 
образования. 
Ключевые слова: информационная технология; представление учебно-
методических 
материалов; 
познавательная 
и 
творческая 
активность 
обучающихся. 
 
Для 
повышения 
качества 
российского 
образования 
необходимо 
постоянное внесение изменений в образовательный процесс, в том числе 
внедрение новых и современных технологий, что позволит повысить качество 
образования и развить профессиональные компетенции студентов. 
XXI век является веком современных компьютерных технологий. Данные 
и информация стали одной из важнейших составляющих жизни человека и 
общества. Развитие компьютеризации, которое является глобальным процессом, 
приводит к созданию новой информационной среды, а также к принципиально 
новой профессиональной деятельности и информационной жизни. 
Актуальной проблемой на данный момент, как отмечает А.А. Кораблев, 
является 
интеграция 
и 
внедрение 
информационно-коммуникационных 
технологий в организацию образовательного процесса. Решение этой проблемы 
 
 
207 
позволит устранить глобальные проблемы современного образовательного 
процесса [1]. 
Информационные 
технологии 
(ИТ) 
в 
образовании, 
по 
словам 
А. Аксюхина, 
являются 
необходимой 
предпосылкой 
для 
перехода 
к 
информационному обществу. Как отмечает автор, современные технологии 
позволяют изменять структуру образовательного процесса, повышая качество 
образования, погружая студентов в информационно-образовательную среду и 
мотивируя студентов к обучению. На всех этапах образовательного процесса, 
включая школьное, университетское и послевузовское образование, происходит 
интеграция информационных технологий [2]. 
Информационные технологии, как становится понятно на основе 
вышеупомянутых точек зрения авторитетных исследователей, с каждым годом 
все прочнее входят в образовательный процесс, становясь его неотъемлемой 
частью. Как следствие этого, они способствуют реализации многих принципов 
развивающего обучения, а также повышают эффективность образовательного 
процесса за счет своих составляющих элементов. 
Рассмотрим современные информационно-коммуникационные техноло-
гии, используемые в представлении учебно-методических материалов, чтобы 
познакомиться с их некоторыми особенностями. 
В настоящее время электронные словари, справочники, учебники и 
пособия являются довольно распространенными учебными пособиями. Очень 
часто студенты при самостоятельной работе обращаются именно к электронным 
версиям различных словарей, справочников и энциклопедий из-за удобства их 
хранения и обращения к ним. Стоит отметить, что актуальность учебных 
пособий с каждым годом не уменьшается, а только увеличивается, так как 
преподаватели, несмотря на усилия, брошенные на разработку, создают и 
используют их в своей профессиональной деятельности, несмотря на время и 
усилия, затраченные на их составление. Преподаватели пытаются добавить 
уникальность 
каждому 
учебнику, 
включая 
в 
содержание 
необычные 
исторические факты, статистику, а также ключевые идеи и мысли.  
 
 
208 
Мультимедийные презентации, используемые преподавателями на своих 
занятиях, создаются с помощью программы Microsoft PowerPoint из-за своей 
распространенности 
и 
интуитивно 
понятного 
интерфейса. 
Применение 
презентаций стало для преподавателей обыденностью, так как данное средство 
отлично помогает наглядно продемонстрировать студентам образовательный 
контент, тем самым повысив качество усвоения материала. 
На рынке современных программных средств для создания электронных 
учебников по своим возможностям отличаются востребованностью следующие: 
SunRav, eBook Maestro, Dr.Explain, Adobe Captivate. Данные средства позволяют 
использовать всевозможные современные форматы аудио- и видео-файлов [3]. 
Студенты различных направлений изучают прикладные программные 
программы, в том числе для осуществления контроля знаний. Системы контроля, 
в том числе и системы тестирования, имеют ряд преимуществ перед обычными 
формами проведения контроля. И самым очевидным плюсом, является экономия 
времени преподавателя, которое он тратит на проверку ответов. Кроме того, 
системы контроля позволяют студентам объективно оценивать свой уровень 
знаний и набор навыков, основываясь на максимально прозрачных результатах 
контроля. Помимо проведения обычного тестирования, данные системы 
применимы во многих областях учебно-образовательного процесса, особенно 
сейчас, в эпоху быстроразвивающегося дистанционного образования, например, 
при проверке домашних и практических работ, проведении междисциплинарных 
экзаменов. 
Программы-тренажеры, называемые еще интерактивными тренажерами, 
являются средством изучения материала, включающие в себя также систему 
контроля знаний, направлены на получение новых знаний, приобретение новых 
и улучшение существующих навыков. Зачастую данные средства создаются 
самостоятельно преподавателями, несмотря на всю сложность и временные 
затраты, так как их использование помогает свести к минимуму время, 
затрачиваемое на объяснение и изучение нового материала, а также позволяет 
отработать новые навыки. 
 
 
209 
Учебные системы и программы, как и программы-тренажеры, являются 
средством передачи знаний и развития навыков. Существует множество 
обучающих систем, на российском рынке одними их популярных являются 
системы компаний «Кирилл и Мефодий», «1С: Репетитор», «Физикон» и др. Но 
далеко не каждая система содержит в полном объеме преподаваемый материал, 
необходимый для полного усвоения студентами, в связи с чем преподаватели с 
помощью специалистов редко, но разрабатывают принципиально новую 
учебную 
систему, 
ориентированную 
на 
конкретную 
образовательную 
дисциплину. 
Программные инструменты для досуга или игр предлагают учащимся 
различные виды развлекательных и образовательных игр, а также систем 
виртуальной и дополненной реальности. Все эти средства все чаще 
используются при профессиональной подготовки специалистов различного 
направления. 
Преподаватели все чаще используют в современном учебном процессе не 
только программные продукты, но и средства массовой информации 
(электронную почту, локальные и всемирные сети), а дистанционное 
образование растет и укрепляет свои позиции. 
Современная 
образовательная 
система 
предлагает 
преподавателю 
возможность выбирать из большого количества инновационных методик 
«собственную», иначе посмотреть на свой опыт работы. Сегодня для хорошо 
проведенного занятия приходится по-новому понять свою позицию, увидеть и 
осмыслить, для чего и зачем нужны эти изменения. Однако вовлечение 
студентов в образовательный процесс во многом зависит от самого 
преподавателя, а не от технологий. 
 
 СТАТЬЯ
Аннотация
. В статье рассматриваются возможности применения 
исследовательских методов и компетентностного подхода в процессе 
обучения техническим дисциплинам курсантов военного вуза.  
Ключевые 
слова: 
обучение 
техническим 
дисциплинам, 
компетентностный подход, исследовательский метод преподавания, курсанты 
военного вуза.  
 
Компетентностный подход в образовании был закреплен в программе 
модернизации образования Российской Федерации. Программа модернизации 
ставит вопрос качества образования, связывая его с формированием 
компетенций. Для того, чтобы учащийся смог многого достичь в жизни, у него 
необходимо сформировать определенные компетенции [1]. Это и считается 
результатом сегодняшнего образования, исходя из целей и задач, поставленных 
перед педагогами государством. Курсанты – выпускники должны обладать 
навыками принятия ответственных и стратегических решений, навыками 
постоянного саморазвития, умением нестандартно и творчески мыслить, 
конструктивного общения со сверстниками и не только. Особое внимание при 
этом уделяется понятию цифровая грамотность, под которой подразумевается 
умение использовать в своей профессиональной карьере всевозможные гаджеты 
и технологии, достигая высокой продуктивности в выбранной профессии.    
Среди всех педагогов, занимающихся компетентностым подходом следует 
выделить следующих отечественных педагогов: Н.В. Кузьмину, И.А. Зимнюю, 
О.М. 
Бобиенко, 
А.К. 
Маркову, 
А.В. 
Хуторского. 
Обобщая 
понятия 
 
 
212 
компетентность, компетенция и компетентностный подход отметим, что под 
компетенциями понимают совокупность знаний, умений и качеств личности, 
необходимых курсанту – выпускнику для его успешной профессиональной 
карьеры и социально – психологической адаптации к постоянно изменяющимся 
условиям реальности реальности [2].  
Когда выпускники выходят в «большой мир» компетенции проявляются во 
всем: взаимодействие с другими людьми, выстраивание отношений с миром, 
построение карьеры. Компетентный специалист – это специалист, владеющий 
профессиональными компетенциями с легкостью и высшим мастерством [3].  
В военном училище подготовка курсанта, как компетентного специалиста, 
проявляется в следующем:  
1) отбор изучаемого материала строго соответствует поставленным целям 
и задачам, и соответствует профессиональным компетенциям выпускника; 
2) все 
технические 
дисциплины 
непосредственно 
связаны 
с 
профессиональной 
направленностью. 
Достаточно 
подробно 
изучаются 
технологические процессы, средства автоматизации и принципы действия 
машин и механизмов; 
3) курсанты приобретают навыки стратегического мышления, учатся 
принимать профессионально важные решения в условиях неопределенности и 
ограниченности по времени; 
4) на протяжении всего времени обучения поддерживается авторитет 
российского военного профессионала, способного к постоянному саморазвитию 
и самосовершенствованию; 
5) курсанты свободна переносят теоретические знания на решения 
практических задач, сформированных в виде кейсов и практических ситуаций. 
Такого рода технические кейсы вызывают у курсантов позитивные эмоции и не 
отпугивают от трудностей и сложностей; 
6) многие технические задачи решаются в группах, командно. Хороший 
специалист военного дела – это прежде всего специалист, способный создавать 
и поддерживать эффективные коммуникации.    
 
 
213 
В обучении техническим дисциплинам курсантов военного училища 
целесообразно применять как основные методы и методики преподавания, так и 
современные 
[4]. 
Например, 
при 
изучении 
курсантами 
«Технологии 
машиностроения» был использован исследовательский метод, в сочетании  
с кейс-методиками. Курсантам предлагались прописанные кейсы-ситуации  
с элементами теоретической исследовательской деятельности. В ходе решения 
задач, курсантам необходимо найти ответы на теоретические вопросы, 
проработать командой алгоритм действия в определенной ситуации и найти 
решение задачи.  
Среди теоретических вопросов можно выделить вопросы следующих 
типов:  
1. Из предложенного перечня факторов выберите лишний. 
2. Какие из предложенных методов пластического деформирования можно 
использовать для обработки наружных поверхностей?  
3. По предложенному описанию определите метод обработки.  
и т.п. 
Исследовательский метод целесообразно применять при обучении 
техническим дисциплинам там, где есть лабораторные работы. Это обусловлено 
следующими факторами: наличие базовых понятий и знаний у курсанта, 
позволяют ему выстроить и применить логическую цепочку за сравнительно 
небольшое время в поисковой деятельности, при этом остается место и для 
творческого подхода; умение коммуницировать позволяет более качественно 
провести мозговой штурм и принять решение. Также хорошие результаты дает 
применение исследовательского метода на занятиях с выдвижением гипотез и 
предложений, 
с 
элементами 
самостоятельного 
экспериментального 
исследования. На таких занятиях процесс обучения базируется вокруг курсанта, 
который должен самостоятельно пройти все этапы исследования от выдвижения 
гипотезы и разработке плана ее проверки, отработки всех этапов эксперимента и 
его проведения до анализа результатов.  Преподаватель на таких занятиях 
выступает в роли тьютора, наставника, сопровождающего и не более того. 
 
 
214 
Курсант активно участвуют в процессе познания. При этом наблюдается 
поднятие самооценки, повышения интереса. А это в свою очередь приводит к 
формированию личностных и профессиональных компетентностей. Итоговое 
контрольная работа проводилась также с элементами исследовательской 
деятельности. Обработка итоговых результатов курсантов первого и второго 
курса показала качественное улучшение знаний курсантов. Отдельно следует 
отметить повышение мотивации курсантов к обучению и формирование 
ответственного отношения к военному делу и военной позиции курсанта.  
 
 СТАТЬЯ
Аннотация
. В статье рассмотрена проблема развития пространственного 
мышления 
обучающихся, 
выделены 
основные 
средства 
обучения, 
способствующие ее решению. 
Ключевые слова: геометрия, стереометрия, пространственное мышление, 
многогранники, наглядный материал, моделирование. 
 
Одним из основных критериев успешного решения геометрических задач 
является достаточный уровень освоения учащимися теоретической базы знаний, 
а также умение учащихся самостоятельно применять знания в стандартной или 
нестандартной ситуации на уроках геометрии при выполнении заданий 
различного типа, что является одной из главных целей обучения математике. 
Исходя из этого, можно считать, что перед учащимися на уроках геометрии 
ставится ряд целей и задач, основными из которых являются – изучение 
геометрических понятий и умение применять их при выполнении практических 
заданий. 
При изучении стереометрии учащиеся сталкиваются с рядом трудностей, 
которые препятствуют полноценному освоению учебного материала. Чаще всего 
школьники сталкиваются с проблемой построения чертежей и оперирования 
пространственными понятиями, что в большинстве случаев указывает на низкий 
уровень их пространственных представлений. Так, обратившись к результатам 
ЕГЭ (Единый государственный экзамен) по математике профильного уровня за 
2019-2020 год обучения (табл. 1), можно увидеть, что из всего числа 
выпускников школ Тюменской области (4293 чел.), лишь немногие приступают 
к решению задания 14 второй части ЕГЭ, и только часть из них выполняет это 
 
 
216 
задание без ошибок [1]. Также можно отметить, что и процент выполнения 
учащимися задания 16 второй части ЕГЭ достаточно мал. 
Таблица 1. Сводная таблица результатов ЕГЭ  
по математике профильного уровня 
 № 
задания 
в КИМ 
Проверяемые элементы 
содержания/умения 
Процент выполнения задания в субъекте  
Российской Федерации 
средний 
в группе не 
преодолевших 
минимальный балл 
в группе от 
минимального до 60 
т.б. 
в группе от 61 до 80 
т.б. 
в группе от 81 до 
100 т.б. 
14 
Уметь выполнять 
действия с геометри-
ческими фигурами, 
координатами и 
векторами  
- 2 балла 
- 1 балл 
0,65 
1,12 
0 
0 
0 
0 
0,18 
0,31 
7,65 
13,15 
16 
Уметь выполнять 
действия с геометри-
ческими фигурами, 
координатами и 
векторами  
- 3 балла 
- 2 балла 
- 1 балл 
1,15 
0,28 
7,25 
0 
0 
0,30 
0 
0 
1,01 
0,12 
0,18 
10,23 
14,37 
2,75 
37,31 
 
 
 
Пространственное 
мышление 
учащихся 
формируется 
посредством 
изучения различных областей науки, но главная роль в процессе развития этого 
вида мышления отводится математике, а именно стереометрии. Поэтому 
развитие у учащихся пространственного мышления является важнейшей задачей 
обучения математике.  
Проблема развития пространственного мышления обучающихся не 
перестает быть актуальной уже очень много лет. Данным вопросом занимались 
многие педагоги и психологи, среди которых можно выделить И.С. Якиманскую 
[2], И.Я. Каплуновича [3] и Ю.Г. Тамберга [4]. Понятие пространственного 
мышления в работах вышеуказанных авторов формулируется по-разному, но 
 
 
217 
обобщив содержание каждого из них, можно сделать вывод о том, что 
пространственное мышление – это способность создавать пространственные 
образы трехмерных объектов и производить над ними определенные действия. 
Умение работать с пространственными объектами позволяет более активно 
познавать действительность, так как пространственное мышление является 
основным элементом умственной деятельности. 
Таким образом, недостаточный уровень развития пространственного 
мышления, как и любого другого вида мышления, приводит к трудностям в 
учебной деятельности. А это в свою очередь влечет нарушение общего развития 
личности обучающихся. 
Важную роль в развитии пространственного мышления учащихся играет 
наглядный материал, который является основой создания пространственного 
образа. Однако в настоящее время принцип наглядности на уроках геометрии в 
большинстве случаев достигается посредством использования двумерных 
чертежей на плоскости тетради или школьной доски. Но использование только 
двумерных чертежей препятствует полноценному восприятию школьниками 
трехмерных объектов. Анализ школьных учебников геометрии 10-11 классов 
Л.С. Атанасяна [5], А.В. Погорелова [6], И.Ф. Шарыгина [7], с точки зрения 
изучения многогранников, дает понять, что наглядные изображения в учебниках 
не дают возможности сформировать у школьников полноценного представления 
и понятия о пространстве.  
Поэтому для решения имеющейся проблемы на уроках стереометрии 
целесообразно привлекать учащихся к выполнению различного рода заданий для 
развития пространственного мышления. Так, в рамках темы «Многогранники», 
изучающейся в курсе стереометрии 10-11 классов, можно рассматривать такие 
задания, как: 
 задания на распознавание заданных многогранников среди других; 
 изготовление моделей и разверток многогранников; 
 решение задач на определение признаков многогранников, изменение 
положения их образа, структуры или ориентации в пространстве; 
 решение геометрических задач на построение. 
 
 
218 
Среди указанных пунктов стоит отметить второй, основной задачей 
которого является создание моделей реальных объектов окружающего мира. 
Процесс создания модели многогранника является формой обобщения 
теоретических и практических знаний о фигуре, он позволяет сделать 
соответствие между воображаемым объектом и его искомым изображением, что 
способствует развитию пространственных представлений учащихся. 
При 
выполнении 
большинства 
из 
приведенных 
заданий 
можно 
использовать макеты геометрических фигур, а также применять на уроках 
динамические среды моделирования. С помощью программ моделирования 
геометрических объектов можно взглянуть на многогранники с различных углов 
обзора и непосредственно в движении, что в свою очередь дает ученикам 
возможность правильно читать чертежи, выделять существенные свойства 
объектов и преобразовывать их.   
К наиболее доступным и широко известным средам моделирования можно 
отнести такие приложения, как GeoGebra, Живая математика и Математический 
конструктор. Каждое из этих приложений имеет свои особенности интерфейса и 
наличия инструментов для создания геометрических моделей пространственных 
фигур. Однако наиболее удобным и доступным, по мнению авторов, является 
динамическая среда моделирования GeoGebra. 
Вышеуказанные программы могут использоваться в качестве основного 
элемента любого урока. То есть их применение на уроке изучения нового 
материала позволит более полно сформировать у учащихся представление об 
изучаемом понятии, определять положение искомого тела в пространстве. А на 
уроке применения новых знаний с их помощью можно решать задачи 
повышенного уровня сложности, которые требуют дополнительных построений 
и работы с сечениями.  
Таким образом, использование различных средств обучения школьников 
стереометрическому материалу в целостной системе позволит выполнить одну 
из основных задач обучения геометрии – развитие пространственного мышления 
обучающихся.  
 
 
219 
 СТАТЬЯ
Аннотация
. 
В 
статье 
продемонстрирован 
фрагмент 
модели 
сопровождения математического образования в сельской школе, направленный 
на устранение недостатка знаний по математике у учеников. 
Ключевые слова: математика в сельской школе, сельская школа, 
математическое образование, сопровождение образовательной деятельности. 
 
Основным предметом в школе несомненно является математика. Без 
математики не возможно изучение таких предметов как физика, химия, 
информатика и др. А это значит, что на учителей математики возлагается 
большая ответственность, ведь каждый ученик в классе, независимо от его 
способностей, должен освоить базовые математические понятия. Учителю 
необходимо использовать в своей профессиональной деятельности новые 
приемы, средства и методики. Организовать процесс обучения математики в 
школе достаточно сложно, особенно если эта школа находится в сельской 
местности. У сельской школы свои традиции, свои особенности и свои ученики. 
У многих сельских школ в наше время не достаточное обеспечение научно-
технической литературой, более слабые материально-технические условия, 
могут существовать кадровые и финансовые трудности. Сельские школы 
расположены дальше от методических и культурных центров. Учителя сельской 
школы благодаря развитию информатизации могут также как и городские 
учителя знакомиться с новинками методической литературы, с новыми 
образовательными технологиями и новыми образовательными цифровыми 
платформами.  
 
 
221 
В рамках работы над магистерской диссертацией было проведено 
исследование, в котором были определены основные отличия сельских школ 
Тюменской области от городских: 
1) территориальная оторванность от научных и культурных центров 
Тюменского региона; 
2) существенно более низкий культурный и образовательный уровень 
деревенского населения (в том числе и низкий уровень цифровой культуры) [1]; 
3) отсутствие специализированных классов в школе (например, с 
углубленным изучением математики или физики); 
4) не достаточно высокий уровень квалификации педагогов и падение 
престижа педагогической профессии [2]; 
5) более низкий средний доход на семью, а это значит, что на образование 
деревенского школьника родителями тратится меньше денег, чем на городского 
школьника;  
6) низкая востребованность знаний (родители считают, что знания не 
нужны для того, чтобы жить и работать в деревне) [3].  
Но самое большое отличие сельской школы от городской – это конечно же 
ученики. Ко всем ученикам требуется индивидуальный и дифференцируемый 
подходы, которые необходимо использовать практически на каждом уроке. 
Учитель сельской школы ищет новые пути и новые подходы.    
Проанализировав средний балл ЕГЭ по математике и информатике в 
городских и сельских школах Тюменской области, можно сделать вывод о том, 
что в городских школах средний балл выше, чем в школах сельской местности 
(на 4,2 балла по информатике). Обратив на процентное соотношение городских 
и сельских школ (процентное отношение количества учеников балловой системы 
к количеству всех учеников соответственно городской и сельской местности), 
можно увидеть, что городские школы более успешные при сдаче ЕГЭ, чем 
сельские [6]. Это говорит о том, что существуют принципиальные отличия 
школы в городской местности и сельской. 
 
 
222 
На сегодняшний день математика – это основной предмет, который 
находится в обязательном перечне сдачи экзамена по итогам 9 и 11 класса. 
Поэтому, необходимо построить единую модель преподавания математики 
именно в сельской школе, т.к. сельская школа, как и было сказано выше, 
значительно отличается от городской. В перспективе данную модель можно 
будет использовать в любой сельской школе для контроля усвоения материала 
учениками. 
Чтобы молодым педагогам было проще адаптироваться к новой среде 
(школе) была разработала модель преподавания математики на примере МАОУ 
Богандинской СОШ №1. Фрагмент данной модели представлен ниже (рис. 1). 
 
 
Рис. 1. Фрагмент модели «Работа с отстающими по математике детьми» 
 
 
223 
В большинстве случаев эта схема направлена на привлечение родителей к 
учебному процессу учащегося. Для учителя-математика эта схема настроена не 
только на общение с учеником, а также для контроля учащегося (часто 
оказывается необходимо привлечь родителя). Т.к. контингент в селе различный, 
то родители могут отреагировать быстро, и ученики больше не будут пропускать 
дополнительные занятия, но ситуация может быть и совсем иной, когда ребенок 
остается на долгое время без присмотра родителя, и даже после разговора 
классного руководителя с родителем, родитель не влияет на учащегося, то тогда 
приходится привлекать администрацию для совместной отработки данной 
проблемы. 
На 
основе 
данной 
модели 
можно 
построить 
индивидуальный 
образовательный маршрут (ИОМ) для каждого ученика сельской школы.  
Таблица 1. Индивидуальный образовательный маршрут 
№ 
Тема 
Дата 
отработки 
темы (план) 
Дата 
отработки 
темы (факт) 
Оценка 
Подпись 
учителя 
1 
Тема 1 
 
 
 
 
2 
Тема 2 
 
 
 
 
… 
… 
 
 
 
 
 
ИОМ рекомендуется применять не только для организации занятий после 
написания контрольных работ в течение года и прохождения промежуточной 
аттестации в конце учебного года. 
В течение всего учебного года приводятся уроки в соответствии с темами 
учебной программы. В сельских школах очень удачно на уроках выбирать 
задачи, связанные с сельской местностью, например, направленные, на 
определение 
среднего 
урожая, 
скорости 
засевания 
полей, 
подсчета 
стройматериала и др. А также применять различные современные приемы и 
технологии на уроках. 
В Богандинской школе №1 обязателен предметный кружок по математике. 
Он направлен на выявление учеников с повышенным уровнем знаний, на работу 
с одаренными детьми, развитие критического мышления учеников и др.  
 
 
224 
Индивидуальное занятие подразумевает под собой время, направленное на 
устранение пробелов в знаниях учеников. Время для отработки с учениками по 
ИОМ. Обычно это установленное расписанием время после уроков, но если по 
некоторым причинам у учащегося не получается посетит такое мероприятие, то 
он может не понятые темы отработать на перемене до или после урока.  
Все результаты учеников фиксируются в специальном журнале, 
находящемся только у учителя. Такой журнал не является обязательным в школе, 
т.к. учитель фиксирует все уроки и оценки в Системе «Электронная школа 
Тюменской области». Но использование дополнительного (собственного) 
учительского журнала дает учителю фиксировать больше, чем описано в 
электронной системе. Во-первых, это возможность иметь быстрый доступ к 
оценкам учеников по предмету без доступа к компьютеру и интернету. Во-
вторых, помимо этого в этом журнале можно фиксировать не выполненные д/з 
(их я отмечаю обведением советующей клеточки), посещение индивидуальных 
занятий (отмечаю условным знаком – звездочка). В-третьих, отработанная тема 
на индивидуальном занятии тут же фиксируется в этом журнале.  
С помощью такого журнала легко выполнить анализ «западающих» тем и 
отработать их повторно в классе или на индивидуальных занятиях. Также, очень 
быстро составить отчет для администрации по определенному ученику. 
Для того, чтобы ученики усваивали тему необходим серьезный контроль 
учителем, родителем и администрацией школы. Также необходимо понимать, 
что учитель в сельской школе является основным источником знаний. 
 
 СТАТЬЯ
Аннотация
. В статье рассматриваются различные мнемотехнические 
приемы запоминания, указывается причина их применения, а также показана 
возможность использования этих приемов на уроках математики в школе.  
Ключевые слова: клиповое мышление, мнемотехника, ассоциация, 
УМК, память, обучение математике, школьная математика.  
 
Сегодня в XXI веке из-за интенсивного развития информационных 
технологий ребенок с ранних лет начинает пользоваться гаджетами, 
смартфонами, компьютерами и благодаря этому с легкостью и быстротой 
находит 
необходимую 
информацию 
в 
интернете. 
Несомненно, 
информационно коммуникационные технологии в образовании играют 
важную роль, однако из-за их чрезмерного использования обучающиеся 
перестают запоминать материал, который они получают в школе, так как 
считают, что все необходимое можно найти в интернете. Из-за у детей 
возникают серьезные трудности при изучении какого-либо предмета, прежде 
всего математики: они не могут запомнить правила, свойства, абстрактные 
формулы, последовательность из нескольких действий, теряют умение 
работать с большим по объему текстом.  
По мнению специалистов, у детей формируется так называемое 
клиповое 
мышление 
– 
особенность 
познавательной 
деятельности 
воспринимать поступающую информацию через краткие интересные образы 
[1]. Леонид Ястребов, экс-директор Московского института интернет-
образования, полагает, что уже 80% учеников российских школ являются 
 
 
227 
клиповомыслящими. И это проблема не только касается России. Клиповое 
мышление – общая проблема, которую начали поднимать в разных странах 
еще в начале 90-х годов XX века.  
Как в школах на уроках математики справляются с этой проблемой? 
Один из вариантов решения такой проблемы – это использование 
ассоциативных методик и приемов, применение мнемотехники.  Используют 
ли 
учителя 
мнемотехнические 
приемы? 
Проанализировав 
учебно-
методические комплекты по математики для 5 и 6 классах, таких авторов как 
Н.Я. Виленкин, В.И. Жохов, И.И. Зубарева, А.Г. Мордкович, Г.В. Дорофеев, 
И.Ф. Шарыгин, С.Б. Суворова, Е.А. Бунимович и других, можно сделать 
вывод, что в учебниках и методических пособиях способы запоминания 
информации встречается крайне редко и из этого следует, что учителя 
самостоятельно используют их на уроках математики. 
В ходе работы над данной темой был проведен опрос среди учителей 
Тюмени и Тюменского района на предмет использования мнемотехнических 
приемов в процессе обучения математике в образовательных учреждениях.  
Обработка опроса показала, что большинство педагогов так или иначе 
используют такие приемы, но в основном только на уроках математики в 5 и 6 
классах (рис. 1). Это обусловлено тем, что именно в этом возрасте у детей идет 
формирования абстрактно-логического мышления.  
 
 
 
Рис.1. Диаграммы, построенные по результатам опроса 
14%
43%
29%
14%
Используете ли вы приемы 
запоминания на уроках?
Всегда
Часто
Редко
Не использую
51%
35%
14%
В каких классах чаще 
применяются 
мнемотехнические приемы?
5-6 кл
7-8 кл
9-11 кл
 
 
228 
Какие же мнемотехнические приемы можно использовать на уроках 
математики и как их применять? Первый способ – это метод рифмизации, то 
есть создание небольших стихотворений, несущих материал, который 
необходимо запомнить. В изучении математики часто используется этот 
прием для того, чтобы понять суть тех или иных понятий. Пример 
стихотворения для 8 класса [4]: 
 «Длина окружности» 
У окружности длина  
Во все стороны равны. 
Знает каждый пионер 
«Це равно два пи на эр» (C=2пR) 
Следующий мнемотехнический прием – это метод абревиатур. В этом 
методе происходит сокращение слов и правил по первым буквам. В мате-
матике этот прием также можно использовать как для запоминания различных 
правил. Например, чтобы запомнить определения синуса и косинуса можно 
использовать фразу «ПРОСИ ПРИКОЛ» (Отношение ПРОтиволежащего 
катета к гипотенузе – СИнус, ПРИлежащего – Косинус) [4]. 
Еще один популярный мнемотехнический приемом – это метод 
ассоциаций. Суть метод заключается в сочинении ярких, интересных историй 
и нахождение ярких необычных ассоциаций (картинки, фразы), которые 
соединяются с запоминаемой информацией (рис. 2). Как этот прием можно 
использовать в математике? Надо пофантазировать и придумать различные 
истории. 
 
 
Рис. 2. Колесо – как ассоциация окружности [1; 146]  
 
 
229 
Следующий известный прием – это метод Цицерона. Нужно представить 
себе помещение, связанное с информацией для запоминания, например 
квартира, комната со знакомой обстановкой. Далее необходимо подумать, как 
мысленно будем обходить это пространство. И связать информацию, которую 
нужно запомнить, с расположением предметов в этом пространстве. 
В математике так можно запомнить построение точки на координатной оси: 
первоначально заходим в подъезд (движемся горизонтально), а затем 
поднимаемся по лестнице (движемся вертикально). Так и на координатной 
плоскости: выбираем значение на горизонтальной оси, а потом на 
вертикальной.   
Также на уроках математики можно использовать метод запоминания 
чисел, который основывается на поиске некоторых закономерностей чисел. 
Этим способом, например, можно запомнить математическую постоянную 
число е: число 2,7 легко запоминается, а дальше идет два раза подряд год 
рождение Льва Толстого (1828) и значение углов равнобедренного 
прямоугольного треугольника (45, 90, 45). В результате получаем число 
2,718281828459045… и так далее.  
Еще один интересный способ – это метод пиктограмм или 
использование мнемотаблиц. В этом приеме используются графические 
образы, которые нужно придумать самому с целью запоминания и 
воспроизведения каких-то слов. На уроках математики школьнику можно 
предлагать пустые таблицы, в каждой клетке которой он должен нарисовать 
определенный образ, соответствующий запоминаемому правилу. Так, 
например, 
можно 
предложить 
мнемотаблицу 
по 
теме 
«Умножение 
положительных и отрицательных чисел» (см. рис. 3) [2]. 
 
 
230 
 
 
Рис. 3. Пример мнемотаблицы  
 
Еще одним интересным приемом запоминания, который можно 
использовать на уроках математики – это метод Айвазовского. Этот способ 
отлично подойдет ученикам с хорошей зрительной памятью. Необходимо 
посмотреть на предмет в течение 5 секунд и постараться как можно лучше его 
запомнить. Далее нужно закрыть глаза и воспроизвести в памяти подробно 
этот объект, задавая опорные вопросы по нему. Этот метод можно предложить 
обучающимся для запоминания формул площадей и объемов. Также для 
наглядности можно предлагать карточки, на одной стороне которой написана 
формула, а на другой название формулы. 
Мнемотехника – это отличный способ, который требует мало времени, 
запоминания сведений, понимания и воспроизведения с адекватным 
разъяснением необходимой информации. У детей до 14 лет формируется 
абстрактно-логическое мышление. Это значит, что они в основном 
запоминают то, что пережили на своем опыте. Мнемоника помогает связать 
школьные понятия с явлениями из жизни, что позволяет упростить процесс 
запоминания.  
Мнемотехника позволяет не только запомнить быстрее информацию, но 
и развивает внимательность, речь, фантазию, творческие способности. 
 
 
 
231 
 СТАТЬЯ
Аннотация
. Статья рассказывает об особенностях использования LaTeX 
для разработки учебных курсов по математическим дисциплинам на 
образовательных онлайн-платформах. Рассмотрены примеры платформ для 
электронного 
обучения, 
содержащих 
инструменты, 
необходимые 
преподавателю для составления заданий и написания текстов с математическими 
формулами. 
Ключевые 
слова: 
образовательная 
онлайн-платформа, 
LaTeX, 
математические дисциплины, оформление математических материалов. 
 
В 
последнее 
время 
образовательные 
онлайн-платформы 
стали 
использоваться для обучения очень часто. Очевидно, что они обладают многими 
преимуществами, о которых достаточно много написано в научно-методической 
литературе, являются удобными и эффективными [1, 2, 3]. Использование 
онлайн-платформ делает взаимодействие преподавателя и учеников более 
гибким, упрощает проверку результатов и осуществление индивидуальной 
работы. Другим главным преимуществом является возможность получения 
образования детьми с ограниченными возможностями и детьми, которым трудно 
добираться до образовательного учреждения. 
Разработка курсов по математическим дисциплинам на основе таких 
платформ имеет свои особенности, связанные с использованием графики, 
специального математического языка и формул. Из-за этого могут возникнуть 
некоторые сложности при составлении заданий и текстов учебных материалов. 
 
 
233 
Поэтому нужно учитывать, что не все приложения предполагают наличие 
инструментов и функций, позволяющих работать с графиками, формулами и 
другими объектами, которые используются при проектировании курсов по 
математическим дисциплинам [4]. 
Одним из вариантов решения этой проблемы у разработчиков онлайн-
платформ стало использование универсального математического инструмента 
для работы с формулами, встроенного в образовательную онлайн-платформу. 
Таким универсальным инструментом является LaTeX. Это издательская система, 
в функционал которой входит создание математических научных или учебных 
текстов с большим количеством формул. TeX признан мировым стандартом 
подготовки научных публикаций, использующих формулы, схемы, графики, 
рисунки и диаграммы. Таким образом, изучение LaTeX – это важная 
составляющая подготовки будущего учителя математики. Поэтому необходимо 
иметь навыки работы с LaTeX, чтобы разрабатывать учебные онлайн-курсы по 
математическим дисциплинам на любых платформах, реализующих данную 
технологию. 
Рассмотрим несколько популярных платформ, содержащих встроенный 
редактор формул, предполагающий использование команд TeX’а. Для проверки 
функций будем использовать школьные задачи по математике из учебников 9 и 
11 класса [5, 6]. 
Stepik – условно бесплатная онлайн-платформа, предлагающая своим 
пользователям конструктор онлайн-курсов и онлайн-уроков. Благодаря 
широкому выбору инструментов позволяет создавать задания различных типов. 
Отличительной особенностью данной платформы является наличие редактора 
формул на языке TeX. При этом он имеет широкий функционал, и очень близок 
к оригинальному LaTeX. 
Приведем пример интерфейса Stepik для работы с командами TeX’а и 
фрагменты заданий, разработанных с использованием команд TeX’а (см. рис. 1 
и рис. 2). 
 
 
234 
 
Рис. 1. Окно ввода команд TeX в Stepik и предпросмотр результата  
 
 
Рис. 2. Фрагмент оформления задания и его решения в Stepik  
с использованием встроенного редактора TeX 
 
Core – онлайн-платформа, предлагающая конструктор онлайн-уроков. 
В качестве заданий могут быть составлены тесты, опросы, текстовые задания. 
Так же, как и у прошлой платформы имеется встроенный редактор TeX, 
обладающий большим выбором функций и представленный в виде небольшого 
 
 
235 
окна со строкой для кода и предпросмотром результата. Ввод команд 
осуществляется построчно, то есть в каждой строке располагается только одна 
формула. Если длина формулы оказывается больше чем ширина страницы, то 
запись выходит за границы листа, что является неудобным для отображения на 
экране, как проектировщику, так и пользователю курса. 
Приведем пример интерфейса в Core для работы с командами и фрагменты 
заданий, разработанных с использованием команд TeX’а (рис. 3 и рис. 4). 
 
Рис. 3. Окно ввода команд TeX в Core и предпросмотр результата  
 
Рис. 4. Фрагмент оформления задания и его решения в Core  
с использованием встроенного редактора TeX 
 
 
236 
ЯКласс – образовательный интернет-ресурс. Главной особенностью 
данной платформы в отличие от двух предыдущих является возможность 
создания контрольных работ с авторскими заданиями и управление временем 
выполнения заданий. При разработке заданий по математике также, как и на 
других платформах используется редактор TeX. На наш взгляд, встроенный 
редактор TeX представлен наиболее удобно для ввода и редактирования и полно 
по функциям и пакетам. Кроме того, в ЯКласс наиболее удобно представлены 
справочные материалы по использованию команд TeX. 
Приведем пример интерфейса в ЯКласс для работы с командами TeX’а и 
фрагменты заданий, разработанных с использованием этих команд (см. рис. 5 и 
рис. 6). 
 
 
Рис. 5 Окно ввода команд TeX в ЯКласс  
 
 
 
237 
 
Рис. 6. Фрагмент оформления задания и его решения в ЯКласс  
с использованием встроенного редактора TeX 
 
Таким образом, сравнивая образовательные онлайн-платформы, мы видим, 
что разработчики используют встроенный редактор TeX для поддержки и 
разработки образовательных курсов по математическим дисциплинам, однако, 
на разных платформах интерфейс значительно различается как по удобству, так 
и по полноте используемых команд TeX’а. Поэтому на наш взгляд является 
важным изучение системы TeX при подготовке будущего учителя математики.  
Овладение навыками работы в LaTeX дает учителю возможность использовать 
больше инструментов для разработки онлайн-курсов на образовательных 
платформах. 
 
 СТАТЬЯ
Аннотация
. В статье рассматривается математическая индукция и 
индуктивное умозаключение как эффективный способ решения олимпиадных 
задач пятого класса.  
Ключевые слова: олимпиадная математика, математическая индукция, 
анализ, рассуждение. 
Реализация эвристического подхода в процессе обучения математике 
предполагает использование эвристических методов и приемов обучения, а 
также различных типов нестандартных задач. Реализация эвристического 
подхода в математическом образовании способствует формированию у 
пятиклассников навыков выбора оптимальных методов и средств, с помощью 
продуктивного и рационального решения олимпиадных математических задач; 
способствует развитию рефлексивного опыта, обобщенных знаний и способов 
мыслительной деятельности и решения задач с помощью эвристических 
методов. Основным видом эвристической деятельности пятиклассников в 
обучении математике выступает решение нестандартных задач. Развитию 
эвристического мышления способствует обучение школьников разным видам 
эвристик на различных этапах решения нестандартной задачи. 
Для успешного решения олимпиадных задач по математике пятикласснику 
необходимы следующие знания и умения: личностные знания и умения (интерес 
к математике, обучаемость, трудолюбие, работоспособность умение управлять 
своим эмоциональным состоянием, умение распределять время в процессе 
решения задач и др.); познавательные умения и навыки (он может проводить: 
анализ, синтез, классификацию, сравнение, абстрагирование, аналогию); навыки 
 
 
240 
и умения использования общематематических методов (рассуждения от 
противного, методов математической индукции и др.) в процессе решения задач; 
навыков решения нестандартных задач; умения анализировать условие задачи. 
Одним из эффективных инструментов для решения математических задач 
является метод индукции: логическая и математическая. Метод эффективен в 
решении олимпиадных задач. Далее мы рассмотрим разные точки зрения на 
индукцию и убедимся на примерах в эффективности этого метода. 
Метод математической индукции – это нередко встречающийся способ 
доказательства и решений задач в олимпиадной математике средней школы.  
В работах А.А. Малчиевой, С.А. Николаевой, И.Л. Тимофеевой, А.А. Темер-
бековой и др. отмечается, что в школьном курсе математики метод 
математической индукции изучает поверхностно, т.к. в школьной программе на 
него отводится мало времени.  
Рассматривая 
роль 
метода 
математической 
индукции 
в 
науке,  
С.А. Николаева отмечает, большое значение индуктивных выводов в 
экспериментальных науках. По ее мнению, они лежат в основе дальнейших 
дедуктивных умозаключений; «наблюдение и индукция оказываются полезными 
и в дальнейшем для уточнения сделанных предположений» [2; 4]. 
Анализ литературы показал, что метод математической индукции в 
школьном 
курсе 
математики 
является 
средством 
обучения 
решению 
нестандартных задач, т. к. «на его принципе основано решение многих задач и 
доказательств» [4; 226]. Изучения метода математической индукции согласно 
требованиям ФГОС включено в программы с физико-математическим профилем 
[3; 28]. 
Описывая метод математической индукции как метод доказательства 
утверждений, А.А. Оленев, А.В. Назаренко отмечают, что «метод математи-
ческой индукции может использоваться для обучения учащихся применению 
метода математической индукции в решении задач на: делимость и кратность; 
равенств и неравенств; тождеств; свойств числовых последовательностей и 
суммы» [3; 28]. 
 
 
241 
Индукция – это метод получения общего суждения из частных 
высказываний. Например, индивид на основе наблюдений за сменой сезонов 
делает следующий вывод: времена года сменяют друг друга в определенном 
порядке, т. е. имеется определенная закономерность. А.А Темербекова, 
Малчиева отмечают, что индукция строится на основе анализа и сравнения, 
данных наблюдения или эксперимента. При этом многократность повторения 
какого-либо факта приводит к индуктивному обобщению [4; 228]. 
Принято рассматривать математическую индукцию, как инструмент для 
математического 
доказательства. 
Она 
используется 
для 
доказательства 
справедливости утверждения относительно натуральных чисел. Считается, что 
определение математической индукции введено Б. Паскалем.  
Пример: число 130 делится на 5. 
Все числа, оканчивающиеся нулем, делятся на 5. 
Особенностью применения метода математической индукции является то, 
что 
индукция 
может 
приводить 
к 
ошибочному 
результату. 
Нередко 
математическая индукция может быть логически необоснованна. Получается, 
что индукция может приводить к верным выводам, так и к ошибочным [4; 228]. 
В методических пособиях по математической индукции индуктивное 
рассуждение объясняется на основе костей домино. Если мы повалим одну 
стоящую костяшку на ребре, то за ней последуют и остальные доминошки  
[5; 10]. 
 
Рис. 1. Индукция в действии 
Задача, 
иллюстрирующая 
использование 
метода 
математической 
индукции представлена в таблице 1: 
 
 
242 
Таблица 1. Анализ использования метода математической индукции для 
решения задачи 
Условия задачи 
Решение 
Схема индуктивного 
рассуждения 
Игорь нарисовал 
треугольник. А 
Сережа решил, что 
на треугольнике не 
хватает линий, 
поэтому он провел 
n прямых, которые 
разделили 
треугольник на 
части. Докажите, 
что хотя бы одна из 
частей является 
треугольником 
По условию задачи прямые делят 
треугольник на части. Значит, они не 
совпадают 
со 
сторонами 
треугольника. 
Пусть первая прямая пересекает одну 
из сторон треугольника, тогда она 
пересечет 
и 
вторую 
строну 
треугольника. 
В 
результате 
мы 
получим 
в 
одной 
из 
частей 
треугольник. 
Добавим вторую прямую, которая 
пересекает 
первую 
внутри 
прямоугольника. Она тоже будет 
образовывать треугольник.  
Добавим третью прямую, которая 
пересекает первую и вторую прямую 
внутри прямоугольника. Она тоже 
будет 
образовывать 
треугольник. 
Значит, 
при 
пересечении 
треугольника прямой в одной из 
частей образуется треугольник. 
За базу индукции мы взяли 
n=1 (количество прямых). 
Проверили истинность этого 
утверждения, что найдется 
хотя бы одна часть, которая 
будет являться треугольник. 
Далее проверили это при 
n=2;3 и так далее. Заметили, 
что в каждом таком случае 
находится хотя бы один 
треугольник. 
 
Данный пример иллюстрирует, что в процессе решения задачи методом 
математической 
индукции 
в 
задаче 
выделяется 
последовательность 
утверждений, которые доказываем по очереди. Получаем следующую схему 
доказательства при помощи индукции. Существует последовательность 
утверждений (Уଵ, Уଶ, Уଷ, … , У௡). Мы доказываем, что У௡ верно, принимая все 
предыдущие У௞, где ݇<n. Теперь мы можем утверждать, что все У௡ являются 
верными. n – будет называться параметром индукции. Мы доказали утверждение 
У௡ индукцией по n [5; 10]. 
В.М. Зюзьков, объясняя методику использования метода математической 
индукции в процессе решения школьниками задач отмечает, что общее 
утверждение получается на основе изучения частных примеров. При этом 
учащийся должен обнаружить некоторый образец или шаблон, который 
удовлетворяет условиям задачи [1; 151]. 
 
 
243 
В логике, как и математике, используется два вида индуктивных 
рассуждений – полная и неполная индукция. Рассмотрим два примера 
применения логической индукции на основе задач из олимпиадной математики. 
Принцип полной индукции заключается в переборе метод перебора 
конечного числа случаев для доказательства утверждения. Данный метод 
используется только для конечного числа случаев, исчерпывающих все 
возможности [2; 6]. 
Задача. Собрались островитяне Алеша, Вася и Саша. Алеша сказал: «Мы 
все трое рыцари», Вася сказал: «Мы все трое лжецы». Саша промолчал. Скажите, 
кто из них кто? 
Выпишем в таблицу все возможные ситуации, таких ситуаций – 8. Вариант 
1 не подходит, так как в нем лгун Вася был бы прав, проверим вариант 2. 
В варианте 2 все складно – два лжеца сообщили ложь, рыцарь промолчал. 
Проверим остальные варианты. 3, 4, 7 и 8 можно сразу отбросить – в них Вася 
рыцарь, но говорит при этом «Мы все лжецы», явное противоречие. Так как Вася 
лжец, то Алеша говорит неправду, значит, он не рыцарь и варианты 5 и 6 
невозможны. 
Таблица 2. Всевозможные ситуации задачи 
 
1 
2 
3 
4 
5 
6 
7 
8 
Алеша 
Л 
Л 
Л 
Л 
Р 
Р 
Р 
Р 
Вася 
Л 
Л 
Р 
Р 
Л 
Л 
Р 
Р 
Саша 
Л 
Р 
Л 
Р 
Л 
Р 
Л 
Р 
 
Так как математика оперирует чаще всего бесконечными множествами, а 
проверка 
бесконечного 
множества 
частных 
случаев 
для 
человека 
затруднительна, метод применение метода полной индукции ограничено. 
Метод, 
когда 
в 
процессе 
решения 
задачи 
не 
рассматриваются 
всевозможные случаи, называется неполной индукцией [4; 227]. 
Задача. У Миши есть три кубика – красный, желтый и синий. Каким 
количеством способов можно поставить их в ряд? 
Обозначим кубики первыми буквами их цветов: К, Ж, С. Если на первое 
место поставить кубик К, то два остальных можно поставить двумя способами – 
 
 
244 
ЖС и СЖ. Затем, если поставить на первое место кубик Ж, то аналогично это 
даст еще два способа и, если поставить на первое место кубик С, – еще два 
способа. Всего 2+2+2=6 способов. 
Так в решении этой задачи не рассмотрены все возможные случаи, то эта 
задача решена при помощи метода неполной индукции.  
Таким образом, на примерах мы продемонстрировали эффективность 
применения метода математической и логической индукции, как полной, так и 
неполной индукции. Метод математической индукции становится особенно 
эффективным, когда явно задан параметр индукции. В тех случаях, когда 
параметр индукции и шаг индукции не заданы явно, можно перейти к методу 
логической индукций. В таком случае из частных высказываний мы получим 
более общее суждение. Получается, что метод математической индукции 
является производной от логической индукции. 
Метод индукции может использоваться для обучения учащихся решению 
задач продвинутого уровня по темам: четность, рыцари и лжецы, комбинаторика, 
геометрические задачи и других. 
 СТАТЬЯ
Аннотация
. В статье рассматривается роль чертежа при решении 
геометрических задач, а также затрагивается проблема обучения учащихся 
решению планиметрических задач методом дополнительных построений, 
представлена классификация дополнительных построений на плоскости по 
основанию виду геометрических фигур. 
Ключевые 
слова: 
учащиеся, 
геометрия, 
планиметрия, 
чертеж, 
планиметрическая задача, метод дополнительных построений. 
 
Одной из значимых задач школьного математического образования 
является мобилизация внимания учащихся к изучению геометрии. Анализ 
результатов решения геометрических задач в государственной итоговой 
аттестации показывает, что учащиеся зачастую с трудом справляются с данными 
задачами. Действительно, статистические данные Тюменской области по 
результатам ЕГЭ по математике (профильного уровня) за 2020 г. показывают: в 
среднем с планиметрической задачей (задача № 16) на максимальный балл 
(3 балла) справилось 1,15% учащихся, 2 балла – 0,28%, 1 балл – 7,25%.  
В геометрии решение задач является одним из важнейших инструментов 
формирования у учащихся качеств, присущих творческой личности. Уметь 
решать задачи – это не только владение теоретическим материалом, но и умение 
самостоятельно находить способ ее решения и осуществлять его.  
Решить задачу значит найти соотношение между тем что дано в задаче и 
что необходимо найти. В некоторых задачах эта связь очевидна, и для решения 
задачи лишь требуется произвести определенные операции с использованием 
конкретных формул. В других же задачах, в которых связь не так явна, требуется 
 
 
246 
либо выбор способа решения, либо использование ряда теорем или определений, 
применение которых, приводит к решению задачи.  
При решении геометрических задач важную роль играет правильно 
построенный чертеж к задаче, акцентирует внимание в своих работах В.А. Да-
лингер. В исследованиях Е.В. Кондратьевой отмечается, что работать с чертежом 
значит: уметь анализировать чертеж с разных точек зрения, уметь осуществлять 
верный выбор фигур, необходимых для решения задачи, уметь построить 
различные дополнительные линии, которые не загромождают чертеж, а 
позволяют рационально решить задачу. В свою очередь неумение работать с 
чертежом приводит к ошибочным выводам или рассмотрению частных случаев 
решения. 
Интерес к геометрическим задачам как к средству обучения учащихся 
прослеживается в методических исследованиях (Далингер В.А., Саранцев Г.И., 
Якиманская И.С. и др.). В научной литературе геометрические задачи допускают 
классификацию по различным основаниям. Так, например, в качестве основания 
можно рассмотреть метод решения (векторный, координатный и т.д.). 
Отдельным классом, в таком случае, можно выделить задачи, при решении 
которых необходимо использовать различные преобразования. К таким задачам 
Далингер В.А. относит те из них, которые решаются методами геометрических 
преобразований, геометрических мест точек, а также с использованием 
дополнительных построений. 
В работах Герасимовой А.Д., Готмана Э.Г., Кондратьевой Е.В., 
Устниковой Т.В., Шилинец В.А. и других, рассматриваются основные аспекты 
применения дополнительных построений при решении задач. Авторы отмечают, 
что, решая задачи методом дополнительных построений, чертеж представляет 
собой, в большинстве случаев, сочетание геометрических фигур. При этом, для 
того, чтобы решить задачу с помощью дополнительных построений, необходимо 
проводить анализ чертежа на необходимость его дополнения. Следовательно, 
если имеющих фактов не хватает для решения задачи, то нужно преобразовывать 
чертеж путем проведения новых линий, а в заключении выполнить вторичный 
 
 
247 
анализ 
для 
того, 
чтобы 
получить 
конечный 
результат. 
Вследствие 
систематического использования такого приема у учащихся формируется 
умение читать чертеж, что позволяет им верно выстроить ход решения задачи.  
Анализ учебников по геометрии показал, что школьникам в процессе 
обучения встречаются множество задач, при решении которых возможно 
использование дополнительных построений. Однако, собственный школьный 
опыт и анализ педагогического опыта показывает, что при решении таких задач 
учащиеся сталкиваются с трудностями или решают шаблонными методами. Это 
объясняется 
учителями-методистами 
тем, 
что 
умение 
применять 
дополнительные построения к чертежу у учащихся формируется неосознанно, 
вследствие чего, данный метод не востребован среди них.  
Таким 
образом, 
ставится 
проблема, 
как 
встроить 
инструменты 
дополнительных построений в обучение учащихся решению планиметрических 
задач.  
Отметим, что в отличие от шаблонного решения задачи чертеж является 
основным инструментом при ее решении. Это и определяет главную идеи метода 
дополнительных построений. При этом он дополняется новыми, необходимыми 
вспомогательными элементами. В следствие чего, на чертеже вводятся новые 
объекты (углы, отрезки), и возникают геометрические фигуры, способствующие 
рациональному решению задачи. 
Дополнительные построения дают возможность:  
 для создания новых фигур, это позволяет применять теоремы, признаки 
и свойства, связанные с ними, при решении задач;  
 для создания подобных фигур; 
 для создания пропорциональных элементов. 
Бывает, что в условии задачи дается подсказка на определенное 
дополнительное построение, но зачастую заметить необходимое построение 
могут не все учащиеся. Однако есть вполне классические дополнительные 
построения, которые можно разобрать с учащимися и выполнение которых 
облегчит решение геометрических задач.   
 
 
248 
Например, 
1. Если по условию задачи в треугольнике дана медиана, то треугольник 
можно достроить до параллелограмма (рис. 1). В результате построения 
образуются равные треугольники. Исходя из условий в задаче данное построение 
можно выполняется для одной, двух или даже трех медиан. Рассматривать 
можно как весь параллелограмм АВА2С, так и его часть, например, ∆ ABA2 или 
∆ АСА2. 
 
 
Рис. 1. Удвоение медианы 
2. 
Если по условию задачи дан прямоугольный треугольник, то его 
можно достроить до равнобедренного треугольника (рис. 2). В полученном 
треугольнике один из катетов будет высотой, биссектрисой, медианой, а другой 
будет являться половиной основания.  
 
 
Рис. 2. Дополнительное построение в прямоугольном треугольнике 
3. Если по условию задачи в произвольном треугольнике задана 
определенная трансверсаль (отрезок прямой, проходящий через вершину 
треугольника и заключенный внутри него), то через ее конец, отличный от 
вершины, внутрь треугольника проводится прямая, параллельная стороне, до 
пересечения с другой стороной (рис. 3). В результате такого дополнительного 
 
 
249 
построения получаем, что ∆ А2А1С и ∆ АВС подобны по первому признаку 
подобия: равенство двух углов, ∠А1А2С = ∠ВАС, при АВ||А2А1 и секущей АС, 
∠А2А1С = ∠АВС, при АВ||А2А1 и секущей ВС. Отметим, что если трансверсаль 
является медианой , то получаются равные отрезки (АА1 – медиана, АА2 = А2С). 
 
 
Рис. 3. Дополнительное построение в произвольном треугольнике 
 
4. Если по условию задачи в произвольном треугольнике задана медиана и 
трансверсаль, проходящие через разные вершины, то через основание медианы 
внутрь треугольника проводится прямая, параллельная данной трансверсали, до 
пересечения со стороной треугольника (рис. 4). В результате данного построения 
получаем параллельные прямые, которые отсекают на секущих пропор-
циональные отрезки. При этом возможно два случая: 
1) ∠ACB и секущие A1A2 || BB1, тогда АВ1 = В1С; 
2) ∠A1AC и секущие MB1 || A1A2, где M = точка пересечения прямых AA1 
и BB1, тогда получаем пропорциональные отрезки: 
 
 
 
Рис. 4. Дополнительное построение в произвольном треугольник 
 
 
250 
5.  Если по условию задачи в произвольном треугольнике дана биссектриса 
одного из внутренних углов, то в треугольнике можно достроить ромб, так что 
АВ || C1A1 и АС || В1А1 (рис. 5). Заданная биссектриса в полученном ромбе 
является будет является одной из диагоналей.  
 
 
Рис. 5. Дополнительное построение в произвольном треугольнике 
6. Если по условию задачи задана произвольная трапеция, то в трапеции 
можно провести высоты (рис. 6). Тогда по построению получаем два 
прямоугольных треугольника ∆АНВ и ∆СKD и прямоугольник HВСK.  
 
 
Рис. 6. Дополнительное построение в произвольной трапеции 
Продемонстрировать 
механизм 
использования 
метода 
дополнительных 
построений возможно на задачах из учебников по геометрии Атанасяна Л.С. [1] и 
Готмана Э.Г. [4]. 
Задача №1. Докажите, что если в прямоугольном треугольнике катет равен 
половине гипотенузы, то он противолежит углу, равному 30о [1]. 
 
 
251 
 
Дано: ABC – прямоугольный, ∠С = 90о, 
AC = 
ଵ
ଶAB  
Доказать, что ∠В = 30 о 
Рис. 7. Условие задачи № 1 
Доказательство: 
1. Выполним дополнительное построение: достроим треугольник АВС до 
равнобедренного, так что на продолжении катета АС построим точку С, DС = CА. 
2. ∆ DBC = ∆ABC (по двум катетам), значит, AB = BD и ∠ABC=∠DBC. 
3. AC = 
ଵ
ଶAB, AC = 
ଵ
ଶAD(по условию), значит, AB = DА.  
4. AB = AD = BD, откуда ∠A = ∠D = ∠DBA = 60◦.  
5. ∠ABD = 60◦, ∠DBC = ∠ABC, получаем, что ∠ABC = 30◦, ч.т.д. 
Задача №2. В равнобедренном треугольнике боковая сторона равна 4, а медиана, 
проведенная к боковой стороне, равна 3. Найдите основание [4].  
 
 
Дано: ABC – равнобедренный,  
АВ = АС = 4 
АD – медиана, АD = 3 
Найти: ВС 
Рис. 8. Условие задачи № 2 
 
Доказательство: 
1. Выполним дополнительное построение: DЕ, так чтобы АD=DЕ=3 и ЕАD. 
2. По построению ABEC – параллелограмм (по признаку параллелограмма). 
3. Значит по теореме о диагоналях параллелограмма получаем: 
AE2 + BC2 = 2(AB2 + AC2),  
 
 
252 
42 + 62 = 2(42 + AC2),  
AC2 = 10, 
AC = √10. 
Ответ:  √10. 
Отметим, что метод дополнительных построений один из результативных 
и эффективных методов при решении планиметрических задач. Данный метод 
является трудным, поскольку для построения грамотного и рабочего чертежа 
необходимы знания дополнительных построений и практика решения задач. 
Зная различные дополнительные построения и способ их применение, решать 
геометрическую задачу становится проще, ведь на чертеже появляются другие 
фигуры, свойства которых нам известны. Кроме того, данному методу необходимо 
обучать, чтобы в дальнейшем при доказательстве теорем и решении задач, учащиеся 
могли предлагать свои идеи применения дополнительных построений. 
 
 СТАТЬЯ
Аннотация
. В статье обсуждаются проблема нарушения авторского права 
в сфере киноиндустрии и методы по предотвращению и пресечению нарушений. 
Приведена концепция системы по внедрению цифровых водяных знаков в 
материалы, демонстрируемые в цифровых кинозалах.  
Ключевые 
слова: 
стеганография, 
цифровые 
водяные 
знаки, 
кинопиратство, цифровые метки, видеоконтейнеры, авторские права. 
 
Введение 
Большую часть кинофильмов, демонстрируемых в кинотеатрах, можно 
найти в сети в свободном доступе несмотря на то, что это не предусмотрено 
автором.  Основываясь на аналитике британской компании MUSO, на 2020 год в 
России было произведено около 727 миллионов переходов по пиратским 
ресурсам. Спрос на пиратские фильмы вырос почти на треть, по сравнению с 
предыдущим годом. В 2019 году мировые потери правообладателей от интернет-
пиратства оцениваются более чем в 9 миллиардов долларов, к 2024 году сумма 
может возрасти до 12 миллиардов [1]. Финансовые потери, связанные с 
кинопиратством сказывается в целом на развитии кинематографической 
отрасли. Таким образом, проблема нарушения и защиты авторских прав 
кинематографических продуктов является актуальной. Одним из решений этой 
проблемы является создание системы по защите авторских прав для фильмов, 
находящихся в прокате. 
 
 
254 
Существует ряд методов по защите видеоряда и определению его 
принадлежности, например алгоритм Куттера или алгоритм Patchwork, в основе 
которых заложен принцип внедрения цифровых водяных знаков (далее – ЦВЗ) 
[2]. 
Этот метод защиты авторского права и определения принадлежности 
файла является наиболее эффективным и распространенным из-за того, что 
сложно (или невозможно) увидеть ЦВЗ при просмотре видеоряда без 
применения специального программного обеспечения, а так же удалить эти 
метки без причинения ущерба целостности кинофильма. 
Проанализировав области применения ЦВЗ, нами была подмечена 
актуальность данного метода стеганографии в сфере кинопроката.  
На данный момент в сфере кинопроката уже существуют решения для 
идентификации сеанса, на котором велась несанкционированная видеозапись по 
меткам, которые наносятся на видеоряд. Однако, данные решения имеют один 
существенный недостаток – искажение зрительского опыта во время просмотра 
фильма. Согласно комментариям, опубликованным на тематических форумах, 
существует процент людей, которым данные метки бросаются в глаза, а, 
следовательно, отвлекают фокус внимания от повествования картины [3]. 
В связи с выявленными проблемами, нами был разработан собственный 
метод, по внедрению цифровых водяных знаков или меток для контейнеров 
формата DCP, который используется для демонстрации материалов в цифровых 
кинозалах.  
Формат DCP 
Формат DCP – цифровой кино пакет, разработанный консорциумом 
ведущих мировых киностудий DCI (англ. Digital Cinema Initiatives). Важной 
особенностью является то, что для полноценной работы, цифровой пакет DCP 
должен соответствовать требованиям DCI – это необходимо для совместимости 
со всеми цифровыми кинозалами. Согласно этому стандарту, каждый кадр при 
сохранении сжимается по стандарту JPEG 2000, используя цветовое 
пространство CIE XYZ с глубиной цвета 12 бит на канал. Звук сохраняется в 
 
 
255 
формате WAV. Все компоненты вносятся в пакет DCP, который предполагает 
использование контейнера MXF с ограничением максимального потока в 
250 мегабит в секунду и при необходимости шифруется. Ключ, в котором 
содержится номер кино сервера и период времени, в который кинотеатр сможет 
запустить данный пакет, высылается по электронной почте для воспроизведения 
зашифрованного контента [4]. 
Пакет DCP всегда включает в себя следующие составляющие: контейнер с 
изображением формата MXF, контейнер MXF со звуком, файл списка 
воспроизведения компонентов фильма, файл описания содержимого DCP и 
файл, содержащий контрольные суммы контейнеров [4]. 
 
 
Рис. 1. Пример содержимого видеоконтейнера формата DCP 
 
Водяные знаки 
Цифровой водяной знак – технология, созданная для защиты авторских 
прав мультимедийных файлов. Различают видимые и невидимые ЦВЗ. 
Невидимые ЦВЗ внедряются непосредственно в цифровые данные, но их 
невозможно обнаружить без вспомогательных инструментов. Эту информацию 
можно представить в виде надписи или логотипа [5]. 
 
 
256 
 
Рис. 2. Пример видимого ЦВЗ 
 
Жизненный цикл ЦВЗ можно описать следующими шагами: 
1. В источник сигнала в некоторой доверительной среде при помощи 
вспомогательной функции внедряется ЦВЗ; 
2. Полученный в результате внедрения ЦВЗ защищенный сигнал 
распространяется (передается получателю каким-либо способом); 
3. Во время распространения сигнала, на него может быть совершена 
атака, в результате которой ЦВЗ могут быть уничтожены или 
изменены; 
4. Заключительным 
этапом 
является 
обнаружение 
ЦВЗ 
и 
идентификация подлинности данных с помощью вспомогательных 
функций [6]. 
 
 
 
 
257 
 
Рис. 3. Жизненный цикл ЦВЗ 
 
ЦВЗ обладают рядом важных свойств, которые нужно учитывать при 
работе с ними. Первым таким свойством является внедряемый объем. Это размер 
сообщения, 
которое 
возможно 
записать. 
Вторым 
свойством 
является 
извлекаемый объем. Это свойство связано с размером сообщения, которое было 
извлечено при получении сигнала. В нашем случае это свойство для нас не 
важно, так как целью внедрения ЦВЗ не является передача сообщения по 
незащищенному каналу. Далее можно отметить такое свойство как сложность. 
Сложность ЦВЗ – совокупность таких факторов как: усилия на внедрение, атаку, 
детектирование или расшифровку. В зависимости от реализации сложность 
описывает затрачиваемое время, кол-во операций ввода-вывода, количество 
строк кода и так далее.  Заключительным важным свойством ЦВЗ является 
надежность. Для измерения надежности используются понятия числа 
ошибочных байтов и частоты ошибочных битов. Измеряется расстояние между 
строками извлеченного и внедренного сообщений или процент совпадений для 
побитового сравнения. Если строки совпадают, то метод надежен. Существует 
три вида надежности ЦВЗ: 
 
Хрупкий – при малейшей модификации уже нельзя обнаружить. 
Используется для проверки целостности; 
 
Полухрупкий – выдерживает незначительные модификации сигнала, 
но 
вредоносные 
преобразования 
не 
выдерживает. 
Используется 
для 
обнаружения атаки; 
 
 
258 
 
Надежный – противостоит всем известным видам атак. Используется 
в системах защиты от копирования и идентификации [7]. 
Система по внедрению цифровых водяных знаков 
Система, концепцию которой мы разработали, предоставляет собой 
аналогичный набор возможностей по идентификации, однако, в отличие от 
существующих, она разработана, в том числе, чтобы минимизировать 
акцентирование внимания на нанесенных цифровых метках и не портить 
зрительский опыт. 
В соответствии с жизненным циклом ЦВЗ (рис.3), система по внедрению 
цифровых водяных знаков должна состоять из двух приложений: 
1) 
Приложение, внедряющее идентификационные метки в видеоряд; 
2) 
Приложение, выполняющее анализ меток по загруженному файлу и 
дальнейшее информирование правообладателя об утечке. 
 
Алгоритм работы приложения, внедряющего идентификационные метки в 
видеоряд: 
1) Запускается покадровая обработка видео; 
2) Из потока берется целевой кадр/набор кадров для размещения меток 
согласно алгоритму; 
3) Метки помещаются на целевые кадры; 
4) Кадры возвращаются в поток. 
 
Разработанный нами алгоритм работает следующим образом. Из 
видеопотока берется целевой кадр и кадр, идущий в потоке перед ним. Далее, на 
целевой кадр помещается определенный фрагмент предыдущего кадра 
(выбранный согласно обозначениям разделения кадра на фрагменты). На 
рисунке 4, в качестве условного обозначения фрагментов, мы берем разделение 
кадра по горизонтали на N фрагментов. К примеру, размещение на целевом кадре 
7-го по счету сверху фрагмента из предыдущего кадра обозначает цифру 7.  
 
 
259 
Ознакомиться со схематичным изображением алгоритма можно на 
рисунке 4. 
 
 
Рис. 4. Алгоритм размещения цифровых меток 
Однако, помимо разработки алгоритма размещения меток, перед нами 
также стоит задача разработки системы обозначений для меток. Поскольку, при 
разработке системы мы ориентируемся на кинопрокат, предполагается, что 
информация об идентификаторе кинозала, дате и времени сеанса будет 
кодироваться для достижения минимальной длины послания, и, далее, 
помещаться на кадр(ы) в виде метки, соответствуя системе обозначения. 
Алгоритм работы приложения для автоматического анализа меток: 
1) в приложение загружается запись экрана, на котором демонстрируется 
видеоряд со внедренными метками; 
2) при помощи компьютерного зрения на видеоряде опознаются метки; 
3) опознанные метки проходят процесс раскодирования; 
4) выясненная информация о кинозале, дате и времени сеанса 
отправляется на электронную почту компании-прокатчика с целью дальнейших 
разбирательств и взыскания штрафа с администрации кинотеатра. 
 
 
260 
Заключение 
Используя изученную информацию о контейнерах DCP и сведения о ЦВЗ, 
была предложена концепция системы по внедрению цифровых меток в 
видеоконтент, состоящей из приложения, внедряющего ЦВЗ, и приложения для 
автоматического анализа меток. 
 Дальнейшей задачей для нас стоит выбор подходящих библиотек и API 
для разработки и проектирования прототипа системы. Разработка первого 
прототипа планируется для работы с массовыми видеоконтейнерами (такими как 
mp4, avi, mkv). 
 
 СТАТЬЯ
Аннотация
. Развертывание виртуальных машин задача тривиальная, но, 
когда необходимо массово создавать разные виртуальные машины с разными 
операционными 
системами 
задача 
не 
простая. 
С 
помощью 
средств 
автоматизации возможна массовая подготовка и интегрирование программного 
обеспечения. В результате возможно подготовить инструменты – исполняемые 
файлы для автоматизированной развертки одной или нескольких виртуальных 
машин с программными уязвимостями. 
Ключевые слова: VMware, ESXi, vSphere, Гипервизор, Виртуализация, 
Скрипт, Пентест. 
Тестирование на проникновение становиться все более востребованной 
задачей. Это сложная и трудоемкая работа, для проведения которой необходимо 
обладать большим числом компетенций, владеть различными техниками, иметь 
обширные знания в различных областях. Подготовка таких специалистов 
является актуальной задачей.  
Очевидно, что процесс обучения таких специалистов должен включать 
большой объем практической работы, в процессе которой обучаемый должен 
получить реальный опыт проведения пентеста в условиях максимально 
приближенных к реальным.  
Учитывая тот факт, что реальными объектами для проведения пентеста, 
как правило, являются корпоративные сети во всем их многообразии, где 
используются разные ОС с их вариативностью версий и сборок, а также 
различное программное и аппаратное обеспечение, обладающее, возможно, 
 
 
262 
уникальным набором уязвимостей. Воссоздать такую инфраструктуру на базе 
прохождения обучения весьма проблематично, а это: 
1) большие затраты по времени; 
2) большой объем затрачиваемых ресурсов; 
3) калибровка и отладка процессов; 
4) постоянное переключение типов задач. 
В связи с этим для кафедры информационной безопасности Тюменского 
государственного университета было предложено решение, с использованием 
средств автоматизации, на основе сценариев, развернуть виртуальную, 
изолированную, среду для проведения учебных занятий по тестированию на 
проникновение. 
Решить эту проблему помогут современные технологии виртуализации и 
инструменты автоматизации процессов.  
На рынке свободного программного обеспечения уже существует 
приложение Secure Scenario Generator [1], разрабатываемое Клифом Шройдером, 
позволяющее развернуть виртуальную машину с набором уязвимостей при 
использовании инструмента Vagrant [2].  
Использование данного приложения для реализации на гипервизоре 
vSphere нецелесообразно на основании ряда факторов: 
1) не полная поддержка гипервизора ESXi; 
2) отсутствие поддержки vSphere; 
3) сложность развертывания ОС семейства Windows; 
4) использование одних и тех же ОС для развертки; 
5) использование большого объема зависимых пакетов; 
6) для массового развертывания ВМ необходима БД. 
Взамен было предложено альтернативное решение с использованием 
свободно распространяемого инструмента Packer. С помощью данного 
инструмента возможно разворачивать ОС с нуля с использованием скриптов, а 
также, с помощью дополнительных плагинов, обращаться к API гипервизора 
vSphere [3].   
 
 
263 
Для поддерживаемых версий Windows и Windows Server создаются 
специальные конфигурации на разметке XML, позволяющие пропустить мастер 
установки, путем автоматического ввода необходимых параметров. 
Для Unix-Like систем, в частности Debian, CentOS 7 и Ubuntu создаются 
скрипт 
с 
загрузочными 
командами, 
позволяющие 
установить 
ОС 
в 
автоматическом режиме.  
Таким образом, можно использовать любые поддерживаемые версии ОС 
обоих семейств, а также использовать разные версии их сборок, что повышает 
разнообразие будущей инфраструктуры.   
Для того, чтобы интегрировать уязвимое ПО в ОС необходимо 
воспользоваться 
методом 
написания 
скриптов 
с 
помощью 
штатных 
инструментов: Bash, sh или PowerShell, Batch.   
Для семейств Windows, подготовка одной ВМ разделяется на три этапа: 
1. Установка ОС; 
2. Подключение необходимых инструментов, в частности OpenSSH 
клиент, необходимый для развертывания и передачи по нему дополнительного 
софта, согласно сценарию. 
3. Выполнение развертывания согласно сценарию. 
Для Unix-Like систем, в силу ее богатого инструментария «из коробки», 
подготовка одной ВМ разделяется на два этапа: 
1. Установка ОС; 
2. Выполнения развертывания согласно сценарию. 
Для 
управления 
всеми 
скриптами 
и 
средствами 
автоматизации, 
администратор должен знать метод установки ОС, порядок установки, 
затрачиваемое время подготовки того или иного пункта, например: время 
подготовки к установке и т.п. Это обусловлено тем, что процесс подготовки ОС 
с ее установкой, работает на основе командной оболочки, которая и выполняет 
заданные администратором аргументы, будь то графический интерфейс или 
командная 
строка, 
ведь 
для 
сценария, 
важным 
фактором 
является 
последовательность выполнения команд.  
 
 
264 
Сценарии состоят из аргументов, написанных на языке разметки XML и 
структуре JSON для Windows и JSON и Config File для Unix-like. Они содержат 
необходимые аргументы и команды, задаваемые администратором, с помощью 
которых применяется нужное значение для установки, настройки и эксплуатации 
ОС. 
С помощью сценариев дается возможность создать виртуальные 
дисководы, в которые помещаются исполняемые файлы для дальнейшей 
настройки ОС. Часть скриптов для выполнения процессов помещаются в них, 
особенно когда скрипты зависимы друг от друга, создавая тем самым буферную 
зону, где сценарий ожидает их завершения.   
Также, стоит учитывать, что при автоматизированной разведке на основе 
гипервизора первого уровня могут возникнуть ряд проблем, связанные с 
ограничением доступа или отсутствием его вовсе для конкретного модуля, что 
усложняет подготовку виртуальной инфраструктуры, в отличии от гипервизоров 
второго уровня, где администратор имеет полный доступ к его инструментарию.  
Заключение 
Процесс 
создания 
виртуальных 
машин 
с 
последующей 
автоматизированной установкой программного обеспечения весьма быстр и 
надежен. Грамотное владение скриптовыми языками PowerShell и Shell 
обеспечивают автономность выполнения процессов без участия администратора. 
Таким образом, соединение нескольких сценариев позволяет подготовить 
большое количество ВМ и интегрировать в них программное обеспечение, а 
также различные программные уязвимости.   
 СТАТЬЯ
Аннотация
. В статье рассмотрены регистры сдвига с линейной и 
нелинейной обратной связью (РСЛОС и РСНОС) и их сравнение. Приведены их 
конфигурации Галуа и Фибоначчи, для регистров сдвига с линейной обратной 
связью рассмотрен пример реализации на Arduino. 
Ключевые слова: сдвиговые регистры, криптография, аппаратная 
реализация, РСЛОС, РСНОС. 
Введение 
Определяющим на ближайшие годы направлением развития Интернета 
будет Интернет Вещей [1]. Это направление характеризуется переходом от 
персональных компьютеров к сети между объектами на подобии бытовых 
приборов, транспортных средств, различных сенсоров и датчиков. 
Особую актуальность приобретает задача эффективной реализации 
алгоритмов 
защиты 
информации. 
Основным 
средством 
обеспечения 
информационной безопасности в Интернете Вещей является так называемая 
«легковесная криптография». Типичными ограничениями для аппаратной 
реализации являются: размер микросхемы, потребляемая энергия и время, 
затраченное на выполнение программы. Поэтому необходимо использовать 
специализированные 
вычислительные 
устройства, 
удовлетворяющие 
требованиям. 
Сдвиговые регистры представляют собою цепочку разрядных схем, 
связанных цепями переноса. Основной режим работы – сдвиг разрядов кода от 
одного триггера к другому на каждый импульс тактового сигнала. 
В однотактных регистрах со сдвигом на один разряд вправо слово сдвигается при 
поступлении тактового сигнала. Чаще всего регистр сдвига собирается на основе 
 
 
267 
последовательно соединенных D-триггеров, притом количество этих триггеров 
определяет разрядность регистра [2]. 
 
 
Рис. 1. Сдвиговый регистр 
 
Математические модели РСЛОС 
Регистр сдвига с линейной обратной связью, сокращенно РСЛОС – 
сдвиговый регистр битовых слов, у которого значение входного бита однозначно 
задается некоторой функцией, исходя из значений остальных битов регистра до 
сдвига. Добавление обратной связи превращает регистр сдвига в генератор 
псевдослучайных чисел. Также РСЛОС применяется для поточных шифров 
таких, как A5/1, Grain, Bean и др.  
Обратная связь организуется с помощью булевой функции. Эта функция и 
определяет какое значение придет на вход регистра. В зависимости от 
конфигурации имеются разные влияния на состояние ячеек памяти. 
В конфигурации Фибоначчи в зависимости от многочлена обратной связи 
выбираются участвующие в сумме по модулю два ячейки памяти. I-тая ячейка 
участвует в сумме если в многочлене присутствует i-тая степень. (рис 1) 
Математическая модель выглядит следующим образом: 
b୧
ା= b୧ିଵ
ି ,  i = 1,  n ; 
 ܾ଴
ା= ௡
⨁
ೕసభܽ௝∗ܾ௝
ି,  ܽ௝∈{0,1}. 
 
 
 
268 
 
Рис. 2. РСЛОС конфигурации Фибоначчи 
В конфигурации Галуа для генерации нового состояния выполняется 
операция XOR с выходным битом, заменяя старый бит участвующих в операции 
ячеек памяти. Участие ячейки определяется аналогично наличием i-й степени в 
многочлене. (рис. 2) Математическая модель выглядит следующим образом 
[3, 4]: 
ܾ௜
ା= ܾ௜ିଵ
ି
݊
⨁
௝ୀଵ
ܽ௜ିଵ∗ܾ௡
ି,  ݅= 1,  n ; 
ܾ଴
ା= ܾ௡
ି. 
 
Рис. 3. РСЛОС конфигурация Галуа 
 
Аппаратная реализация РСЛОС 
Для аппаратной реализации криптографических сдвиговых регистров 
понадобятся микросхемы, приведенные на рис. 4: 
 Логический И 
 Исключающее ИЛИ 
 Регистр сдвига 
 
 
269 
 
Рис. 4. Необходимые схемы для аппаратных реализаций 
Для установки многочлена обратной связи воспользуемся схемами 
“Логичсекий И” и вспомогательным регистром сдвига. В ячейках памяти 
вспомогательного регистра сдвига, хранится информация о наличии i-й степени 
в многочлене, 1 – степень присутствует, 0 – отсутствует. Так-как слагаемое ноль 
не влияет на итог суммы по модулю два, то при обнулении i-ой ячейки памяти 
основного регистра сдвига, убирается влияние этой ячейки на итог операции 
(рис. 5). 
 
 
Рис. 5. Установка многочлена обратной связи в РСЛОС  
конфигурации Фибоначчи 
 
 
270 
Далее необходимо со всеми выходами схем “Логичсекий И” произвести 
операцию XOR. Для этого достаточно последовательно подать значения на 
схемы “Исключающее ИЛИ”. Итоговый бит всех операций и будет новым 
входным битом РСЛОС (рис. 6). 
 
Рис. 6. Вычисление следующего входящего бита в РСЛОС 
Для конфигурации Галуа аналогично, обнулив выходной бит перед 
операций XOR с i-ой ячейкой памяти основного регистра сдвига, значение в 
ячейке изменено не будет. Итог этих операций и будет новым состоянием 
РСЛОС (рис. 7). 
 
Рис. 7. Установка нового состояния в РСЛОС конфигурации Галуа 
 
 
271 
Предварительное тестирование будет происходить на онлайн платформе 
Tinkercad (рис. 
8). 
Для 
8-битной 
РСЛОС 
конфигурации 
Фибоначчи 
понадобиться: 
 Два регистра сдвига 74hc595; 
 Два двойных “Логическое И” 74hc08; 
 Два двойных “Логическое исключающее ИЛИ” 74hc86. 
 
 
Рис. 8. РСЛОС конфигурации Фибоначчи в Tinkercad 
 
На рисунке в красной области происходит установка многочлена обратной 
связи. Для этого необходимо отключить вывод на вспомогательном регистре, 
протолкнуть в него байт, который указывает о наличии или отсутствии i-й 
степени в многочлене обратной связи, включить вывод на вспомогательном 
регистре. 
В зеленой области происходит вычисление следующего входящего бита. 
Для этого необходимо отключить вывод на регистре, а затем включить его. 
 
 
272 
Произойдет сдвиг данных и в первую ячейку попадет входной бит, полученный 
с последовательности схем “Исключающее ИЛИ”. 
РСНОС 
В зависимости от функции обратной связи, существуют и регистры сдвига 
с нелинейной обратной связью, или РСНОС. Как следует из названия, в РСНОС 
используется нелинейная операция (например, умножение) (рис. 9). В частности, 
РСЛОС – частный случай РСНОС, в случае, когда суммируются по модулю 
многочлена лишь исходные биты и выходные биты, результаты нелинейной 
операции в сумму не входят. РСНОС, как и РСЛОС, используются в генераторах 
псевдослучайной последовательности, а также в шифрах, таких как Achterbahn, 
Grain (совместно с РСЛОС). 
 
Рис. 9. Пример функции обратной связи в РСНОС 
 
Существуют конфигурации Фибоначчи (рис. 10) и Галуа (рис. 11), которые 
определяются так же, как и в РСНОС. 
 
 
273 
 
Рис. 10. РСНОС конфигурации Фибоначчи
 
Рис. 11. РСНОС конфигурации Галуа 
 
В РСНОС существует, по сравнению с РСЛОС, большее количество 
возможных структур при одинаковом размере регистра, что обеспечивает 
большую криптостойкость. Один и тот же набор ключей дает в РСНОС больше 
возможных последовательностей. Однако, в отличие от РСЛОС, поиск структур, 
обеспечивающих максимальный период выходной последовательности, не до 
конца изучен [5]. В данный момент вычислены такие структуры для длины 
регистра до 30 бит. 
Несмотря на это, программное увеличение времени работы в среднем на 
30% оказывает незначительное влияние на производительность, из-за чего 
использование РСНОС в будущем является перспективным, так как они 
обеспечивают большую криптостойкость. 
 
Выводы 
 
Были рассмотрены и сравнены РСЛОС и РСНОС в конфигурации 
Фибоначчи и Галуа. Для РСЛОС приведена реализация на Arduino, рассмотрены 
 
 
274 
математические модели. Для РСНОС была поставлена проблема поиска структур 
максимальной последовательности. 
 
Рассмотренные регистры сдвига предлагается сравнить по аппаратной 
эффективности, для чего были поставлены следующие задачи: реализовать в 
симуляторе РСЛОС, РСНОС конфигурации Галуа, собрать и протестировать 
схемы, произвести замеры производительности, проанализировать полученные 
данные. 
 СТАТЬЯ
Аннотация
. В статье представлено описание результатов анализа 
эффективности и рисков применения новых функций Microsoft SQL Server 2019, 
таких как классификация данных и ускоренное восстановление данных. 
Ключевые слова: ускоренное восстановление, классификация, Microsoft 
SQL Server, производительность, аудит. 
Введение 
Microsoft SQL Server 2019 предоставил ряд новых возможность в области 
информационной безопасности. В ходе данной работы были рассмотрены 
функции классификации данных и ускоренного восстановления. Отсутствие 
подробной документации и описания их влияния на производительность, 
привело к необходимости проведения анализа: изучение возможностей и 
особенностей 
функций; 
выявление 
уязвимостей; 
оценка 
влияния 
на 
производительность. Главным критерием оценки являлось время выполнения 
запросов. Все измерения проводились с процессором Intel i7-4770 с частотой 3.8 
ГГц и 16 Гб ОЗУ DDR3 с частотой 1600 МГц (две AMD R538G1601U2S-UGO), 
диск samsung 870 qvo (MZ-77Q1T0BW), жестким диском Samsung 870 qvo (MZ-
77Q1T0BW), ОС Windows 10 Pro x64. Измерение времени и выполнение 
запросов осуществлялось через программу SqlQueryStress. 
Классификация данных 
Эта функция помогает разметить данные для последующей реализации 
мер защиты и является одной из возможностей аудита доступа к данным [1].  
Для классификации имеется возможность настроить способы определения  
по шаблону типа информации (банковская карта, номер телефона) и категории 
ее 
конфиденциальности. 
Однако 
по 
указанному 
типу 
информации 
 
 
276 
автоматически могут определиться только 2 категории конфиденциальности  
из 6 стандартных.  
Обнаружение данных 
На основе изучения файлов и создания различных таблиц, было выяснено, 
что функция обнаружения работает по следующему алгоритму – сверяет 
названия столбцов таблиц с заранее заданными правилами (шаблонами) для 
каждого типа информации. Стандартный набор правил поиска с типами 
информации и категориями конфиденциальности поставляется json-файлом 
вместе с MS SQL Management Studio. Файлы полностью идентичны в русской и 
английской локализациях. Большинство шаблонов поиска присутствуют только 
на английском языке. Документация по созданию своего файла с правилами 
классификации отсутствует, но такая возможность имеется. Пример файла 
пользовательского правила классификации показан на рисунке 1. 
 
Рис. 1. Пример создания пользовательского правила классификации данных 
Хранение в базе данных 
Данные классификации сохраняются в виде метаданных столбцов. В файле 
базы данных метаданные с идентификаторами и названиями сохраняются в виде 
текста с 16-битной кодировкой Unicode и порядком байт от старшего к 
младшему. Пример представления данных классификации в метаданных 
столбцов на диске показан на рисунке 2.  
 
 
277 
 
Рис. 2. Представление данных классификации в метаданных столбцов на диске 
Хранение данных в таком виде может быть недостатком. Так, если у 
атакующего будет доступ к диску, то он сможет достаточно быстро найти файлы 
баз данных с конфиденциальными данными, например выполнив поиск по GUID 
типа информации. Поэтому авторы статьи рекомендуют менять GUID как в 
исходных, так и в пользовательских шаблонах. Кроме того, GUID не удаляется 
из файла после отключения функции классификации данных. Обязательно 
необходимо вручную удалить GUID из метаданных столбца. 
Просмотр информации о конфиденциальности столбцов выполняется 
через представление «sys.sensitivity_classifications» [2], которое также является 
потенциальным источником информации для атакующего, поэтому следует 
контролировать, выдачу разращения «view any sensitivity classification». 
Аудит и классификация 
Изучение влияния на производительность проводилось при включенном 
аудите при чтении случайных строк из 10000, записанных в таблицу с шестью 
столбцами, половина которых были классифицированы с разными параметрами. 
Для оценки производительности при высокой нагрузке было принято решение 
выполнить поочередное обращение на чтение данных к классифицированному 
столбцу и неклассифицированному. В сумме выполнено 20 испытаний с 
отправкой по 50 тысяч запросов в одном пакете к случайным строкам. Запросы 
на чтение к классифицированному столбцу в среднем выполнялись на  
3.4 секунды дольше, что составило около 17%. Время выполнения запросов к 
классифицированному и неклассифицированному столбцам в 20 испытаниях 
показано на рисунке 3. 
 
 
278 
 
  
Рис. 3. Время выполнения пакета 50000 запросов к классифицированному 
и неклассифицированному столбцам в 20 испытаниях  
 
При низкой загрузке – одном запросе раз в несколько миллисекунд – 
потеря времени составила около 1.6 мс (4%). Время выполнения одного запроса 
к классифицированному и неклассифицированному столбцам в 100 испытаниях 
показано на рисунке 4. Горизонтальными линями показаны средние значения. 
 
 
 
Рис. 4. Время выполнения одного запроса к классифицированному  
и неклассифицированному столбцам в 100 испытаниях 
 
Проведено 110 испытаний, для оценки влияния количества запросов на 
производительность. В каждом, проводились измерения среднего времени среди 
100 попыток выполнения пакета запросов поочередно для классифицированного 
и 
неклассифицированного 
столбца. 
Запросы 
в 
пакете 
отправлялись 
 
 
279 
одновременно, между пакетами был установлен таймаут в 200 миллисекунд. 
Каждый 
раз 
количество 
запросов 
увеличивалось 
на 
25. 
 
Потеря 
производительности оценивалась как процент разницы времени выполнения 
одинакового 
количества 
запросов 
к 
классифицированному 
и 
неклассифицированному столбцам, график этой зависимости в одном испытании 
приведен на рисунке 5. 
 
 
Рис. 5. График зависимости потери производительности от количества запросов 
к классифицированному и неклассифицированному столбцам в одном 
испытании 
 
Как видно из графика при увеличении количества запросов до 500 
увеличение времени выполнения пакета запросов растет на 15% – 20%.  
Также измерена потеря производительности в зависимости от количества 
используемых классифицированных столбцов в одном запросе. Проведено 4 
измерения, в первом запрос содержал 3 неклассифицированных столбца, во 
втором – 2 неклассифицированных и один классифицированный и так 
количество классифицированных увеличивалось до 3. В ходе измерений запросы 
выполнялись в 12 пакетах, в каждом пакете количество одновременных запросов 
увеличивалось на 50. График зависимости времени выполнения запросов от 
количества используемых классифицированных столбцов показан на рисунке 6. 
 
 
280 
 
Рис. 6. График зависимости времени выполнения пакета запросов от количества 
используемых в них классифицированных столбцов 
 
При 
включенном 
аудите 
скорость 
выполнения 
снижается 
при 
использовании хотя бы одного классифицированного столбца. Зависимости от 
количества используемых классифицированных столбцов выявлено не было. 
Ускорение восстановления баз данных 
В процессе обычного восстановления после сбоя система выполняет серию 
сканирований журнала транзакций и поэтому скорость напрямую зависела от 
количества изменений, выполненных транзакциями с момента самой ранней 
незавершенной транзакции или контрольной точки. При использовании 
ускоренного восстановления сканирование журнала начинается с последней 
контрольной точки вне зависимости от числа и длительности транзакций и 
количества внесенных изменений. Эта функция позволяет ограничить рост 
журнала транзакций [3]. 
В некоторых источниках [4] описывается, что при включении функции 
восстановления к строкам добавляется 14-байтовый указатель на старые данные, 
однако было обнаружено, что после включения для уже добавленных строк не 
происходит никаких изменений. Когда в строку таблицы вносятся изменения 
менее чем на 200 байт, предыдущая версия сохраняется внутри строки в виде 
дифференциальной копии, для экономии памяти. Но может привести и к 
обратному эффекту. Для демонстрации была создана таблица с пятью столбцами 
 
 
281 
и одной строкой. В первом столбце строки сохранено значение Field_1 и в 
последнем Field_*. Далее эти значения были изменены на Stolbec_1 и Field05. 
После этого было изучено содержимое памяти (рисунок 7).  На рисунке видно, 
что сохранились только два текстовых значения: “Field” и “_*”. Для хранения 
изменений 7 байт понадобилась запись 60 байт служебной информации, при 
этом, хранение полной копии потребовало бы только 37 байт.  
 
 
Рис. 7. Пример хранения изменений строки в памяти 
 
Когда изменяется более 200 байт, то версии и другая служебная 
информация записываются в хранилище версий. При этом в файловую группу со 
строками таблицы добавляется 14-битная информация о версии с номером 
транзакции. Если изменение меньше 200 байт, то в конце предыдущей версии 
дописывается дифференциальная копия.  
Информация о версии будет сохраняться до момента удаления или 
создания дифференциальной копии строки и ее последующего удаления. Полные 
копии из хранилища также как и дифференциальные удаляются, когда больше 
не потребуются. Однако, полные копии все еще остаются в самом файле 
хранилища, только со временем поверх них запишутся новые копии. Поэтому 
некоторое время в файле может сохраняться конфиденциальная информация, 
если она была отредактирована или удалена ранее. Если нежелательно допускать 
это, то необходимо или отключить ускоренное восстановление или время от 
времени 
провоцировать 
перезапись. 
Возможность 
работы 
функции 
 
 
282 
восстановления в другой файловой системе, где предусмотрено заполнение 
мусором таких областей в работе не рассматривалась. 
Оценка времени выполнения ускоренного восстановления и влияния 
на выполнение запросов 
Измерение времени восстановления базы данных с одной таблицей после 
сбоя проводилось путем изменения увеличивающегося числа случайно 
сгенерированных текстовых строк в таблицу с пятью текстовыми полями работа 
сервера неожиданно завершалась без фиксации транзакции и с помощью 
журнала 
просматривалось 
время 
восстановления. 
Сравнение 
времени 
восстановления базы данных после сбоя при ускорении восстановления и без 
ускорения показано на рисунке 8. 
 
 
Рис. 8. Сравнение времени восстановления базы данных после сбоя  
при ускоренном восстановлении и без 
 
Как 
видно 
из 
рисунка 
при 
включенной 
функции 
ускоренного 
восстановления время восстановления базы данных гораздо меньше, чем при 
выключенной, при работе с большим количеством строк. В случае небольшого 
числа строк ускоренное восстановление может занимать на несколько 
миллисекунд (до 30 мс) больше на одну транзакцию из-за длительного этапа 
анализа изменений. Поэтому, в случае если есть большое число небольших 
транзакций скорость работы может снизиться. 
Несмотря на то, что при включении функции ускоренного восстановления 
к новым строкам добавляется идентификатор транзакции, скорость их 
добавления не снижается. Для сравнения времени обновления строк таблицы при 
 
 
283 
включенном ускоренном восстановлении было проведено 90 испытаний, в 
каждом из которых добавлялось на 200 строк больше. Результат показан на 
рисунке 9. Потеря в скорости заметна из-за записи служебной информации. 
 
Рис. 9. Сравнение времени обновления строк таблицы при включенном 
ускоренном восстановлении 
Для измерения влияния ускоренного восстановления на скорость удаления 
данных было проведено 100 испытаний, в каждом из которых количество 
удаляемых строк увеличивалось на 200. 
 
 
Рис. 10. Сравнение скорости удаления 
В результате было обнаружено что ускоренное восстановление сильнее 
всего влияет на скорость удаления. Так, например при удалении 20000 строк 
скорость оказалась ниже в 3.5 раза. 
Ошибка выполнения при ускоренном восстановлении 
При выполнении следующей последовательности команд, возникает 
ошибка выполнения, приводящая к повреждению базы данных: включить 
функции ускоренного восстановления; начать транзакцию; изменить строки 
таблицы; 
отменить 
транзакцию; 
отключить 
функцию 
ускоренного 
 
 
284 
восстановления; начать транзакцию; запустить запрос на удаление ранее 
измененных строк из таблицы; отменить транзакцию. При изменении 1000 и 
более строк ошибка происходит всегда. Последовательность команд и 
сообщение об ошибке показаны на рисунке 11. 
 
 
Рис. 11. Последовательность команд, приводящая к возникновению ошибки  
После возникновения ошибки база данных оказывается в режиме 
Suspected, обращение к ней невозможно. Ошибка может вызвать переполнение 
оперативной памяти после перезагрузки MS SQL сервера, который попытается 
загрузить в нее все файлы базы данных, которые могут превышать ее размер из-
за чего может начать использоваться файл подкачки, что может замедлить 
работу системы, либо для других приложений не останется памяти. Причина 
заключается в том, что часть данных переносится из одной страницы на другую, 
и на предыдущую записывается ссылка на новую, однако записывается сразу 
несколько ссылок на одну и ту же запись. Содержимое страницы файла базы 
данных после возникновения ошибки показано на рисунке 12. 
 
Рис. 12. Содержимое страницы файла базы данных после ошибки 
 
 
285 
Как видно из рисунка обе 60 и 61 записи ссылаются на одну и туже запись 
с данными на странице 590. Для устранения ошибки база данных может быть 
восстановлена только из резервной копии. Средствами SQL-сервера по 
устранению ошибок базы данных исправить данную ошибку не получилось.  
Выводы 
Классификация данных полезна при изучении неизвестной базы данных с 
большим числом столбцов. Возможно создать пользовательские правила 
классификации. Но имеет несовершенный механизм работы. Функция 
классификации замедляет время обработки запросов до 17%, увеличивает объем 
метаданных, при этом не дает много больше информации аудита, возникает 
уязвимость обнаружения конфиденциальных данных по меткам. Поэтому 
необходимо заменять GUID типа информации в исходных и пользовательских 
шаблонах, а при отключении классификации и аудита вручную удалять метки из 
метаданных столбцов. Ускоренное восстановление полезно, при частых сбоях 
или отменах длительных транзакций, когда критически важно быстро 
восстановить работу системы, однако, его использование может оказаться 
неоправданным в случаях, когда происходят частые удаления строк. Возможна 
утечка конфиденциальной информации через не удаленные полные копии строк 
в хранилище версий. Была обнаружена ошибка в работе данной функции, 
приводящая к нарушению целостности базы данных. 
 СТАТЬЯ
Аннотация
. 
В 
данной 
статье 
описаны 
проведенные 
авторами 
эксперименты сравнения влияния технологии LUKS, LVM, VDO, GlusterFS на 
производительность системы для построения распределенного хранилища 
информации. Проанализированы полученные в ходе экспериментов результаты 
Ключевые слова: распределенная программно-определяемая система 
хранения данных, LUKS, VDO, LVM, GlusterFS. 
 
В существующей экономической ситуации гибкость ИТ-инфраструктуры 
предприятия имеет большое значение для эффективности бизнес-процессов. 
Современный ИТ-ориентированный бизнес ставит высокие требования к 
используемым системам хранения данных: отказоустойчивость, высокая 
производительность и оптимизация потребления свободного места. Крупный 
бизнес решает данные задачи с применением различных концепций и 
технологий, как например: программно-определяемое хранилище данных и 
гиперконвергетное решение в целом.  
Для малого и среднего бизнеса подобные целостные интегрированные 
решения являются дорогостоящим продуктом. Вопрос снижения стоимости 
владения программно-определяемым хранилищем рассматривался в [1]. Авторы 
предлагают сбалансированный подход к обеспечению отказоустойчивости 
данных через применение различных алгоритмов в рамках одной дисковой 
группы. Проблемы дедупликации исследуются в различных публикациях, 
например в [2]. Достигнутые автором результаты могут быть применены в 
ситуациях, когда присутствует определенное знание о природе применяемых 
данных.  
 
 
287 
Единственным свободным и открытым программно-определяемым 
хранилищем на данный момент является проект Ceph, который сложен в 
эксплуатации и требует узкоспециализированных квалифицированных кадров. 
Прочие свободные технологии ориентированы на решение конкретных отдельно 
взятых задач и не имеют явных механизмов взаимодействия между собой. 
В связи с чем было принято решение спроектировать функционально 
обобщенный аналог комплекса программно-определяемого хранилища данных 
для обучающей информационной системы на основе стека свободных 
технологий с учетом следующих требований: 
1. 
Сжатие данных 3:1. 
2. 
Большой объем скачиваемых данных. 
3. 
Обеспечение отказоустойчивости. 
Аналогичные работы проводились в [3], где авторы сделали упор на 
обеспечение точного разделения полномочий пользователей при доступе к 
хранилищу данных. Исследователи опирались на существующий стек 
свободных технологий и выполняли точечную доработку для обеспечения 
необходимой функциональности. Также следует отметить работу [4], в которой 
авторы решали схожие с поставленными в данной работе задачами, но 
ограничиваясь 
лишь 
вопросом 
снижения 
стоимости 
эксплуатации. 
В 
исследовании принималось во внимание лишь распределенное отказоустойчивое 
хранение без учета оптимизации использования данных и вопросов обеспечения 
конфиденциальности информации.  
Для решения выше поставленной цели – построения хранилища 
информации и проведения тестов на соответствие требованиям была 
спроектирована следующая инфраструктура (рис. 1): 
 Три сервера – реализуемое решение в области хранения. 
 Клиенты – виртуальные машины, развернутые на базе Google Cloud 
Platform с разным местоположением: двое – в Европе, двое – в Америке, также 
один клиент – аналогичная виртуальная машина в домашних условиях. 
 
 
288 
 
Рис. 1. Схема тестовой инфраструктуры 
 
Основная задача, решаемая с помощью обучающей информационной 
системы, – одновременное скачивание с помощью утилиты rsync несколькими 
клиентами 
с 
разных 
местоположений 
архива 
лабораторной 
работы, 
включающий в себя образы виртуальных машин и текстовые файлы по теме 
лабораторной работы. 
Для оценки потерь времени при скачивании файлов был проведен ряд 
экспериментов, в ходе которых фиксировалось среднее время получения архива 
и анализировалось, как та или иная технология влияла на данный показатель. 
На основании требований, выдвинутых системе хранения данных, было 
решено использовать следующий стек технологий: LUKS – шифрование дисков, 
LVM – управление логическими томами, VDO – дедупликация и сжатие данных, 
GlusterFS – распределенная файловая система. 
Целью первого эксперимента было снятие эталонных показателей работы 
системы 
для 
проведения 
дальнейших 
сравнений 
путем 
создания 
нераспределенного хранилища информации лишь на основе технологии LVM и 
VDO. Замеры производились в разных режимах работы утилиты rsync: без 
сжатия данных во время передачи и со сжатием. 
 
 
289 
По результатам (рис. 2) было выявлено, что сжатие самой утилиты rsync 
может значительно влиять на время скачивания файлов как в лучшую сторону, 
так и в худшую по причине низкой средней скорости передачи данных без 
сжатия в Америке по сравнению с Европой. 
 
Рис. 2. Результаты эксперимента – эталонное решение 
В ходе второго эксперимента была выдвинута гипотеза, что при внедрении 
LUKS дополнительная нагрузка на процессор будет несущественна. Таким 
образом, к эталонной модели была добавлена реализация шифрования данных на 
носителе с применением LUKS. Как видно по результатам (рис. 3) LUKS 
действительно не оказывает влияния на скорость скачивания файлов, данная 
технология не приводит к увеличению потока ввода\вывода. 
 
Рис. 3. Результаты эксперимента – добавление LUKS 
 
 
290 
При проведении следующего эксперимента проверялась гипотеза, что 
наличие сетевых обращений к другим хостам должно привести к снижению 
скорости, для чего на основе трех серверов была реализована распределенная 
файловая система GlusterFS без функции репликации (режим Distributed). 
По результатам тестов (рис. 4) удалось выявить, что использование 
GlusterFS без репликации не оказывает влияния на скорость скачивания файлов. 
Причиной такого поведения можно отметить следующие аспекты: 
1. Скорость передачи данных между серверами выше скорости между 
серверами и клиентами. 
2. GlusterFS имеет свои собственные модули для оптимизации 
производительности. 
 
Рис. 4. Результаты эксперимента – применение GlusterFS Distributed 
В 
ходе 
выполнения 
четвертого 
эксперимента 
проверялось, 
что 
дополнительные 
сетевые 
вызовы 
GlusterFS 
не 
окажут 
влияния 
на 
производительность бизнес-процесса при реализации отказоустойчивости 
системы. GlusterFS был перенастроен с функцией репликации (режим Replica), 
т. е. данные не распределялись последовательно по всем трем серверам, а 
дублировались. 
 
 
291 
Значения последнего эксперимента (рис. 5) показывают отсутствие 
ухудшений 
при 
использовании 
распределенной 
файловой 
системы 
с 
репликацией, причинами чего служат следующие аспекты спроектированной 
инфраструктуры: 
1. 
Данные для скачивания располагаются локально на серверах. 
2. 
Файлы являются большими по объему занимаемой памяти. 
3. 
GlusterFS имеет свой собственные модули для оптимизации. 
4. 
VDO сокращает ввод\вывод.  
 
 
Рис. 5. Результаты эксперимента – применение GlusterFS Replica 
 
Лимитирующим фактором в данной ситуации являются внутренние 
правила управления трафиком Google Cloud Platform, что доказывает проведение 
теста на инфраструктуре, включающей 8 виртуальных машин на базе Google 
Cloud Platform. Результаты (рис. 6) показали, что такое увеличение 
незначительно сказалось на производительности. Тем не менее виден потенциал 
для дальнейшего наращивания количества одновременно обслуживаемых 
виртуальных машин. 
 
 
292 
 
Рис. 6. Результаты эксперимента – использование 8 виртуальных машин 
 
В результате исследования был утвержден стек технологий для построения 
функционально обобщенного аналога комплекса программно-определяемого 
хранилища данных: LUKS, LVM, VDO, GlusterFS Replica. В дальнейшем 
планируется определить предел одновременно обслуживаемых виртуальных 
машин без потери производительности, выявить сбои инфраструктуры, которые 
она способна пережить без остановки бизнес-процессов, и сформировать 
инструментарий восстановления после сбоев для реализованных узлов системы 
хранения. 
Благодарности 
Исследование выполнено при финансовой поддержке РФФИ в рамках 
научного проекта № 20-47-720006. 
 
 СТАТЬЯ
Аннотация
. В статье обсуждаются инструменты bcryptjs и Crypto модулей 
Node.js, среды выполнения JavaScript, используемые для защиты данных 
пользователей 
платформы-агрегатора 
экоактивистов 
и 
представителей 
экобизнеса «GreenNetworking». Приведено обоснование стойкости выбранных 
криптографических методов. Представлена программная реализация работы с 
данными инструментами для хеширования паролей и шифрования сообщений. 
Ключевые слова: безопасность, защита данных, алгоритмы блочного 
шифрования, AES-256, Blowfish, bcrypt, Crypto, Node.js. 
Введение 
Платформа «GreenNetworking» призвана объединять экоактивистов, 
представителей бизнеса и власти. В частности, функционал платформы 
предполагает публикацию объявлений о поиске эковолонтеров, инвесторов 
экопроектов, распространение информации об экологических практиках  
и способах уменьшения экологического следа при производстве и потреблении. 
Пользователи платформы имеют возможность общаться друг с другом  
в защищенных личных чатах и публиковать информацию о своих проектах  
в личных кабинетах.   
Несанкционированный доступ к переписке и данным пользователей может 
послужить причиной финансового ущерба или кражи интеллектуальной 
собственности. Таким образом задача обеспечения защищенности чатов  
 
 
295 
и личных кабинетов пользователей платформы «GreenNetworking» является 
актуальной. 
Для создания защищенных чатов и личных кабинетов пользователей 
необходимо использовать надежные алгоритмы шифрования и хеш-функции. 
Реализация таких алгоритмов и функций вручную довольно трудная задача, 
поэтому на Node.js [1] существуют специальные модули, которые позволяют 
пользоваться реализованными криптографическими алгоритмами и хеш-
функциями. Node.js – среда выполнения JavaScript, построенная на движке 
JavaScript V8 Chrome, позволяющая расширить возможности языка JavaScript. 
Модули bcryptjs [2] и Crypto [3] платформы Node.js предоставляют 
широкий инструментарий для обеспечения секретности и безопасности 
хранения паролей и переписок пользователей. Модуль bcryptjs является 
реализацией адаптивной криптографической хеш-функции формирования 
ключа, называемой bcrypt, которая используется для хеширования паролей и 
последующей аутентификации пользователей. В модуле Crypto представлен 
широкий набор алгоритмов шифрования. Для надежного шифрования личных 
сообщений пользователей используется симметричный алгоритм блочного 
шифрования Rijndael с длиной шифр ключа 256 бит, более известный как AES. 
Данная хеш-функция и алгоритм шифрования выбраны не случайно, так как они 
являются одними из самых надежных криптографических алгоритмов. 
Обоснование стойкости bcrypt 
Bcrypt 
[4] 
– 
это 
адаптивная 
криптографическая 
хеш-функция 
формирования ключа, создателями которой являются Нильс Провос и Дэвид 
Мазьер. Данная хэш-функция основана на криптографическом алгоритме 
Blowfish[5], который реализует блочное симметричное шифрование с 
переменной длиной ключа. Bcrypt использует «соль» для предотвращения атак с 
помощью радужных таблиц. Более того, так как функция является адаптивной, 
то время ее работы легко настраивается, и при желании замедляется для 
усложнения атаки грубым перебором. 
 
 
296 
Шифр Blowfish – это быстроработающий алгоритм блочного шифрования, 
который выделяется среди многих алгоритмов своей вычислительно сложной 
фазой подготовки ключа шифрования: для каждого нового ключа требуется 
время, сравнимое с шифрованием примерно 4 килобайт текста, что на фоне 
других блочных шифров является очень медленной операцией. Фаза подготовки 
начинается с подключей в стандартном состоянии. Затем это состояние 
применяется для выполнения шифрования блока с использованием части ключа, 
а результат шифрования – для замены части подключей. Вслед за этим, Blowfish 
оперирует измененным состоянием для шифрования другой части ключа и 
применяет результат для замены еще одной части подключей. Оперируя 
прогрессивно изменяемым состоянием для хеширования ключа и замены битов 
состояния, он действует до тех пор, пока не будут созданы все подключи. 
Создатели хэш-функции bcrypt воспользовались этой особенностью 
алгоритма и решили сделать ее сложнее. Они разработали новый алгоритм 
подготовки ключей для Blowfish, назвав его «Eksblowfish» [4]. В нем существует 
несколько раундов, в которых применяется стандартный алгоритм Blowfish для 
создания ключа, в котором возможно использование «соли» и пароля в качестве 
ключа, причем каждый раунд начинается с состоянием подключей из 
предыдущего раунда. В теории этот алгоритм не сильнее стандартного 
алгоритма расширения ключа Blowfish, но количество раундов смены ключей 
можно настроить; поэтому этот процесс можно сделать сколь угодно 
медленным, что помогает предотвратить атаки методом перебора хэша или 
«соли». 
Учитывая все вышесказанное, опишем принцип работы bcrypt, который 
представлен на рисунке 1.  
 
 
297 
 
Рис. 1. Алгоритм работы bcrypt, основанный на eksblowfish 
 
Работу хэш-функции можно разделить на две фазы:  
1. 
Вызывается функция EksBlowfishSetup с желаемой степенью 
сложности, «солью» и паролем, чтобы инициализировать состояние Eksblowfish. 
Далее, большая часть времени работы bcrypt тратится на развертывание ключа. 
Пароль пользователя используется как первичный ключ; 
2. 
192-битное значение фразы “OrpheanBeholderScryDoubt” шифруется 
64 раза используя Eksblowfish в режиме простой замены. 
В результате работы функции получается конкатенация степени 
сложности, 
128-битовой 
«соли» 
и 
результата 
цикла 
шифрования. 
Результирующая хеш-строка имеет вид, представленный на рисунке 2. 
 
 
Рис. 2. Результирующая хеш-строка blowfish 
 
Можно заключить что bcrypt гарантирует безопасность хранения пароля, 
так как ее результат устойчив как к атаке нахождения прообраза, так и к атаке с 
помощью радужных таблиц. Вдобавок, безопасность хешированного пароля 
обеспечивается тем, что сложность функции адаптивна, в результате чего можно 
замедлить атаку простым перебором даже при большой вычислительной 
мощности злоумышленника [6]. 
 
 
298 
Обоснование стойкости AES-256 
AES – это симметричный алгоритм блочного шифрования с размером 
блока 128 бит и длиной ключа 128/192/256 бит, создателями которого являются 
Винсент 
Рэймен 
и 
Йоан 
Даймен. 
Алгоритм 
тщательно 
изучен 
криптоаналитиками и широко используется на данный момент. Ярким примером 
использования этого алгоритма является мессенджер Telegram, в котором 
данный алгоритм применяется для шифрования сообщений при их передаче в 
сеть [7]. 
Для понимания алгоритма шифрования AES, необходимо ознакомиться с 
определениями вспомогательных процедур, которые представлены в таблице 1 
[8]. 
Таблица 1. Определения вспомогательных процедур AES 
 
В алгоритме AES блок данных представляется в виде двумерного массива 
байт, размером 4x4. Все операции в алгоритме совершаются над отдельными 
байтами массива, а также над независимыми столбцами и строками. Процедуру 
трансформации данных в алгоритме принято называть раундом, количество 
раундов меняется в зависимости от длины ключа, и принимает значение равное 
10, 12 или 14. 
SubBytes()  
Трансформации при шифровании, которые обрабатывают 
состояние, используя нелинейную таблицу замещения 
байтов (S-box), применяя ее независимо к каждому байту 
состояния. 
ShiftRows()  
Трансформации при шифровании, которые обрабатывают 
состояние, циклически смещая последние три строки 
состояния на разное количество байт. 
MixColumns()  
Трансформация при шифровании, которая берет все столбцы 
состояния и смешивает их данные (независимо друг от 
друга), чтобы получить новые столбцы. 
AddRoundKey()  
Трансформация при шифровании, при которой к раундовому 
ключу и состоянию применяется операция XOR. Длина 
раундового ключа равна размеру состояния. 
 
 
299 
В каждом раунде алгоритма над состоянием выполняются преобразования 
в следующем порядке: 
1. Процедура SubBytes, представленная на рисунке 3; 
 
 
 
Рис. 3. Визуализация процедуры SubBytes 
2. Процедура ShiftRows, представленная на рисунке 4; 
 
 
 
Рис. 4. Визуализация процедуры ShiftRows 
3. 
Процедура MixColumns, представленная на рисунке 5. Умножение 
происходит на фиксированный полином 3x3 + x2 + x + 2 и выполняется по 
модулю x4 + 1; 
 
 
300 
 
Рис. 5. Визуализация процедуры MixColumns 
4. Процедура AddRoundKey, представленная на рисунке 6. 
 
 
Рис. 6. Визуализация процедуры AddRoundKey 
 
 
301 
Важно заметить, что перед первым раундом алгоритма выполняется 
процедура AddRoundKey для наложения первых четырех слов ключа на 
открытый текст, а в последнем раунде не выполняется процедура MixColumns. 
Криптостойкость алгоритма была проверена более 80 атаками на шифр 
AES-128, которые допускают обобщение для AES-256 [9]. Также, были 
произведены успешные атаки на более слабые версии AES, которые требуют 
большого количества ресурсов, тем самым доказывая безопасность AES-256 
[10, 11]. В настоящее время самыми сильными атаками являются атаки типа 
«Биклик» [12]. Атака по сторонним каналам также представляет угрозу 
стойкости шифра, несмотря на то что она не связана с математическими 
особенностями шифра. 
Из всего вышесказанного можно заявить, что AES-256 является надежным, 
проверенным временем алгоритмом шифрования и подходит для шифрования 
сообщений пользователей. 
Программная реализация  
Реализация криптографических алгоритмов продемонстрирована на 
Node.js так как он позволяет удобно работать с JavaScript для создания серверной 
части приложений, где обычно и происходят операции по защите данных 
пользователей. Работа с bcrypt на Node.js достаточно проста и приведена на 
рисунке 7. 
 
 
Рис.7. Хеширование пароля с помощью bcrypt на Node.js 
 
 
302 
Для начала работы с bcrypt требуется подключить модуль bcryptjs. Далее, 
мы можем использовать метод hash для автоматической генерации «соли» и 
последующего хеширования пароля пользователя.  «Соль» генерируется в 
зависимости от степени сложности и записывается в переменную saltRounds. 
Пароль пользователя в примере записан в переменную plainTextPassword. 
Результат хеширования представлен на рисунке 8. 
 
 
 
Рис. 8. Результат хеширования пароля пользователя 
 
Программный код верификации пароля пользователя с хранящимся в базе 
данных хэшем представлен на рисунке 9. 
 
 
 
Рис. 9. Процедура верификации пароля пользователя 
 
Для проверки идентичности пароля с его хэшем используется метод 
compare, который вернет истину если пароли совпадают и ложь иначе. В 
результате выполнения кода, представленного выше, метод вернул нам значение 
истины, что является верным результатом. 
Для работы с AES-256 на Node.js необходим модуль crypto. Программная 
реализация работы с AES-256 показана на рисунке 10. 
 
 
303 
 
 
Рис. 10. Шифрование сообщений с помощью AES-256 на Node.js 
Метод createCipher модуля crypto принимает на вход название алгоритма и 
ключ шифрования. Для наглядности, ключ шифрования и сообщение 
пользователя были вынесены в константы cipherKey и messageToEncrypt 
соответственно. С помощью этого метода сообщение пользователя шифруется и 
далее переводится в 16-ричную форму. Так же, для демонстрации работы 
модуля, представлена расшифровка зашифрованного сообщения. Результат 
работы вышеприведенного кода показан на рисунке 11. 
 
 
 
Рис. 11. Результат шифрования и расшифровки сообщения 
Заключение 
Представлено и схематично проиллюстрировано описание работы 
алгоритмов хэш-функции bcrypt и блочного шифра AES. Приведено обоснование 
надежности выбранных криптографических алгоритмов для хеширования 
паролей и шифрования сообщений пользователей. Продемонстрирована 
программная реализация и работоспособность хеш-функции и алгоритма 
шифрования bcryptjs и Crypto модулей Node.js на платформе «GreenNetworking». 
 
 
 
304 
 СТАТЬЯ
Аннотация
. В статье рассмотрен процесс проектирования текстового 
категоризатора DLP-системы, основанном на машинном обучении. 
Ключевые слова: машинное обучение, анализ текстов на естественных 
языках, DLP-системы, утечки данных, логистическая регрессия. 
Введение  
В современном постоянно подвергающемся влиянию цифровизации мире 
ежегодно 
растет 
количество 
утечек 
информации, 
в 
том 
числе 
конфиденциальной. Большинство этих утечек являются внутренними, что 
говорит о переносе акцента в области информационной безопасности с защиты 
от внешних угроз к контролю собственных сотрудников, которые имеют прямой 
доступ к информационным системам и хранилищам данных. Также, как можно 
увидеть на рисунке 1, наблюдается значительное увеличение объема 
скомпрометированных персональных данных и финансовой информации в 
последние годы [1]. 
 
Рис. 1. Объем данных, скомпрометированных в результате внутренних утечек 
(по данным InfoWatch) 
 
 
306 
Одним из методов, предупреждающим такие неправомерные действия, с 
использованием санкционированного доступа, являются Data Loss Prevention-
системы, или коротко DLP. Суть их работы состоит в анализе внутреннего 
трафика компании, отслеживании активности работников и их действий на 
рабочем месте, чтобы в случае утечки, можно было оперативно реагировать и 
осуществлять работу по противодействию распространению данных. 
Исследовательский интерес заключается как раз в отслеживании трафика, 
а именно, сообщений, которые отправляют работники, с использованием 
корпоративной электронной почты. В информации, полученной из этих 
материалов, могут содержаться данные, позволяющие прямо или косвенно 
определить, имеют ли действия сотрудника корыстный умысел. Дальнейшая 
реакция по противодействию, действительно, может помочь избежать 
негативных последствий. 
В рамках данной статьи будет рассматриваться проектирование 
классификатора, работающего с сообщениями корпоративной электронной 
почты. Основная задача классификатора – предоставление данных о 
потенциальных утечках информации, своего рода попытка предсказать такие 
утечки. Полученные результаты будут использоваться в других модулях DLP-
системы. Например, если сообщения сотрудника были опознаны системой как 
потенциально опасные, то системе следует отметить такого пользователя, чтобы 
в дальнейшем следить за отклонениями в модели его поведения. 
Категоризация сообщений корпоративной почты 
Категоризатор 
работает 
с 
семантическим 
анализом 
информации, 
содержащейся в текстах сообщений. Например, если сообщения носят 
агрессивный характер в адрес компании или начальства, то это говорит о 
сильном недовольстве этого работника, что, в свою очередь, может 
сигнализировать о его желании в дальнейшем уволиться или нанести вред 
компании. В этом случае необходимо внимательно относиться к файлам и 
документам, которые данный сотрудник может отправлять. Аналогичные 
действия стоит предпринимать, если по семантике текстов можно понять, что 
 
 
307 
сотрудник уже ищет новую работу (может быть, даже направляет резюме) или 
обсуждает в переписке финансовые вопросы, что может говорить о возможных 
сделках по продаже разработок или персональных данных клиентов и 
сотрудников. 
То есть, в данной части модуля будет классифицироваться информация по 
угрозе, которую несет то или иное сообщение. Мы условно выделили их 
следующим образом: 
 «Агрессивные высказывания» – тексты, семантика которых имеет ярко 
выраженный негативный эмоциональный окрас; 
 «Поиск другой работы» – сообщения, которые могут указывать на 
планы перехода сотрудником на другое место работы; 
 «Обсуждение финансовых вопросов» – письма, содержащие в себе 
решение финансовых вопросов, которые могут относиться к продаже данных (но 
нужно обязательно учитывать специфику работы сотрудника, отдела или даже 
организации, так как функционирование такой категории проверки текстов 
сообщений, поступающих, например, из бухгалтерии будут приводить к 
ошибкам второго рода); 
 «Стандартные сообщения» – сообщения, написанные в официально-
деловом стиле, не несущих угроз, описанных выше; 
 «Бессмысленные сообщения» – которые могут оказаться некоторой 
шифровкой, используемой для осуществления корыстных целей. 
Несмотря на то, что с точки зрения функционирования DLP-системы 
необходимости в настолько подробной категоризации нет (важно лишь то, 
представляет ли сообщение угрозу или нет), было решено оставить категории 
как есть, не объединяя их, так как такое решение позволит исключать 
определенные категории с целью снижения количества ошибок второго рода и 
для 
осуществления 
более 
эффективного 
расследования 
инцидентов 
информационной безопасности. Таким образом, важным аспектом при 
разделении на данные категории является условие их функциональности 
(возможность убрать определенные категории для определенных отделов). 
 
 
308 
Авторами статьи также была проведена работа по категоризации 
семантики текстов комментариев в социальных сетях с применением модели 
логистической регрессии с использованием алгоритма стохастического 
градиентного спуска. Результаты работы легли в основу данного исследования: 
был разработан категоризатор, указывающий насколько тот или иной текст 
комментария относится к определенной категории. Категории, по которым 
классифицировались 
тексты, 
а 
также 
процесс 
работы 
категоризатора 
продемонстрированы на рисунке 2. 
 
Рис. 2. Пример работы категоризатора 
 
Эта же схема будет применяться и в рамках разработки текущего 
прототипа DLP-системы, как наиболее качественный из испробованных и 
проанализированных нами методов. 
Для правильного распределения текстов, поступающих в категоризатор, по 
категориям, были выделены следующие методы предобработки: 
 
очистка текста от стоп-слов;  
 
приведение текста к нормальной форме; 
 
векторизация текста с использованием хеширования. 
 
 
 
309 
Выбор модели машинного обучения 
Модели машинного обучения можно разделить на два вида [2]: модели 
обучения с учителем и обучения без учителя. Для категоризации было решено 
применить первый вид моделей, так как категории заранее определены. 
К моделям обучения с учителем относятся: 
1. Скрытая Марковская модель (HMM) 
2. Условные случайные поля (CRF) 
3. Maximum Entropy (MaxEnt) 
4. Модель опорных векторов (SVM) 
5. Деревья решений (DT) 
6. Наивный байесовский алгоритм 
7. Deep learning 
8. Логистическая регрессия 
Для реализации поставленных задач из всех вышеназванных моделей была 
выбрана модель логистической регрессии с использованием алгоритма 
стохастического градиентного спуска. Данная модель характерна тем, что 
позволяет прогнозировать вероятность возникновения события путем его 
сравнения с логистической кривой. Пример графика логистической кривой и 
процесс ее корректировки новыми данными можно увидеть на рисунке 3. Эта 
особенность полезна при категоризации текстов, поскольку позволяет 
определить принадлежность сообщения к тому или иному классу в процентном 
соотношении. Модель логистической регрессии наиболее популярна при 
классификации данных из-за своей универсальности и легкости трактования [3]. 
Алгоритм стохастического градиентного спуска, в свою очередь, 
позволяет выполнять корректировку модели, используя новые данные. Это 
позволяет 
осуществлять 
более 
гибкую 
настройку 
категоризатора 
при 
возникновении ошибок первого и второго порядка. 
 
 
 
310 
 
Рис. 3. График логистической функции 
 
Заключение 
Таким образом, в данной статье приведены основные аспекты разработки 
категоризатора 
для 
экспериментального 
прототипа 
DLP-системы. 
Был 
рассмотрен поэтапный процесс для проектирования такого продукта: выделены 
необходимые шаги по предобработке анализируемых текстов; обозначены 
категории, по которым они будут делиться по результату семантического 
анализа; выбрана модель машинного обучения и оптимальный алгоритм для 
корректировки модели. 
Система, реализованная с учетом вышеуказанных аспектов, позволит не 
просто выявлять факт утечки, а предсказывать возможность ее совершения 
пользователями, которые пишут сообщения, относящиеся к потенциально 
опасным категориям. 
 
 
 
311 
 СТАТЬЯ
Аннотация
. 
В 
статье 
рассматриваются 
возможности 
самомодифицирующегося кода и виды вирусов, принцип работы которых 
основан на нем, а также методы защиты от данных вирусов. 
Ключевые слова: самомодифицирующийся код, полиморфные вирусы, 
метаморфные вирусы, проактивная защита. 
Введение 
Согласно 
исследованию 
международной 
ИТ-компании 
Positive 
Technologies [1], зачастую хакеры используют для реализации и сокрытия атак 
инструменты, основанные на самомодифицирующемся коде. 
Целью 
работы 
является 
исследование 
возможностей 
самомодифицирующегося кода в области информационной безопасности. 
В статье рассмотрен самомодифицирующийся код и сферы его 
применения; вирусы и пакеры, основывающиеся на нем, а также способы защиты 
от них. 
Самомодифицирующийся код 
Самомодифицирующийся код – возможность программы создавать, 
изменять или удалять части своего кода во время выполнения. Обычно 
применение данной возможности используется в приложениях, написанных для 
работы с процессорами, которые не разделяют память для кода и память для 
данных. Такая архитектура применяется в процессорах с архитектурой фон 
Неймана. 
Главное 
преимущества 
использования 
самомодификации 
– 
возможность избежать ветвления программы из-за большого количества 
 
 
313 
проверок условий и установки различных флагов состояний программы. Термин 
применим только к коду, который изменяет себя по заранее продуманному 
алгоритму, а не в результате ошибки, например, переполнения стека (Stack 
Overflow) [2]. 
Метод самомодификации делится на 2 типа в зависимости от времени ее 
проведения: 
1) во время инициализации – модификация выполняется один раз перед 
запуском модифицируемого кода или при распаковке из контейнера; 
2) во время исполнения – модификация выполняется непосредственно во 
время работы программы. 
В большинстве случаев изменяется машинный код программы. Создаются 
новые инструкции и вставляются в код вместо старых. Например, безусловный 
переход «JMP» заменяет собой условный переход «JZ». Также в архитектурах 
IBM/360 и Z/Architecture существует способ модификации с использованием 
стандартной инструкции «EX». 
Метод самомодификации используется: 
1) для препятствования исследования кода (полиморфные вирусы, 
метаморфные вирусы, пакеры и т. д.); 
2) для повышения производительности программы; 
3) для добавления отладочной функциональности; 
4) для отключения частей ядра ОС, не используемых в данном аппаратном 
обеспечении; 
5) для препятствования обратному проектированию кода с использованием 
отладчика; 
6) для оптимизации кода, зависящего от состояния. 
В интерпретируемых языках отсутствует возможность напрямую изменять 
существующий код, однако возможно создавать новый код во время исполнения 
программы, а также выполнять его используя методы языка. 
Модификация также возможна за счет изменения указателя на 
вызываемую функцию во время работы программы. 
 
 
314 
Возможность самомодификации программы во время исполнения кода 
позволяет 
рассматривать 
программу, 
как 
виртуальную 
машину. 
Метапрограммирование позволяет перенести функции самомодификации в 
высокоуровневые языки, изменяя не непосредственно машинный код, а 
конструкции языка. 
Выделяют несколько основных методов реализации: 
● гомоиконность – код и инструкции по изменению кода основываются 
на одном синтаксисе. 
● интроспекция – представление внутренних типов и структур языка в 
виде встроенных объектов, доступных для использования [3]; 
● выполнение 
произвольного 
кода, 
содержащегося 
в 
строковой 
переменной. Существует в большинстве интерпретируемых языков, как важная 
их часть. 
Листинг 1. Код без применения самомодификации 
for i in range(N): 
    if should_increase is True: 
        value = increase(value) 
    else: 
        value = decrease(value) 
    process(value) 
    if value > 30: 
        should_increase = False 
    elif value < 10: 
        should_increase = True 
Листинг 2. Код с применением самомодификации 
for i in range(N): 
    value = change(value) 
    process(value) 
    if value > 30: 
        change = decrease 
    elif value < 10: 
        change = increase 
 
 
315 
Из данных примеров (листинги 1 и 2) можно установить, что 
самомодификация позволяет сократить количество кода, а также время его 
выполнения за счет пропуска проверки флага условия. 
Полиморфные вирусы 
Полиморфный вирус – это вирус, который шифрует себя, используя 
случайные пароли и различные способы шифрования; при заражении файлов, 
системных областей на диске изменяющий свой собственный код. 
Вирус-полиморфик не содержит ни единого постоянного фрагмента кода. 
Благодаря шифрованию основного тела вируса и значительного изменения от 
одной копии к другой модуля-расшифровщика, для двух образцов одного и того 
же вируса совпадения будут отсутствовать. 
Могут использоваться разнотипные методы шифрования [4], но чаще всего 
существует отдельная зеркальная пара для каждой операции. Это очень просто 
реализовать в ассемблере, где таких пар может быть много (например, 
ROL/ROR). Чрезвычайно важная особенность полиморфного вируса связана с 
тем, что вирус содержит специальные операнды, функции и процедуры, которые 
добавляются исключительно для становления кода более запутанным. 
Полиморфный вирус нередко включает код, выполняемый в зависимости 
от конкретной ситуации. Так, при обнаружении вируса он может вызвать 
процедуру самоуничтожения как себя самого (непоправимая модификация 
кода), так и системы (массовое заражение системных файлов без возможности 
восстановления). 
Первый в истории вирус-полиморфик, Chameleon, добавлял свой код в 
конец COM-файлов, используя два алгоритма шифрования. Один, в зависимости 
от значения ключа, шифровал тело по таймеру, а второй затруднял обнаружение 
вируса с помощью динамического кодирования. 
Mutation Engine – первый генератор полиморфных вирусов для MS-DOS. 
Крайне сложен: в полиморфном декодере в любом количестве и порядке 
используются команды ROL, ROR, ADD, XOR, SUB. Больше половины 
инструкций 8086 можно использовать в командах для изменения параметров 
 
 
316 
шифрования, и, кроме того, можно использовать любые возможные способы 
адресации данных. В результате копии одного и того же вируса, зашифрованные 
с помощью MtE, при сопоставлении не совпадут ни одним байтом. 
Создание MtE вскоре привело к появлению ряда других полиморфных 
генераторов, которые стали применять зеркальные функции, что значительно 
затруднило обнаружение вируса. Классические антивирусные базы и методы 
детектирования практически не дают желаемого эффекта при обнаружении 
вирусов-полиморфиков. Для их обнаружения необходимо совместить методы 
эвристического анализа и эмуляции. 
Метаморфные вирусы 
Метаморфный вирус – это вирус, который способен создавать новые 
копии, используя свою способность изменять, переводить и редактировать 
собственный код. 
В метаморфных вирусах помимо декодера мутирует и весь исполняемый 
код, при этом за счет мутации отпадает необходимость их шифрования. В 
метаморфных вирусах неизменными являются только данные, которые при этом 
остается возможным замаскировать или сокрыть. В памяти не будет 
формироваться ничего, что оставалось бы постоянным от одного образца вируса 
к другому, поэтому детектировать метаморфный код с помощью метода 
эмуляции невозможно. 
С точки зрения реализации существует два главных подхода к технологии 
мутации вирусов [5]: 
● 
код вируса каждый раз «переписывается» с использованием 
инструкций фиксированной длины команд или встроенного дизассемблера, 
возвращающего как минимум длину инструкции; 
● 
новый код создается каждый раз из определенного «прототипа», 
который хранится в зашифрованном виде. 
Одна из существующих технологий трансформации метаморфных вирусов 
связана со вставкой и устранением из кода «мусора», что не воздействует на 
работу программы, но при этом затрудняет анализ больших блоков кода. 
 
 
317 
Иной 
способ 
трансформации 
метаморфных 
вирусов 
основан 
на 
воздействии 
на 
стандартные 
инструкции 
на 
уровне 
кода 
операции, 
подразумевающим переключение между несколькими отличающимися друг от 
друга кодами, выполняющими одинаковые функции. 
Сложнейшей из представленных трансформацией метаморфного вируса 
представляется замена частей кода на функционально-эквивалентные. Для 
примера рассмотрим умножение числа x на три, которое возможно выразить как 
«x*3». Но альтернативным его представлением его можно назвать сумму трех x: 
«x+x+x». И первое, и второе выражения дают одинаковый результат, однако их 
внешнее представление отличается. 
Крипторы 
Создавать 
новые 
инструменты 
для 
каждой 
атаки 
слишком 
ресурсозатратно, 
поэтому 
многие 
группировки 
хакеров 
используют 
разработанное ПО несколько раз, что приводит к его обнаружению различными 
антивирусными компаниями, что в следствие снижает его эффективность его 
использования. 
Для решения данной проблемы хакеры применяют специализированные 
инструменты – «крипторы», предназначенные для сокрытия вирусного ПО от 
детектирования антивирусами. Они упаковывают и шифруют код, а также 
изменяют его посредством мутаций. 
До конца 2020 года регулярно проводились фишинговые рассылки, 
содержащие RTM (рис. 1). Этот процесс, по всей видимости, происходил 
автоматически. 
Файлы, содержащиеся в письмах, сильно отличались в разных письмах 
(рис. 2), однако полезная нагрузка вредоносного ПО оставалась почти 
идентичной. 
 
 
 
318 
 
Рис. 1. Фишинговое письмо RTM, декабрь 2020 
 
Рис. 2. Пример архива RTM 
Исследование образцов, которые были упакованы более новыми 
алгоритмами, позволило обнаружить большое количество другого вирусного 
ПО, защищенного таким же способом. Использование похожих или аналогичных 
способов упаковки вредоносного ПО позволяет говорить о распространении 
сервисов типа Packer-as-a-Service, которые предоставляют услуги упаковки 
программного кода. 
Проактивные методы антивирусной защиты 
Проактивные методы защиты – методы защиты, направленные на 
предотвращение заражения, а не на поиск уже известных вирусов в системе. Они 
появились достаточно давно и начали развиваться совместно с реактивными 
методами, однако изначально они были слишком сложными в использовании, 
 
 
319 
поэтому их разработка была остановлена. Позже из-за распространения вирусов 
стало понятно, что только сигнатурных методов защиты недостаточно и сегмент 
проактивной защиты стал снова развиваться. В настоящий момент проактивные 
решения могут быть встраиваемыми в существующее антивирусное ПО или 
быть 
самостоятельным 
ПО, 
которое 
комбинирует 
различные 
методы 
проактивной защиты, эффективные против большого количества угроз.  
Существуют следующие технологии проактивной защиты [6]. 
● Эвристический анализ – технология, позволяющая проводить анализ 
кода программы и выявлять потенциально вредоносные участки. 
● Эмуляция кода – технология, позволяющая запускать программу в 
виртуальном окружении. Действия вредоносной программы не способны 
навредить системе, однако будут обнаружены и логированы. 
● Анализ поведения – технология, которая перехватывает, обрабатывает 
и отслеживает системные события, также способна оценивать цепочки событий, 
вызываемых программами. 
● Песочница 
– 
технология, 
которая 
ограничивает 
возможности 
исследуемой программы, чтобы она не могла повлиять на систему. Программы 
запускаются в изолированной среде, которая не дает доступ к важным 
системным функциям. 
● Виртуализация рабочего приложения – технология, которая запросы на 
запись от приложения и записывает данные на виртуальный жесткий диск, 
очистка которого происходит при выключении питания компьютера. 
 СТАТЬЯ
Аннотация
. В данной статье обозначены основные проблемы адаптации 
студентов. Представлены результаты опроса среди студентов кафедры 
информационной безопасности ТюмГУ на предмет их вовлеченности в сферу 
профессиональной деятельности. Проанализирована степень участия вузов РФ  
в мероприятиях по информационной безопасности. Авторами сделан вывод  
о необходимости создания комплексной системы адаптации и обучения 
студентов информационной безопасности. 
Ключевые слова: информационная безопасность, адаптация студентов, 
обучение, CTF. 
Согласно исследованиям отечественных ученых, существует ряд проблем, 
связанных с адаптацией студентов младших курсов к обучению в вузе. Согласно 
исследованию Шолоховой Г.П. и Чиковой И.П. студенты первых курсов 
испытывают трудности приспособления к новым формам обучения, а более 
свободная по сравнению со школой организация учебного процесса приводит  
к низкому уровню профессионального самоопределения [1]. О.А. Молокова  
в своей работе [2] определяет одной из проблем адаптации трудности общения 
студентов с преподавателями университета, что влечет за собой низкую 
осведомленность об их научной и внеучебной деятельности, деятельности 
кафедр, на которых обучаются студенты, и трудности разрешения возникающих 
проблем в обучении. Авторами исследования [3] также обозначены трудности в 
общении студентов со сверстниками, из чего вытекает сложность установления 
постоянных социальных связей, которые бы позволили повысить уровень 
адаптации. 
 
 
322 
В соответствии со статистикой ВНИИ Труда обеспеченность кадрами в 
информационной безопасности составляет лишь половину от потребностей 
Российской Федерации [4], что говорит о востребованности в специалистах 
данного профиля и их дефиците на рынке труда.  
В связи с вышеописанными проблемами мы решили оценить уровень 
заинтересованности в работе по специальности студентов 3-5 курса кафедры 
информационной безопасности Тюменского государственного университета. 
Для этого нами был разработан и проведен специальный опрос среди указанной 
группы студентов. Количество человек, принявших участие в исследовании – 98 
студентов, что составило 52% от общего числа студентов, обучающихся на 3-5 
курсах по специальностям “Компьютерная безопасность”, “Информационная 
безопасность автоматизированных систем” и бакалавриата “Информационная 
безопасность” ТюмГУ. 
Таблица 1. Период начала изучения информационной безопасности 
№ п/п 
Варианты ответов 
Всего, % 
1. 
В школе 
3,1% 
2. 
На 1 курсе 
30,6% 
3. 
На 2 курсе 
12,2% 
4. 
На 3 курсе 
45,9% 
5. 
На 4 курсе 
2,0% 
6. 
На 5 курсе 
2,0% 
7. 
Меня не интересует ИБ 
4,1% 
Итого
100,0% 
В результате исследования нами выявлено, что большинство студентов 
(45,9%) начали изучать информационную безопасность только на третьем курсе. 
После поступления в вуз на первом курсе начали свое знакомство  
с информационной безопасностью 30,6% студентов, на втором – 12,2%.  
До поступления в вуз информационной безопасностью интересовались 3,1%,  
и лишь малая часть респондентов начала ее изучать, уже будучи на четвертом  
 
 
323 
и 
пятом 
курсах 
– 
по 
2% 
соответственно. 
На 
момент 
опроса 
не 
заинтересованными в области информационной безопасности оказались 4,1% 
(табл. 1). 
Однако стоит отметить, что примерно столько же студентов начали 
изучать информационную безопасность самостоятельно на ранних курсах или  
в школе – 45,9% опрошенных, что говорит о заинтересованности обучения  
по этому направлению сразу с момента поступления в вуз или даже в школе.  
Об этом же свидетельствуют и данные опроса. Из таблицы 2 видно, что 
73,5% заявили о желании начать изучение в школе, либо на 1 курсе обучения  
в университете. Лишь 13,2% высказались за начало обучения на 2-3 курсе,  
и ни один за начало обучения на 4-5 курсах. 
Таблица 2. Предпочтения студентов в периоде начала изучения  
информационной безопасности 
№ п/п 
Варианты ответов 
Всего, % 
1. 
Со школы 
34,7% 
2. 
С 1 курса 
38,8% 
3. 
Со 2 курса 
11,2% 
4. 
С 3 курса 
2,0% 
5. 
С 4 курса 
0,0% 
6. 
С 5 курса 
0,0% 
6. 
Меня не интересует ИБ 
13,3% 
Итого
100% 
Мониторинг показал, что большинство студентов (52%) не принимают 
участие 
во 
внеучебных 
мероприятиях, 
связанных 
с 
информационной 
безопасностью, а 40,8% участвовали в олимпиадах, соревнованиях, конкурсах 
или конференциях по информационной безопасности не более 3 раз, что говорит 
о низкой активности студентов (табл. 3). 
Анализ показывает, что низкая заинтересованность студентов может быть 
вызвана в том числе поздним введением в профессиональную деятельность в 
рамках обучения в вузе, когда ожидания студентов и их желание изучать 
 
 
324 
информационную безопасность превалируют на младших курсах оказываются 
не удовлетворены действующим учебным планом.  
Таблица 3. Частота участия студентов в мероприятиях  
по информационной безопасности 
№ п/п 
Варианты ответов 
Всего, % 
1. 
Ни разу 
52,0% 
2. 
1-3 раза 
40,8% 
3. 
3-6 раз 
3,1% 
4. 
Более 6 раз 
4,1% 
Итого
100% 
Для анализа влияния внешних факторов на уровень заинтересованности 
студентов авторами была предпринята попытка анализа существующих в России 
мероприятий для обучения, повышения вовлеченности студентов в сферу 
информационной безопасности и их адаптации в рамках университетской среды. 
Таким образом, были выявлены 48 постоянных ненаучных мероприятий по 
защите информации, ориентированных на аудиторию до 24 лет. Из них 97,9% 
являются соревнованиями по информационной безопасности в формате CTF 
(Capture The Flag), а 12 мероприятий также сопровождаются профильными 
лекциями, семинарами и мастер-классами. 
43,8% мероприятий предназначены только для студентов. При этом еще 
37,5% мероприятий ориентируются не только на студентов, но и на учащихся 
школ, увлекающихся этим направлением. Распределение целевой аудитории 
представлена на диаграмме (рис. 1). 
 
Рис. 1. Целевая аудитория мероприятий по ИБ 
 
 
325 
Большинство из описанных мероприятий проходят в онлайн формате, при 
этом лишь несколько из них совмещают онлайн и оффлайн активности (рис. 2). 
 
Рис. 2. Формат проведения мероприятий по ИБ 
 
Также дополнительно был собрана статистика активности высших 
учебных заведений в организации этих мероприятий. Из 134 вузов, обучающих 
по направлению иинформационнойой безопасностии в Российской Федерации 
по данным сайта «Поступай правильно» при Национальном исследовательском 
университете «Московский энергетический институт» [5], лишь 29 участвуют в 
организации площадок и активностей для вовлечения студентов в сферу 
информационной безопасности. На них же приходится 75% среди выявленных 
мероприятий (рис. 3). 
 
Рис. 3. Участие вузов в организации мероприятий по ИБ 
 
 
326 
На основе приведенных выше данных можно сделать вывод о том, что 
немногие вузы, обучающие по направлению информационной безопасности, 
реализуют инструменты вовлечения студентов в их профессиональную сферу 
деятельности.  
Анализ собранных данных показал, что на текущий момент среди вузов не 
распространен комплексный подход вовлечения студентов младших курсов в 
область информационной безопасности, который бы решал проблемы их 
адаптации и профессиональной ориентации. Авторы считают важным и 
необходимым реализацию подобного подхода в ТюмГУ, направленного на: 
● социализацию студентов в новой для них среде; 
● выявление талантливых и заинтересованных студентов в сфере 
информационной безопасности; 
● тренировку 
профессиональных 
навыков 
в 
области 
защиты 
информации; 
● углубленное 
обучение 
студентов 
дополнительным 
разделам 
информационной безопасности. 
 
 СТАТЬЯ
Аннотация
. Защищенный телемедицинский сервис для пациентов с 
онкологическими заболеваниями является площадкой для дистанционного 
взаимодействия врача и пациента. Помимо чата и видеосвязи на сервисе 
организован доступ врача к электронным медицинским картам пациентов и к 
модулю подбора анальгетиков для лиц с хроническим болевым синдромом. 
Использование 
медицинских 
персональных 
данных 
пациентов 
делает 
необходимым обеспечение безопасности использования и  передачи данных. 
Ключевые слова: безопасность данных, хронический болевой синдром, 
паллиативная медицина, телемедицина. 
Введение 
Защищенный телемедицинский сервис для пациентов с онкологическими 
заболеваниями является площадкой для дистанционного взаимодействия врача 
и пациента [1]. Сервис предлагает для пациентов возможность связаться с 
врачом, как через чат, так и через видеосвязь. Также для пациентов есть 
возможность просмотра своей электронной медицинской карты. Для врачей 
сервис предлагает возможность вести контроль за пациентами. Возможность 
ведения 
электронной 
медицинской 
карты 
пациента 
и 
возможность 
использования модуля для подбора анальгетиков. В приложении используются 
медицинские персональные данные пациентов, из-за чего эти данным нужно 
обеспечить безопасность, как во время передачи, так и во время использования. 
Использование сервиса телемедицины позволит уменьшить количество 
личных контактов пациента с врачом, а также с другими людьми, в условиях 
сложной санитарно-эпидемиологической обстановки, связанной с пандемией 
новой коронавирусной инфекции. Медицинское приложение позволит пациенту 
 
 
329 
избежать посещения клиники в случае, если ему необходимо забрать результаты 
анализов или просмотреть личную медицинскую карту, что снизит риски 
заражения пациента и поможет сохранить самоизоляцию для некоторых 
категорий граждан, а для пациентов с ограниченными возможностями в 
передвижении может стать незаменимым средством поддержания качества 
жизни на высоком уровне. 
Пациенты с хроническим болевым синдромом (далее – ХБС), особое место 
среди которых занимают люди с онкологической патологией, зачастую 
ограничены в передвижении по состоянию здоровья. Таким образом, большую 
актуальность так же приобретает включение в приложение дополнительного 
функционала для таких категорий пациентов. Дополнительный сбор и анализ 
статистических данных о пациентах с хроническим болевым синдромом, о 
частоте и структуре хронического болевого синдрома и назначаемых 
анальгетиках и коанальгетиках позволит снизить частоту болевого синдрома, 
повысить 
эффективность, 
выбираемых 
препаратов 
и 
снизить 
риски 
суицидального поведения пациентов. 
Разработка программного обеспечения для паллиативной медицины, 
которая занимается улучшение качества жизни пациентов, столкнувшихся с 
проблемами, связанными с опасным для жизни заболеванием, путем 
предотвращения и облегчения страданий, является актуальной задачей. 
Аналогов в России такого программного обеспечения не существует.  
Таким образом, одним из решений этой проблемы является использовании 
приложения для дистанционного взаимодействия между врачом и пациентом с 
разработкой дополнительного функционала для лиц с хроническим болевым 
синдромом.  
Методологической и теоретической основой работы является нормативно-
правовая 
база, 
регулирующая 
обеспечения 
безопасности 
хранения 
и 
использования персональных данных в медицинском приложении, передачу 
информации в телемедицинском сервисе, а так же сбор  и анализа 
статистических данных о пациентах в целях проведения научных исследований 
 
 
330 
и исследований, и работа П. Б. Зотова, А. Ю. Кудрякова и др. о «Модели системы 
учета хронического болевого синдрома в онкологической клинике»[2]. 
Обеспечение безопасности приложения 
Основными нарушителями могут являться, как пользователи программой, 
так и субъекты, которые могут перехватить информацию, которая передается 
через сеть Интернет.  
Информацию, которую нужно защищать – это медицинские данные и 
персональная информация пользователей приложения.  
Для ограничения возможностей пользователей используется авторизация 
и аутентификация. Таким образом определяется, что данный пользователь (врач, 
пациент, администратор) есть в системе и он имеет определенные права и 
возможности. Если же авторизация не проходит, то пользоваться приложением 
он не сможет. Таким образом пациент, зайдя в приложение не сможет получить 
информацию, принадлежащую другим пользователям.  
 
Для того чтобы не дать субъектам перехватить информацию, которая 
передается по сети Интернет (а если и перехватят, то не смогут определить кому 
эта информация принадлежит), информация для пациентов передается в 
обезличенном виде. Согласно Федеральному закону № 152, данные можно 
передавать по сети Интернет, не используя сертифицированные средства 
криптографической защиты [3].  Для врачей информация передается с 
использованием сертифицированного средства криптографической защиты 
КриптоПро[4] так как согласно Федеральному закону № 323[5] врачи обладают 
врачебной тайной пациентов и по приказу № 911н[6] можно использовать только 
сертифицированные средства криптографической защиты для защиты данных.  
Нет возможности обезличить данные также по причине того, чтобы врач мог 
идентифицировать  пациентов.  
Инструменты разработки 
Языком разработки приложения является Python [7]. Данный язык легко 
поддается изучению и пониманию, обладает большой библиотекой для решения 
множества различных задач.  
 
 
331 
Средой разработки является Spyder, интегрированная в Anaconda. Данная 
среда предоставляет возможности для работы с языком Python, C/C++ и Fortran. 
Она позволяет находить и подсвечивать ошибки, прямо во время написания кода 
программы. Позволяет одновременно запускать большое количество консолей 
Python, которые облегчают тестирование программного кода, если он разделен 
на множество различных модулей.  
Для стабильной работы приложения используются такие библиотеки как: 
 PySimpleGUI, 
данная 
библиотека 
используется 
для 
создания 
графического интерфейса приложения [8]; 
 Hashlib, используется для хеширования пароля, перед его отправкой на 
сервер для проверки; 
 Numpy, добавляет поддержку больших многомерных массивов и 
матриц и множество различных операций над этими массивами; 
 Pymyip, используется для получения внешнего ip адреса; 
 Socket, 
предоставляет 
возможности 
для 
обеспечения 
обмена 
информацией. Используется для создания клиентской и серверной части 
приложения; 
 Cv2, предоставляет возможность получения изображения с камеры, с 
последующей 
ее 
обработкой, 
а 
также 
предоставляет 
возможность 
воспроизводить видео; 
 Pyaudio, предоставляет возможность получения аудио с микрофона 
либо других источников, с последующей обработкой этого звука; 
 Struct, используется для преобразования данных в байты и обратно; 
 Threading, используется для создания потоков, для реализации 
многопоточности в приложении; 
 Requests, используется для создания запросов для базы данных, через 
протокол https; 
Программная реализация функционала приложения 
При запуске приложения пользователя сначала нужно ввести логин и 
пароль. Вид окна для авторизации показан на рисунке 1. 
 
 
332 
 
Рис. 1. Авторизация 
Программный код этого окна приложения состоит из 3 основных функций: 
 Функция win_authentication() является основной и работает постоянно, 
в ней произведена настройка внешнего вида программы, производится проверка 
на правильность ввода логина и пароля. Если логин или пароль введены 
неправильно, то при нажатии на кнопку ввод, произведется вывод сообщения в 
отдельном окне, с последующей информацией о том, что было сделано 
неправильно. В окне пароля происходит преобразование символов, вводимых 
пользователем, в *. Также, в данной функции происходит преобразования 
введенного пароля в хешированный. Для этого используется библиотека hashlib 
и команда hashed_password = hashlib.sha512(password_.encode('utf-8')).hexdigest().  
 Функция authorization(_login_ , _password_) производит авторизацию 
пользователя. Она получает от основной функции логин и хешированный 
пароль, после производится запрос requests.post ('https://localhost:44308/ 
api/Auth/Login',json={'Username':_login_, 'Hash' : _password_}, verify=True).json() 
на сервер для проверки правильности. Если авторизация не произведена, 
выводится сообщение о неправильности логина или пароля. Если наоборот, то 
сервер функция принимает id сессии для последующего общения с сервером.  
 Функция authentication(_id_session_) отвечает за аутентификацию, 
проверяется, какими правами обладает пользователь.  
После авторизации и аутентификации открывается главное окно 
приложения, которое можно увидеть на рисунке 2. 
 
 
333 
 
Рис. 2. Главное меню 
Главное меню состоит из таких функций как: 
 __menu__(pravo,_id_session_), 
отображает 
визуальный 
стиль 
приложения, поля и кнопки. Является основной функцией, в которой запускается 
последующие функции приложения.  
 _Search_(pravo,id_session_) отвечает за запрос на сервер для получения 
списка пользователей. Эти данные передаются в основную функцию, где  
и выводится для пользователя. Если пользователь является врачом, то ему 
показывается только список пациентов, если пользователем является пациент,  
то показывается список врачей и кто из них в сети.  
 Chat_( pravo,id_session_) отвечает за чат между пользователем и тем,  
с кем он общается. Чат не работает, пока пользователь не выберет из списка 
другого пользователя.  
При передаче данных по видеосвязи используется протокол UDP, во время 
инициализации запускаются 2 потока, на прием и отдачу потоков данных, таким 
образом программой можно пользоваться во время видеоконференции.  
В приложении при передаче данных используется также протокол обмена 
структурированными данными [9].  
 
 
334 
При нажатии на кнопку «профиль» в главном меню, открывается в 
отдельном окне профиль пользователя, который показан на рисунке 3.  
 
Рис. 3. Профиль пользователя 
Так выглядит профиль, если его смотрит администратор. Профиль состоит 
из таких функций, как:  
 _profile_(role, id_session_) является основной функцией, отвечает за 
визуальную составляющую и проверки в полях. Такие проверки есть в таких 
полях, как номер телефона (можно вводить только цифры без пробелов  
с ограничением на количество знаков), при вводе пароля (не должен содержать 
пробелов, и длина пароля должна быть не меньше определенного значения). Для 
каждой роли: пациент, врач и администратор выводится свои поля в профиле. 
Пациент может видеть только свой профиль, и из полей у него присутствует 
возможность изменить пароль и email. Врач может видеть профиль пациента, но 
не отображаются поля с паролями. Также врач не может изменить профиль 
пользователя. Администратору показываются все поля, а также он имеет права 
изменить данную информацию. При изменении информации пациенту требуется 
ввести старый пароль, а для администратора подтвердить свое решение по 
изменению. 
 information_ отвечает за получение информации с сервера через https. 
В зависимости от роли происходит различный запрос информации.  
 saveprofile отвечает за передачу информации на сервер. Функция 
запускается только после нажатия кнопки «изменить».  
 
 
335 
На рисунке 4 показан внешний вид окна модуля для подбора анальгетиков 
и коанальгетиков для лиц с ХБС. 
 
Рис. 4. Окно модуля по подбору анальгетиков для пациентов с ХБС 
 
Право на открытие данного окна имеется только врач, для других ролей 
кнопка 
«ХБС» 
блокируется 
и 
становиться 
невидимой. 
Данное 
окно 
предоставляет врачу произвести подбор препарата. В зависимости от выбранных 
ответов на вопросы, которые он спрашивает у пациента, предоставляется список 
препаратов, которые подходят под условия. После выбора препарата и нажатии 
на сохранить выводится окно, показанное на рисунке 5, для выбора причины 
боли пациента.  
 
Рис. 5. Окно выбора 
 
 
336 
После нажатия на кнопку «ок», происходит запуск функции saveresultt() 
которая отправляет на сервер с привязкой к пациенту такие данные, как: время, 
врач, выбранные ответы на вопросы, выбранный препарат, причину боли. 
Заключение 
В ходе исследования был разработан работоспособный прототип 
защищенного телемедицинского сервиса для пациентов с онкологическими 
заболеваниями для целей контроля хронического болевого синдрома и 
коррекции назначаемых анальгетиков и коанальгетиков. Защита приложения 
разрабатывалась согласно рассмотренной модели нарушителя.  
 
 СТАТЬЯ
Аннотация
. В рамках данной работы решается задача проверки 
консистентности двухстороннего конфиденциального протокола в виде 
проверки равенства k-из-n в парадигме многосторонних конфиденциальных 
вычислений (Secure Multiparty Computation, MPC). Построен протокол на основе 
двустороннего булева контура, проведен анализ его эффективности в виде 
мультипликативной сложности и глубины. 
Ключевые слова: многосторонние конфиденциальные вычисления, 
забывчивая передача, проверки консистентности, распределенный контур. 
Введение. В современном мире обрабатываются большие объемы 
информации и зачастую эта информация является очень важной. Все 
медицинские записи, денежные переводы, продажи, реклама – это все переходит 
в цифровой формат [1, 2]. При этом обрабатываемые данные могут 
принадлежать нескольким различным участникам. Некоторые участники 
протокола могут предпринимать несанкционированные действия, чтобы 
нарушить конфиденциальность данных или повлиять на результат вычислений. 
Именно поэтому задача обеспечения безопасности обработки данных в таких 
условиях является крайне актуальной. 
Многосторонние конфиденциальные вычисления. Одним из способов 
решения 
данной 
задачи 
является 
использование 
многосторонних 
конфиденциальных вычислений – процесса, который позволяет нескольким 
участникам производить вычисления, зависящие от их входных данных, при 
этом не позволяя получить какой-либо информации о тайных входных данных 
 
 
339 
других участников вычислений [3, 4, 1]. Т. е. функциональность многосторонних 
вычислений позволяет нескольким сторонам совместно производить некие 
вычисления над их частными входами, не предоставляя участникам никакой 
дополнительной информации, помимо предписанного выхода протокола. 
Некоторые участники протокола могут оказаться злоумышленниками.  
В зависимости от поведения различают [3]: 
 пассивные злоумышленники – следуют протоколу; 
 активные злоумышленники – могут нарушать протокол с целью 
получения дополнительной информации либо целенаправленно повлиять на 
выход других участников. 
В зависимости от того, какие гарантии безопасности предоставляет 
протокол, различают протоколы с пассивной и активной безопасностью. Кроме 
того, различают протоколы с гарантированным выводом (если протокол 
гарантирует получение предписанного выхода всеми честными участниками), и 
протоколы с прерыванием (если действия активного противника гарантированно 
обнаруживаются, 
и 
честные 
участники 
прерывают 
исполнение). 
Гарантированный вывод в протоколах с активным противником достижим лишь 
в случае, когда нечестных участников меньшинство, а безопасность с 
прерыванием возможна при любом количестве активных противников. Такая 
теоретическая безопасность возможна, когда [5], и вычислительная безопасность 
возможна, когда [4, 6]. 
В 
многосторонних 
конфиденциальных 
вычислениях 
имеется 
функциональность, которая принимает на вход значения, производит над ними 
некие 
вычисления 
и 
предоставляет 
участникам 
их 
выходы. 
Такой 
востребованной функциональностью является забывчивая передача [7, 8, 9]. 
Пример забывчивой передачи 1 из 2 приведен на рис. 1. 
Отправитель передает два значения – ݉଴ и ݉ଵ, являющиеся ߪ-битовыми 
числами, а получатель передает значение ܾ – индекс выбора. Оно принимает 
значение 0 или 1 и показывает какое значение из двух от отправителя он хочет 
 
 
340 
получить. Отправитель не знает значение ܾ, а получатель не имеет информации 
о втором значении, которое он не получил. 
 
Рис. 1. Функциональность забывчивой передачи 
Безопасность многосторонних конфиденциальных вычислений. Если 
имеется некий протокол с пассивной безопасностью, то сделать из него протокол 
с прерыванием можно при помощи проверок поведения. Т. е. каждый участник 
доказывает другому, что он не отклоняется от протокола. Это можно сделать при 
помощи проверок консистентности, т. е. соответствия. Одним из видов проверок 
консистентности является проверка на равенство. 
В рамках данной статьи решается задача проверки равенства ݇ из ݊ 
значений у двух участников, которая может привести к построению протокола 
забывчивой передачи ݇ из ݊ значений с активной безопасностью (рис. 2). Что 
является важной и актуальной задачей многосторонних вычислений. 
Имеются два участника: доказывающий и проверяющий. Данный протокол 
должен возвращать проверяющему значение 0, если вектора совпадают ровно в 
݇ позициях, и значение 1, если они совпадают в каком-то другом количестве 
позиций. Т. е. проверяющий получает 0, если Расстояние Хэмминга составляет 
(݊−݇) значений. 
 
Рис. 2. Протокол проверки равенства k из n значений 
 
 
341 
Виды многосторонних вычислений. Существуют многосторонние 
конфиденциальные 
вычисления 
общего 
и 
специального 
назначения. 
Специального назначения – нетривиальны, более эффективны и решают 
конкретную задачу. В качестве примера можно указать протоколы пересечения 
частных множеств [2] и [10]. Протоколы общего назначения позволяют решить 
любую 
алгоритмически 
разрешимую 
задачу 
и 
представляют 
собой 
распределенный вычислительный контур. 
В 
настоящее 
время 
существуют 
три 
основных 
разновидности 
распределенных контуров: 
 булев – строятся на основе забывчивой передачи и позволяют 
вычислять любой алгоритм, состоящий из битовых операций AND и XOR. 
Операции XOR производятся локально и считается, что ничего не стоят, а 
операции AND требуют сложных объемных коммуникаций между участниками. 
Поэтому эффективность контура измеряется количеством операций AND и 
мультипликативной глубиной, т. е. тем, во сколько слоев можно их расположить. 
Одним из первых распределенных булевых контуров является протокол с 
преобладающим количеством честных участников [6]; 
 арифметический – сложение и умножение над числами в некоем поле 
являются его базовыми операциями. Арифметические контуры основаны на 
гомоморфном шифровании и разделении секрета, их сложность также 
измеряется 
мультипликативной 
сложностью 
и 
глубиной. 
Примером 
современного эффективного арифметического контура является протокол 
многосторонних вычислений с защитой от активного противника [11]; 
 контур Яо – основан на асимметричном шифровании и цепочках 
ключей. Наиболее эффективны для выполнения операций сравнения [12]. 
Построение контура. В качестве одного из решений нашей задачи можно 
построить распределенный булев контур. Для этого разобьем задачу на этапы и 
рассмотрим каждый из них. Во-первых, необходимо сравнить числа попарно. 
Для этого мы: побитово вычитаем вектора, при помощи локальной операции 
XOR, и устанавливаем флаг в значение 0, если результат равен 0, и в 1 иначе. 
 
 
342 
Для этого для каждой разности вычисляем OR по всем битам числа, что требует 
݊(݉−1) количества операций AND в ݈݋݃ ݉ слоев. 
Во-вторых, необходимо подсчитать количество флагов, установленных в 
1, т. е. арифметически сложить все флаги. И, наконец, сравнить получившийся 
результат с числом ݊−݇ уже описанным выше способом вычитания и 
вычисления логического ИЛИ. Схема булева контура приведена на рис. 3. 
 
Рис. 3. Схема булева контура 
В данном случае всего потребуется ܱ(݊ଶ+ ݊݉) операций AND, а 
мультипликативная глубина составляет ܱ(݈݋݃ ݉ + ݈݋݃ ݊ ), если реализовывать 
полностью на распределенном контуре. 
В контуре используются такие операции как битовая OR и арифметическое 
сложение. Операция OR требует ݊(݉−1) операций AND в ݈݋݃ ݉ слоев (рис. 4).  
 
Рис. 4. Схема для вычисления операции OR 
 
 
343 
Операция арифметического сложения достаточно объемная и требует 
௡మ
ସ 
операций AND в ݈݋݃ ݊  слоев, если оптимизировать по глубине, и ܱ(݊log ݊) 
операций AND в ݊ слоев, если оптимизировать по сложности (рис. 5). 
 
Рис. 5 Схема для вычисления операции арифметическое сложение  
на примере трехбитового входа 
В качестве дальнейшего развития данной работы можно указать: 
1. Реализация двустороннего безопасного булева контура на языке C++ с 
использованием библиотеки ABY [13]; 
2. Построение и реализация арифметического и смешанного контуров для 
этой задачи; 
3. Замеры и сравнение эффективности реализованных контуров. 
 СТАТЬЯ
Аннотация
. Объектом исследования данной статьи является технология 
работы индивидуального автоматизированного теплового пункта и виды атак на 
оборудование и узлы систем автоматизации. 
Ключевые слова: индивидуальный тепловой пункт, АСУ ТП, схема 
теплоснабжения, сетевая атака, трубопроводы. 
 
Важнейшей 
задачей 
современных 
ТЭЦ 
и 
котельных 
является 
предоставление теплоносителя для отопления и горячего водоснабжения с 
максимальной эффективностью и минимальной себестоимостью. 
Данного эффекта невозможно добиться без современных средств 
управления и автоматизации, которые требуют с одной стороны, безотказности 
аппаратной части, с другой стороны вмешательства посторонних лиц в 
технологию работы. 
Целью данной работы является разработка виртуального тренажер для 
моделирования режимов работы индивидуального теплового пункта с учетом 
воздействия атак на узел учета тепловой энергии и систему управления 
погодным регулированием. 
Для достижения поставленной цели необходимо выполнить следующие 
задачи: 
1. Разработать алгоритм работы ИТП, с закрытой системой отопления и 
независимым подключением горячего водоснабжения. 
2. Разработать модели и алгоритмы атак на узлы автоматизации ИТП. 
3. Разработать виртуальный тренажер. 
4. Провести тестирование и отладку разработанного приложения. 
 
 
346 
Системы ИТП и схемы их подключения: 
Тепловой пункт – это высокотехнологичное оборудование представляет 
собой сложную установку для передачи теплоэнергии от наружных теплосетей 
(котельных, ТЭЦ или РТС) во внутреннюю систему отопления, водоснабжения 
и вентиляции [1]. 
Основной целью теплового пункта поддержание необходимого уровня 
давления и температуры в различных системах и коммуникациях, а также 
предотвращение возможных аварий из-за перепадов температуры и давления. 
Индивидуальный тепловой пункт имеет следующие виды тепловых 
нагрузок: 
Система горячего водоснабжения (ГВС) предназначена для снабжения 
потребителей горячей водой. Различают закрытые и открытые системы горячего 
водоснабжения. 
Система отопления предназначена для обогрева помещений с целью 
поддержания в них заданной температуры воздуха. Различают зависимые и 
независимые схемы присоединения систем отопления. 
В данной работе будет рассмотрена закрытая система теплоснабжения с 
независимым подключением ГВС, приведенная на рисунке 1. 
 
 
Рис. 1. ИТП, закрытая СО с независимым подключением ГВС 
 
 
347 
Принцип работы: 
Рассмотрим принцип работы ИТП, с закрытой СО и независимым 
подключением ГВС. 
Теплоэлектроцентраль или котельные, как источники тепла, нагревают 
теплоноситель, далее по магистральным сетям он поступает в тепловой пункт. 
На входе устанавливается фильтры и грязевики, контрольно-измерительное 
оборудование, которое определяет параметры теплоносителя.  
Температура теплоносителя и давление от ТЭЦ, как правило, не 
соответствует параметрам по СанПиН и устанавливается самим ТЭЦ исходя из 
климатических условий обусловлено это тем, что тепловые сети городов имеют 
большую протяженность и неоднородную топологию, вследствие чего 
потребители тепловой энергии удалены от источника тепловой энергии на 
различные расстояния. Кроме того, тепловые нагрузки потребителей также 
отличаются друг от друга.  
Воду при различных условиях с высокой температурой подавать в системы 
отопления здания и ГВС нельзя, так как температура в ГВС и систем отопления 
должна варьироваться от 55 до 60 ᵒС из-за превышения этой температуры могут 
произойти нежелательные последствия такие как ожоги [2]. Следовательно, 
необходимо понижать температуру теплоносителя. В данной работе это 
возможно реализовать, используя теплообменники. Таким образом, вода из 
тепловой сети циркулирует через теплообменник, нагревая внутренний контур. 
При необходимости на входе в тепловой пункт устанавливается регулятор 
давления, который понижает исходное давление теплоносителя. Условное 
давление варьируется от 0,2 до 0,5 Мпа [2]. Помимо очистного оборудования в 
тепловых пунктах устанавливают системы водоподготовки, чтобы продлить 
срок службы всего оборудования расположенного как на источниках 
приготовления тепла, так и на стороне абонентов. К тому же вода для горячего 
водоснабжения должна пройти специальный этап очистки. На данном этапе 
корректируется жесткость воды и содержание химических примесей, влияющих 
на коррозию [3]. 
 
 
348 
Тепловой пункт работает по закрытой системе отопления с независимы 
подключении контура ГВС, таким образом в технологической линейке 
появляться 2 теплообменника для отопления и ГВС. Тип теплообменника, его 
мощность и конструкция подбираются исходя из требуемой мощности теплового 
пункта. 
Циркуляция теплоносителя в системе осуществляется насосными 
группами. Количество насосных групп и их производительность так же 
подбираются исходя из требуемой производительности теплового пункта. 
Согласно 
современной 
нормативно-технической 
документации 
проектируемы 
или 
реконструируемые 
ИТП 
должны 
быть 
полностью 
автоматизированы. В настоящее время появляется все больше тепловых пунктов 
управляемы дистанционно. 
Разработка моделей и алгоритмов атак: 
В последнее время участились АРТ атаки на промышленность. Так в 2019 
году «Positive Technologies» проанализировали поведение 22 APT-группировок, 
атаковавших российские организации на протяжении последних двух лет. Среди 
целей этих группировок множество организаций, входящих в списки 
крупнейших компаний России и являющихся лидерами в своих отраслях 
статистика таких атак приведена на рисунке выше [4]. 
Поэтому необходимо обратить внимание на АИТП, так как на территории 
объектов каждый день находятся люди, которые могут пострадать вследствие 
атаки. 
Алгоритмы атак:  
Атака 1. Коррекция температурной карты в результате вмешательства 
непосредственно в блок погодного регулирования. 
Алгоритм: 
1. 
Злоумышленник атакует преобразователь интерфейсов, сопряженный 
с контроллером управления погодным регулированием. 
2. 
Искусственно корректируются данные температурной карты. 
3. 
Возникает, перегрев или недогрев подаваемой воды в здание. 
 
 
349 
4. 
Датчики температуры передают неверные сигналы на контроллер; 
5. 
Возникают штрафы за неиспользованную тепловую энергию и 
нарушается СанПИН. 
Результат: в данной ситуации люди могут получить ожоги, а тепловая 
система может стать не пригодной к дальнейшей эксплуатации, также были 
получены штрафы за чрезмерное сжигание топлива. 
Атака 2. Диспетчер не видит, что происходит с системой ИТП в реальном 
времени. 
Алгоритм: 
1. Злоумышленник атакует контроллер, забивая Ethernet порт. 
2. Возникает, перегрев или недогрев подаваемой воды в здание. 
3. Датчики температуры передают данные, а контроллер не реагирует на 
эти данные. 
4. Возникают штрафы за неиспользованную тепловую энергию и 
нарушается СанПИН. 
Результат: в данной ситуации люди могут получить ожоги, а тепловая 
система может стать не пригодной к дальнейшей эксплуатации, также были 
получены штрафы за чрезмерное сжигание топлива. 
Атака 3. Прекращение подачи воды в ИТП 
Алгоритм: 
1. 
злоумышленник атакует интерфейс контроллера RS-485, получая 
доступ к оборудованию; 
2. 
злоумышленник закрывает запирающую арматуру 
3. 
отключает все датчики системы водоснабжения 
4. 
в связи с тем, что система перестает функционировать должным 
образом, она может выйти из строя 
Результат: тепловая система может стать не пригодной к дальнейшей 
эксплуатации, а люди, находящиеся в холодный период времени на территории 
объекта, могут получить обморожения. 
 
 
 
350 
Заключение 
 
Рассмотрены 
схемы 
ИТП 
и 
типы 
их 
подключения, 
также 
продемонстрирован принцип работы АИТП. 
 
Разработана модель и алгоритм атаки на тепловые пункты, 
представлены возможные последствия. 
В дальнейшем планируется реализовать виртуальный тренажер, а также 
разработать дополнительные алгоритмы атак. 
 
 СТАТЬЯ
Аннотация
. Представлено описание технических каналов утечки 
информации, 
по 
которым 
возможна 
утечка 
акустической 
(речевой) 
конфиденциальной информации. Под утечкой полагается как неконтролируемое 
распространение информации, так и намеренный неправомерный ее перехват 
злоумышленником. Данные каналы могут частично подавляться либо полностью 
уничтожаться благодаря специальным мерам, способам защиты, которые также 
представлены. 
Ключевые слова: технический канал утечки информации, защита 
информации, акустическая информация. 
Введение 
На 
конфиденциальных 
мероприятиях 
постоянно 
циркулирует 
акустическая информация, то есть «информация, носителем которой является 
акустический сигнал» [1]. Данный вид конфиденциальной информации может 
представлять ценность для злоумышленника, в связи с чем возможно 
возникновение ее перехвата через технические каналы утечки информации. 
«Технический 
канал 
утечки 
информации 
– 
совокупность 
источника 
информации, 
среды 
распространения, 
по 
которой 
распространяется 
информационный сигнал, шумов, препятствующих передаче сигнала в среде 
распространения, и технических средств перехвата информации», что 
изображено на рисунке 1 [2]. 
 
 
352 
 
Рис. 1. Технический канал утечки информации 
В настоящей работе представлены: 
1. 
Описание ряда технических каналов утечки информации: 
1.1. акустический канал; 
1.2. виброакустический канал; 
1.3. акустооптический канал. 
2. 
Способы противодействию вышепредставленным техническим 
каналам. 
Технические каналы утечки информации 
Технические каналы могут классифицироваться по следующим признакам: 
 по физической природе носителя; 
 по информативности; 
 по структуре; 
 и т.д. 
По физической природе носителя существуют четыре канала утечки, 
представленные на рисунке 2. Далее остальные признаки рассматриваться не 
будут. 
 
 
353 
 
Рис. 2. Технические каналы утечки 
 
Акустический канал утечки информации – это технический канал утечки 
информации, в котором носителем информации являются упругие акустические 
волны, распространяющиеся в газовой среде. Данный канал образовывается 
путем установки скрытых диктофонов, прослушки акустической информации, 
циркулирующей в помещении, с помощью направленных микрофонов, которые 
могут устанавливаться вне здания, и т.д. 
В случае, если акустические волны распространяются не в газовой среде, а 
в 
твердотельной, 
то 
такой 
технический 
канал 
утечки 
называется 
виброакустический. При перехвате по виброакустическому каналу в смежных 
помещениях 
скрытно 
устанавливаются 
электронные 
стетоскопы 
или 
вибродатчики, осуществляющие прослушку и передающие информацию. 
Помимо данных каналов, в которых природа носителя информации 
одинакова, перехват акустической информации возможен и в других каналах, 
несмотря на иную природу носителя информации. Примером такого канала 
является акустооптический канал утечки – смесь виброакустического, 
акустического и оптического каналов. Оптический канал утечки информации – 
это технический канал утечки информации, в котором носителем информации 
является электромагнитное поле (фотоны), а средой распространения выступает 
безвоздушное 
пространство, 
атмосфера, 
оптические 
световоды. 
Акустооптический канал утечки информации – это технический канал утечки, 
причиной возникновения которого является вибрирующие в акустическом поле 
 
 
354 
тонкие отражающие поверхности, облученные лазерным лучом [3]. В данном 
случае используют лазерные микрофоны, направляемые на оконные стекла, 
облучая которые можно считать, перехватить колебания, вызванные разговором 
в помещении. Далее будут разбираться только вышеописанные каналы. 
Акустическая защита 
«Акустическая защита – это совокупность мер, направленных на 
исключение 
возможности 
утечки 
конфиденциальной 
(акустической) 
информации» [4]. Объектом акустической защиты является помещение и 
информация, циркулирующая в нем. Все мероприятия по акустической защите 
можно условно разделить на организационные и технические, что наглядно 
представлено на рисунке 3. 
 
Рис. 3. Мероприятия по акустической защите 
 
Организационные мероприятия – это мероприятия, направленные на 
решение вопроса защиты архитектурными и правовыми мерами.  
Под архитектурными мерами понимается изначальное проектирование 
помещений или их доработку с целью обеспечения акустической безопасности. 
Примером может являться ремонт помещения, замена некоторых его 
составляющих на более прочные материалы, менее звукопроницаемые и т.п. 
 
 
355 
Также к архитектурным мерам относится изначальный выбор расположения 
помещения относительно других помещений. Данное действие ведет к 
уменьшению доступа к помещению или другим неблагоприятным действиям. 
Правовые меры характеризуют строгий контроль пребывания и 
сотрудников организации, и любых посетителей как внутри, так и за пределами 
помещения. 
Все технические мероприятия делятся на активные и пассивные методы 
защиты. 
Активный метод технической защиты речевой информации – это метод 
защиты, предусматривающий создание маскирующих помех, шифрование, 
подавление аппаратов звукозаписи и подслушивающих устройств, а также их 
уничтожение. Примером активного метода защиты является использование 
генератора 
звукового, 
речеподобного 
или 
ультразвукового 
шума, 
виброизлучателей. 
Пассивный метод технической защиты речевой информации – это метод 
защиты, предполагающий ослабление непосредственно акустических сигналов, 
циркулирующих в помещении, а также сигналов электроакустических 
преобразований путем фильтрования акустических сигналов, низкочастотных 
сигналов, высокочастотных сигналов и экранирования помещений, технических 
средств. Примером пассивного метода защиты является использование 
неоднородных конструкций, звукопоглощающих материалов и т.д. 
Благодаря 
комплексу 
вышеупомянутых 
мер 
возможно 
полное 
уничтожение акустических, виброакустических и акустооптических каналов 
утечки информации. Этого можно достичь путем применения каждого из 
способов, но это не всегда является необходимым или возможным.  
Существуют ситуации, когда заранее помещение не планировалось под 
задачи, связанные с конфиденциальной информацией, в связи с чем невозможно, 
к примеру, осуществить выбор его местоположения, его архитектурных 
составляющих (материал стен) и т.д.  
 
 
356 
Также не имеет смысла осуществлять весь комплекс мероприятий, если 
набор определенных мер уничтожит канал. Например, установка генератора 
шума. 
В первом случае необходимо защищаться техническими мерами и 
правовыми: установка оборудования, экранирование помещений, режим 
контроля. 
Во втором случае генератор шума уже значительно ослабляет 
акустический, виброакустический и акустооптический каналы утечки благодаря 
изменению исходного сигнала. На исходный сигнал будет накладываться шум и 
даже при перехвате результативного сигнала уже невозможно разобрать 
полученную информацию. Соответственно, перехват за счет лазерного 
микрофона, диктофонов, стетоскопов и т.п. уже не является возможным. 
Добавив дополнительные правовые меры по контролю нахождения людей рядом 
с защищаемым помещением, чтобы исключить прослушивание, жалюзи и 
тройной стеклопакет, дабы исключить оптический канал утечки, перехват 
акустической информации по данным каналам полностью исключен. 
Проверить, насколько эффективна защита, можно, поставив диктофон за 
пределами помещения для проверки акустического канала или прослушивая стен 
стетоскопом для проверки виброакустического. Но и можно осуществить 
проверку с использованием контрольно-измерительной аппаратуры. Существует 
специально предназначенное оборудование для выявления технических каналов 
утечки.  
Таким образом, можно выяснить, насколько возможна утечка по каналам, 
используя 
собственные 
приборы, 
а 
также 
с 
помощью 
специального 
оборудования. 
Заключение 
Представлены технические каналы, по которым возможна утечка 
акустической информации, циркулирующей в защищаемых помещениях, а 
также мероприятия по подавлению, уничтожению данных каналов. 
 
 
357 
Существует огромный спектр способов защиты помещений. Грамотный 
выбор минимального набора мероприятий по акустической защите оказывается 
достаточным для значительного подавления технических каналов утечки. 
Проверка используемых мероприятий осуществляется с помощью различной 
специальной 
предназначенной 
аппаратуры, 
благодаря 
которой 
можно 
определить достаточно ли данного набора мер или нет. 
 
 СТАТЬЯ
Аннотация
. В данной статье обсуждаются инструменты и технологии, 
необходимые для создания безопасного модуля анализа базы данных платформы 
«Green Networking», приведена программная реализация процесса создания 
модуля. Приведена нормативно-правовая база, регулирующая сбор и анализ 
данных, а также обеспечение безопасности модуля. 
Ключевые слова: JavaScript, Node.js, MongoDB, D3.js, Mongoose, 
федеральные законы, обезличивание. 
Введение 
Платформа «Green Networking» – единая информационно-коммуника-
ционная 
платформа 
для 
выстраивания 
диалога 
между 
экобизнесом, 
экологически активными представителями общества и представителями власти. 
Платформа является своеобразным аналогом биржи фриланса для экологических 
деятелей и организаций с возможностью получения самых важных новостей 
экологической сферы. 
Проблемы экологии вызывают все большую озабоченность различных 
сообществ, а мировой опыт показывает, что одним из основных способов 
поддержки экологических проектов выступают специальные интернет-сервисы 
(краудфандинг, сайты и т.п.). Однако на сегодняшний день в Тюменской области 
не существует сервисов для экоактивистов, которые бы содержали модуль сбора 
статистических данных для научных исследований. 
Результаты работы позволят интегрировать модуль для сбора и анализа 
статистических данных об экологических проектах на платформу-агрегатор для 
 
 
359 
представителей 
экологических 
сообществ 
и 
экобизнеса, 
что 
поможет 
организовать изучение экологических практик Тюменского региона в рамках 
научно-исследовательских проектов. 
Модуль анализа данных поможет выяснить потребности и характеристики 
проектов, которые будут использованы для поиска партнеров и волонтеров. 
Выстраивание диалога с партнерами на платформе «Green Networking» будет 
способствовать масштабированию экологических практик Тюменского региона. 
Данные проектов представляют коммерческую ценность и являются 
интеллектуальной собственностью. Потенциальные злоумышленники могут 
пытаться вести промышленный шпионаж, нанося тем самым финансовый и 
репутационный ущерб. Поэтому должна быть обеспечена безопасность 
разрабатываемого модуля. 
Атрибуты 
В 
соответствии 
с 
функционалом 
платформы, 
на 
ней 
могут 
регистрироваться как физические лица, так и организации. 
У физических лиц берутся на обработку такие данные, как:  
 статус самозанятости; 
 информация о себе; 
 адрес электронной почты;  
 телефон;  
 район;  
 город;  
 улица;  
 место работы; 
 перечень проектов, в которых физическое лицо принимало участие.  
У организаций берется следующий перечень данных: 
 наименование;  
 организационная форма (ООО, ИП, НКО, другое и т. д.);  
 описание;  
 логотип или аватар; 
 
 
360 
 отметка о подтверждении учетной записи; 
 юридический адрес организации; 
 адрес, по которому ведется фактическая деятельность (район, город, 
район города, улица, дом, офис); 
 телефон; 
 адрес электронной почты;  
 сайт организации (если имеется); 
 ссылки на упоминание в СМИ; 
 ОКВЭД и сфера деятельности. 
Для анализа будут собираться такие данные о проекте как:  
 название;  
 описание;  
 логотип или аватар;  
 владелец (физическое или юридическое лицо);  
 участники (физическое или юридическое лицо); 
 дата публикации;  
 сроки реализации; 
 статус (реализованный, активный, планируемый); 
 место реализации (район, город, район города, улица). 
 бюджет. 
Нормативно-правовая база для обеспечения безопасности 
При обработке данных мы должны соблюдать нормативно-правовую базу 
для обеспечения безопасности, в которую входят: Федеральный закон № 152 [1] 
и приказ Роскомнадзора № 996 [2]. 
Использование персональных данных (далее – ПДн) разрешено только с 
согласия владельцев ПДн на их обработку. В нашем проекте осуществляется 
обработка ПДн, поэтому в соответствии со ст. 9 Федерального закона от 27 июля 
2006 г. № 152-ФЗ «О персональных данных» физическим и юридическим лицам, 
которые будут являться пользователями нашей платформы, требуется 
предоставить согласие на обработку ПДн. 
 
 
361 
Функционал платформы предполагает обработку и анализ ПДн, а также 
предоставление пользователям сайта результатов статистической обработки. 
Согласно приказу Федеральной службы по надзору в сфере связи, 
информационных технологий и массовых коммуникаций (Роскомнадзор) от 5 
сентября 2013 г. N 996 г. Москва "Об утверждении требований и методов по 
обезличиванию персональных данных", такие персональные данные подлежат 
обезличиванию. Для обезличивания были выбраны методы перемешивания и 
изменения состава. 
Инструменты разработки 
Для создания платформы, защищенных чатов и личных кабинетов 
пользователей использовался MERN-стек инструментов. Это стек для языка 
JavaScript, разработанный для упрощения процесса разработки, включает в себя 
четыре компонента с открытым исходным кодом: MongoDB [3], Express, React и 
Node.js [4]. 
Для удобного внедрения модуля анализа и обработки данных на 
платформу, в качестве его основы были взяты язык JavaScript, Node.js, среда 
выполнения JavaScript, и база данных MongoDB. Для качественной работы с 
MongoDB и Node.js необходима библиотека ODM Mongoose. Node.js после 
выполнения запроса, будет передавать информацию в модуль отрисовки 
графиков. 
Библиотека D3.js [5] предоставляет обширный инструментарий для 
качественного графического представления данных, которые будут передаваться 
посредством запросов к базе данных и для их первичной обработки, так как при 
ответе от mongoDB, мы получаем коллекцию, с которой в JavaScript удобно 
взаимодействовать. 
Программная реализация  
В первую очередь модуль анализа и статистической обработки данных 
должен быть подключен к базе данных платформы. На рис. 1 представлен 
программный код, обеспечивающий соединение с базой данных. 
 
 
362 
 
Рис. 1. Процесс соединения с базой данных с помощью Node.js 
После успешного соединения с базой данных, требуется подключить 
библиотеку D3.js, которая позволит работать с графиками. Ее подключение 
показано на рисунке 2. 
 
Рис. 2. Подключение D3.js к модулю и добавление базовых переменных 
 
В качестве входных данных D3.js получает массив объектов, который был 
взят из базы данных платформы. На рис. 3 представлена программная реализация 
выгрузки данных из базы данных для их дальнейшей обработки. 
363 
Рис. 3. Модуль раскрытия csv файла и его запуск в обработку 
На рисунке 4 продемонстрированы алгоритмы добавления в массив 
выгруженных данных, а также подсчет повторяющихся значений в данном 
массиве. 
Рис. 4. Реализация добавления в массив выгруженных данных 
и подсчет повторяющихся значений в данном массиве 
На рисунке 5 продемонстрирован процесс создания макета для дальнейшей 
визуализации на нем результатов проведенного анализа и статистической 
обработки. 
Рис. 5. Программная реализация макета для визуализации 
результатов анализа 
 
 
364 
На рисунке 6 приведена программная реализация столбчатой диаграммы, 
на которой приведен процент самозанятых физических лиц по отношению к 
общему числу физических лиц, зарегистрированных на платформе. 
 
Рис. 6. Программная реализация столбчатой диаграммы  
с процентом самозанятых 
Для наглядного отображения результатов анализа были подобраны 
параметры визуализации графиков. Программная реализация приведена на 
рисунке 7. 
 
Рис. 7. Подбор параметров отображения графика 
 
 
365 
Результатом работы данного алгоритма является столбчатая диаграмма, 
приведенная на рисунке 8: 
 
Рис. 8. Столбчатая диаграмма с процентом самозанятых физических лиц 
Заключение 
В ходе проделанной работы был реализован работоспособный модуль 
анализа базы данных платформы «Green Networking» на Node.js и MongoDB, 
приведена программная реализация процесса создания модуля и работы с 
библиотекой D3.js для визуализации графиков. Представлена нормативно-
правовая база, регулирующая сбор и анализ данных, а так же обеспечение 
безопасности модуля. 
 СТАТЬЯ
Аннотация
. В данной статье представлен концепт комплексной системы, 
целью которой является повышение уровня навыков студентов младших курсов 
в сфере информационной безопасности и их адаптации в университетской среде. 
Представлены способы данной системы, ее содержание и формы реализации. 
Определены необходимые для выполнения задачи и ожидаемые результаты. 
Ключевые слова: информационная безопасность, образовательная 
платформа, адаптация студентов, обучение, CTF. 
 
Успешное формирование профессиональных компетенций, развитие 
студента в настоящего специалиста зависит от следующих факторов: уровень и 
скорость адаптации после поступления в вуз, а также овладение знаниями и 
навыками, 
как 
профессиональной 
направленности, 
так 
и 
социо-
коммуникационными, позволяющими функционировать в студенческой среде.  
Согласно исследованиям отечественных ученых, в вузах выделяются 
следующие проблемы: 
● приспособления к новым формам обучения [1]; 
● интеграции студентов в общественную среду [2]; 
● вовлечения студентов в их профессиональную сферу деятельности [3]. 
Для решения данных проблем авторами была разработана концепция по 
повышению вовлеченности студентов младших курсов в сферу информационной 
безопасности. 
 
 
 
 
367 
Наша концепция преследует четыре глобальные цели:  
● Социализация студентов в новой образовательной среде и среди своих 
сверстников, знакомство с направлениями деятельности и активностями 
кафедры, института (факультета) и университета в целом.  
● Выявление талантливых и заинтересованных студентов в сфере 
Информационной безопасности. 
● Тренировка профессиональных навыков студентов и развитие их 
компетенций в сфере защиты информации. 
● Углубленное 
обучение 
студентов 
дополнительным 
разделам 
информационной безопасности. 
Для реализации поставленных целей наша концепция предполагает 
выполнение следующих социально и профессионально ориентированных задач: 
● адаптация студентов младших курсов; 
● подготовка 
студентов 
к 
их 
дальнейшей 
профессиональной 
деятельности в сфере информационной безопасности; 
● стимулирование и развитие навыков командной работы; 
● организация 
мероприятий 
различного 
характера 
в 
области 
информационной безопасности, где студенты были бы не только участниками, 
но и организаторами, и волонтерами.  
Для тренировки практических, социальных навыков и умения работы в 
команде в рамках концепции требуется реализовать тренировочные площадки, 
где студенты могут готовиться как к участию в командных соревнованиях в 
формате CTF (Capture The Flag), так и самостоятельно решать задачи различной 
направленности и уровня сложности. Подобная тренировочная площадка 
позволяет студентам познакомиться друг с другом, сформировать группы для 
совместного решения задач, дают сильный толчок к развитию в сфере 
информационной безопасности [4]. Сам же университет таким образом сможет 
выявить талантливых студентов, которые будут представлять его в дальнейшем 
на соревнованиях.  
 
 
368 
Концепция 
предполагает 
формирование 
студенческих 
сообществ, 
объединенных желанием профессионального роста. В ходе их создания студенты 
будут взаимодействовать друг с другом и преподавательским составом, 
вследствие чего развивать свои социально-коммуникативные способности. 
Помимо этого, сообщества несут обучающую функцию. Они будут выступать 
площадкой 
поиска 
новых 
путей 
для 
решения 
общих 
учебных 
и 
профессиональных задач.  
Лекции и курсы для студентов будут способствовать улучшению 
практических навыков в сфере информационной безопасности, получению 
новых знаний, материалов для подготовки и прохождению тренировочных 
площадок. 
Для 
реализации 
концепции 
будут 
разработаны 
и 
реализованы 
многоуровневые 
сценарии, 
служащих 
для 
вовлечения 
и 
повышения 
заинтересованности студентов в информационной безопасности и выявления 
наиболее талантливых из них. Каждый такой сценарий представляет из себя 
цепочку заданий или действий в онлайн и оффлайн форматах, наводящих 
студента на определенный скрытый элемент цепочки. Они могут включать 
различные зашифрованные послания для выявления внимательных и одаренных 
студентов, разнообразные активности для стимулирования общения студентов 
друг с другом и с преподавателями, повышения интереса к кафедре, тренировкой 
практических навыков, социальной активности в реальном мире, а также в 
онлайн формате. Все задания будут различной сложности с целью определить 
уровень подготовки студентов, стимулировать на получение новых знаний для 
решения трудных задач. Оффлайн формат заданий направлен как на выявление 
внимательных и заинтересованных студентов в сфере информационной 
безопасности, так и на знакомство с университетской средой.  
Таким образом, наша концепция, представленная на рис. 1, находится на 
пересечении заявленных нами целей, задач и форматов их воплощения и 
реализуется путем создания: 
 
 
 
369 
● совместных активностей по изучению среды; 
● соревнований CTF; 
● лекций, курсов, тренировочных стендов; 
● предпосылок к формированию сообщества студентов. 
 
 
 
Рис. 1. Концепция системы 
 
Далее, на рис. 2 представлены примеры возможных сценариев. Они 
подразумевают несколько точек входа в систему. Планируется несколько 
десятков подобных сценариев, рассчитанных на 200 студентов первого курса 
обучения. Каждый сценарий содержит несколько заданий в области 
информационной безопасности, которые располагаются на тренировочной 
площадке, на специально созданных сайтах или в их скрытых разделах. 
Сценарии, помимо таких заданий, будут включать взаимодействие с людьми и 
изучение окружающей студента среды: корпуса, университета, кафедры, 
преподавателей, а также иных подразделений университета. 
 
 
370 
Рис. 2. Пример сценария 
Например, QR код в корпусе института, как одна из точек входа в систему 
и в сценарий, включает в себя элементы изучения среды обучения и открывает 
доступ к многоуровневому квесту, открывающим путь к дальнейшему 
улучшению навыков студента. 
Иной точкой входа может стать вводная лекция по CTF. Этот вариант 
подразумевает уже наличие заинтересованных студентов, доказательством этого 
интереса может стать их фактическое присутствие на лекции. После этого 
студентам будет предложено, например, подойти к информационному стенду 
кафедры и попытаться найти на нем “скрытое” сообщение. 
Альтернативным началом сценария может быть, например, “скрытое” 
сообщение в каком-либо опросе – это самый быстрый и при этом эффективный 
способ попасть в систему. В опросе, который будет предложен студентам 
начальных курсов, будет “скрытое” сообщение, обнаружив и, разгадав которое 
студент автоматически попадает на следующий уровень (шаг) и получает 
дополнительный бонус. 
 
 
371 
Еще несколькими точками входа могут быть задания преподавателей, 
напрямую указывающие на сайт, ссылки на разработанный нами обучающий 
материал или же подсказки на сторонних информационных ресурсах. 
Расширенная схема с дополнительными точками входа в систему представлена 
на рис. 3. 
Рис. 3. Примеры реализации сценариев 
В качестве реализации описанной системы авторы предполагают в том 
числе следующие практические результаты: 
● набор нескольких команд CTF; 
● повышение 
осведомленности 
студентов 
об 
окружающей 
их 
образовательной среде и возможностях, которые она предоставляет; 
● привлечение аудитории из числа студентов младших курсов в сферу 
информационной безопасности и повышение их заинтересованности; 
● приобретение новых навыков и знаний в области информационной 
безопасности; 
● формирование 
сообщества 
студентов, 
заинтересованных 
в 
профессиональном росте; 
● создание комплексной системы преемственности поколений. 
Апробация 
концепции 
планируется 
на 
студентах 
кафедры 
информационной безопасности Тюменского государственного университета. 
Для этого необходимо реализовать следующие задачи: 
 
 
372 
● Разработать обучающий материал для подготовки к соревнованиям по 
информационной в формате CTF. 
● Разработать 
задания 
различных 
форматов 
для 
студентов, 
объединенные в специальные сценарии. 
● Создание тренировочной площадки в виде онлайн платформы в том 
числе: 
○ проектирование и подготовка виртуальной инфраструктуры для 
онлайн платформы; 
○ разработка архитектуры платформы, включая создания специальных 
и скрытых разделов сайта; 
○ интеграция с соревновательной платформой для проведения 
соревнований в формате CTF. 
● Спроектировать и реализовать активности в очно-заочном формате 
○ не менее 20 сценариев, каждый из которых представляет цепочку как 
минимум из 4 заданий разного уровня сложности и формата 
реализации. 
 СТАТЬЯ
Аннотация
. В работе описываются способ квантовой телепортации 
кубита, алгоритм Гровера, протокол квантового распределения ключей BB84. 
Исследуется способ создания на их основе топологии квантовых устройств с 
коммутацией пакетов. Описывается защищенный способ построения адресации 
устройств для коммутации пакетов. 
Ключевые слова: топология «Звезда», маршрутизация, адресация, 
алгоритм Гровера, квантовые компьютеры. 
Введение 
Идея построения квантовых вычислений исследуется еще со второй 
половины XX века. Большой объем работ в этой области был связан с 
квантовыми алгоритмами, позволяющими эффективно решать некоторые 
задачи. К самым известным из ник относятся Алгоритм Дойча-Йожи [1], 
Алгоритм Гровера [2], Алгоритм Шора [3]. Также затрагивают вопрос квантовых 
вычислений, связанный с построением различных вычислимых функций, 
опираясь на построение различных вентилей и описания порождаемой ими 
системы функций [4]. 
Естественно, что в таком разрезе большой акцент делается на 
низкоуровневые задачи и методы, такие как организация памяти и теория 
информации [5], или, как сказано выше, конструирование различных числовых 
функций и алгоритмов. С другой стороны, получив эффективное преимущество 
перед классическими ЭВМ в области решения некоторых переборных задач, 
непосредственно связанных с криптостойкостью шифров, например, задача 
факторизации для RSA [6], остро встает вопрос о влиянии квантовых 
вычислительных машин (КВМ) на традиционную криптографию. 
 
 
375 
С другой стороны, оказываются обделены вниманием некоторые более 
высокоуровневые области современных вычислительных систем, такие как 
компьютерные сети. Целью данной работы является описание относительно 
простого метода скрытой адресации, предназначенной для соединения 
нескольких КВМ в одну сетевую топологию. 
Описание метода квантовой телепортации 
Простым и надежным каналом связи между двумя КВМ является метод 
квантовой телепортации кубита [7]. 
Пусть Алиса хочет передать Бобу некоторый кубит, находящийся в 
состоянии: 
߮= ܽ|0 > +ܾ|1 >. 
Для этого у Алисы и Боба должна быть возможность связываться по 
классическому каналу связи, а также они должны иметь по одному кубиту из 
запутанной пары (ЭПР-пары): 
߰ ଴=
ଵ
√ଶ(|00 > +|11 >). 
Первым действием Алиса должна применить к кубиту ߮ и к первому 
кубиту из ߰ ଴ (или, иначе говоря, к первым двум кубитам из ߮⊗߰ ଴), 
следующие вентили:  
(ܪ⊗ܫ⊗I)(CNOT ⊗I)(߮⊗߰ ଴), 
где ܪ – вентиль Адамара, задаваемый следующей матрицей: 
ቌ
ଵ
√ଶ
ଵ
√ଶ
ଵ
√ଶ
−
ଵ
√ଶ
ቍ,  
I – тождественное преобразование, задаваемое единичной матрицей: 
ቀ1
0
0
1ቁ,  
CNOT – двухкубитный вентиль «Контролируемое «ИЛИ»», задаваемый 
следующей матрицей: 
 
 
376 
൮
1
0
0
0
0
1
0
0
0
0
0
1
0
0
1
0
൲. 
Соответственно в силу запутанности второго и третьего кубитов 
некоторые изменения также произойдут и с третьим кубитом. 
Далее Алиса производит измерение первых двух кубитов, получая пару 
классических бит, которые передает Бобу по открытому классическому каналу 
связи. В зависимости от полученной пары Боб производит одно из 
преобразований своего кубита:  
00 – применяет I = ቀ1
0
0
1ቁ, 
01 – применяет X = ቀ0
1
1
0ቁ, 
10– применяет Z = ቀ0
1
−1
0ቁ, 
11 – применяет Y = ቀ1
0
0
−1ቁ. 
Таким образом, состояние кубита Боба по итогу проделанных 
манипуляций будет соответствовать исходному состоянию кубита Алисы. 
В результате помимо незатруднительных унитарных преобразований, для 
телепортации одного кубита потребовалось раздать по кубиту из ЭПР-пары 
Алисе и Бобу, а также передать два бита по классическому каналу связи. 
Алгоритм Гровера  
Пусть имеется некоторая булева функция ݂ от ݊ переменных (то есть от 2௡ 
возможных натуральных чисел в качестве аргумента) такая, что существует 
единственный набор ݔ̅௜ для которого ݂(ݔ̅௜) = 1. 
Для нахождения этого набора на классическом компьютере потребуется 
порядка ܱ(2௡) операций, в то время как Алгоритм Гровера для КВМ справляется 
с этим всего за ܱ(√2௡) [1].  
Пусть ܷఈ – такой унитарный оператор, который зеркально отражает все 
кет-векторы относительно гиперплоскости, перпендикулярной ߙ. 
 
 
377 
|ℎ> = 
ଵ
ଶ
೙
మ∑
ݔ௝
௜ೕ
௜భ,௜మ,…,௜೙ୀଵ
௜భ,௜మ,…,௜೙ୀ଴
, 
т.е. 
это 
равномерная 
суперпозиция 
всех 
состояний, получающаяся после применения преобразования Уолша-Адамара к 
нулевому состоянию. 
Тогда Алгоритм Гровера состоит в применении оператора ܩ= −ܷ௛ ܷ௫̅೔ к 
состоянию |ℎ> число раз, равное округлению числа 
గଶ
೙
మ
ସ к целому, т.е. ܱ(√2௡) 
раз. Таким образом, амплитуда кет-вектора, соответствующего решению 
уравнения, увеличивается почти до единицы, а вероятность при измерении в 
конце получить неправильный вектор, равна примерно 
ଵ
ଶ೙. 
Квантовый протокол распределения ключей BB84 
Данный протокол позволяет Алисе и Бобу генерировать некоторый общий 
набор бит, измерять вероятность того, что данные биты были прослушаны, а 
также то, что канал связи прослушивается. 
Для организации протокола Алисе и Бобу требуется канал связи, 
способный передавать кубиты (квантовые канал связи), а также классический 
канал связи. Перед началом работы Алиса и Боб выбирают и согласуют два 
базиса для измерения кубитов такие, что 
|0∗>= 1
√2
(|0ା> +|1ା>), 
|1∗>= 1
√2
(|0ା> −|1ା>), 
То есть базисы повернуты друг относительно друга на 
గ
ସ. Кет-векторы |0∗> 
и |1∗> кодируют 0 и 1 в первом базисе, а |0ା> и |1ା> кодируют их во втором 
базисе соответственно. 
Далее Алиса случайным образом выбирает набор бит и для каждого из них 
случайным образом выбирает базис, в котором он будет закодирован. Далее она 
передает получившийся набор кубит Бобу, и Боб производит измерение каждого 
из них в случайном базисе. 
 
 
378 
Боб и Алиса по классическому каналу связи выясняют, для каких кубитов 
выбранный ими базис совпал, остальные отбрасывают. 
Значения, полученные в результате измерения не отброшенных кубитов, у 
Алисы и Боба должны совпадать. Несовпадение хотя бы одного кубита будет 
указывать либо на то, что в канале связи есть помехи, либо на то, что канал 
прослушивается. Для выявления несовпадающих кубитов среди измеренных 
часть из них раскрывается и сравнивается. Таким образом, предполагая канал 
связи помехоустойчивым, увеличения количества переданных и раскрытых 
кубитов делает вероятность канала быть прослушиваемым экспоненциально 
маленькой. В случае несовпадения хотя бы одного значения делается вывод, что 
канал прослушивается. Данный метод целиком основан на квантово-
вычислительной теореме о невозможности клонирования [7]. 
Сетевая топология 
Главной целью объединения нескольких ЭВМ в общую сеть является 
распределение и совместное использование ресурсов [8]. Естественной кажется 
идея объединить в одну сеть и КВМ с тем же умыслом. Также понятным кажется 
использование построения пакетов сообщений, добавляя к кубитам сообщения 
служебные кубиты. Таким образом, коммутации каналов будет предпочтена 
коммутация пакетов [9], что в дальнейшем облегчит переход к многоранговым 
сетям.  
В качестве физической, а также логической топологии была выбрана 
топология типа «Звезда» [9]. «Звезда» есть такая одноранговая сеть, когда все 
устройства (в данном случае, КВМ) подключаются к одному маршрутизатору в 
центре. 
Помимо вполне классических достоинств и недостатков, в рамках работы 
с КВМ будут интересны непосредственно три аспекта: 
1) 
Потребность в связи устройств одновременно и по квантовому и по 
классическому 
каналу 
связи 
легко 
разрешается 
за 
счет 
одного 
многофункционального маршрутизатора в центре «звезды». 
 
 
379 
2) 
Возможную необходимость раздачи ЭПР-пар разным КВМ также 
будет удобно полностью делегировать маршрутизатору. 
3) 
Понятность схемы адресации с идеей однотипного горизонтального 
и вертикального масштабирования. 
Таким образом, данная топология является не только оправданной, но и 
предпочтительной. 
Схема маршрутизации и адресации 
В рамках данной работы помимо обычной цели маршрутизации как поиска 
маршрута для некоторого пакета предполагается также использование такой 
схемы, которая обеспечит некоторый уровень защиты информации об адресате 
и получателе пакета. 
Естественно, что для маршрутизатора-КВМ в качестве математической 
задачи адресации будет выбрана та, что эффективно решена для КВМ и не 
решена для ЭВМ, что обеспечит защиту от перехвата пакетов классическими 
ЭВМ. В качестве такой задачи будет служить Задача, соответствующая 
Алгоритму Гровера. 
На первом этапе выбирается некоторая булева функция ݂ от ݊ переменных 
ݔ௜ такая, что ݂(ݔ̅௜) = 1 только для одного набора ݔ̅௜. Порты маршрутизатора 
кодируются некоторыми двоичными числами ܵ длины ݊. 
Предположим, что клиент k отправляет клиенту p некоторое сообщение из 
нескольких кубитов |ܽ௝>. Для этого он дополняет сообщение номером порта 
получателя ܾ௜, состоящему из ݊ двоичных чисел, как |ܾ௜>⊗|ܽ௝>, где под 
тензорным произведением подразумевается зацепление пакета кубитов |ܽ௝> с 
пакетом кубитов |ܾ௜> в чистом состоянии. Физически это может означать и 
зацепление каждого кубита |ܽ௝>, и каждого запутанного набора из |ܽ௝>, и что-
то другое в зависимости от протокола передачи кубитов и способа формирования 
пакета. В данном случае, пакет |ܽ௝> формируется как тензорное произведение 
незацепленных кубитов, а в качестве протокола связи на физическом уровне 
выбран, например, оптоволоконный канал связи. 
 
 
380 
Маршрутизатор, получая пакет |ܾ௜>⊗|ܽ௝>, проводит измерение первых 
݊ бит, получая набор  ܾ௜, после чего с помощью алгоритма Гровера решает задачу 
нахождения набора битов, соответствующих решению f(ݔ௜⊕ܾ௜) = 1, тем самым 
получая ܵ – код порта, на который необходимо отправить оставшийся пакет 
|ܽ௝>. 
Особенности схемы маршрутизации 
В рамках изучения данной схемы можно выделить то, что все коды портов 
должны быть определены заранее и согласованы с заранее выбранными 
адресами, что делает систему менее гибкой. С другой стороны, определив 
функцию f на маршрутизаторе и количество ݈ подключенных к нему устройств, 
можно делегировать ему генерацию пар (ܾ௜
௟, ܵ௟) и выдачу каждому КВМ полного 
набора ܾ௜
௟. Тем самым предполагая, что злоумышленник завладеет адресами с 
одной из КВМ и узнает адреса всех устройств с идеей в последствие «нарушить» 
канал связи на физическом уровне между нежелательными ему устройствами, он 
не сможет определить соответствие между адресами и кодами портов, даже имея 
в своем распоряжении КВМ, за неимением функции f.  
Сам маршрутизатор не хранит решения задач маршрутизации в готовом 
виде, поэтому их невозможно выкрасть обычным способом. Стоит также сказать, 
что дополнительные затраты на решение задач на маршрутизации каждого 
пакета сглаживаются тем, что задача решается Алгоритмом Гровера. Более того, 
при правильной организации вентилей на физическом уровне такой способ 
маршрутизации будет работать быстрее, чем обычный поиск порта по номеру, 
каким бы странным это не казалось.  
Слабым местом данной системы является функция f, зная которую 
злоумышленник может без труда находить коды портов по адресам, поэтому 
главным местом для защиты должна быть защита функции на физическом (в 
виде «оракула») уровне, а также противодействие «coffee-break» атаке. 
Отметим также возможную масштабируемость такой схемы – соединяя 
маршрутизаторы между собой и используя таблицы маршрутизации, где вместо 
 
 
381 
номеров портов будут записаны коды портов, возможно обеспечить 
маршрутизацию на нескольких уровнях сети. Для адресации в таком случае 
потребуется либо добавлять дополнительные служебные кубиты до отправки, 
либо добавлять их на каждом роутере, что, в принципе, не является 
затруднительным. 
Возможные направления исследования 
1) Исследовать возможность замены протоколов на другие протоколы 
соответствующего уровня, например, использовать BB92 для генерации ключей 
вместо BB84.  
2) Для физического уровня возможно провести качественное и 
количественное сравнение метода распределения ЭПР-пар с идеей квантовой 
телепортации и передачи кубитов по квантовому каналу, например, 
оптоволокну. 
3) Исследовать алгоритм раздачи ЭПР-пар, а также большего числа 
спутанных кубитов, для многоранговых сетей. 
4) Провести сравнительный анализ различных сетевых топологий и их 
возможностей для объединения КВМ для распределения ресурсов. 
5) Исследовать возможность построения маршрутизации на основе 
других быстро разрешимых для КВМ задач. 
Заключение 
Представляет большой интерес дальнейшее исследование методов 
коммуникации между КВМ. В данной работе описаны метод квантовой 
телепортации, Алгоритм Гровера, протокол квантового распределения ключей 
BB84. Предложена схема маршрутизации для сетевой топологии квантовых 
устройств типа «Звезда». Описан принцип работы, а также особенности данной 
схемы. Рассмотрены возможные подходы к развитию идеи пакетной коммутации 
кубитов и предложены направления для дальнейшего изучения. 
 
 
 
 
 
382 
 СТАТЬЯ
Аннотация
. В статье описывается разработка программного обеспечения, 
позволяющего определять фейковые страницы социальной сети «Вконтакте», 
используя методы парсинга информации со страницы, сравнения фотографий, 
семантического анализа записей, построения социальных графов.  
Ключевые слова: cоциальные сети, фейковые профили, фейк, антифейк, 
программное обеспечение. 
Введение 
С ростом популярности социальных сетей пользователи столкнулись с 
большим количеством мошенников, которые регистрировали фейковые 
аккаунты. Таких регистраций стало в несколько раз больше, чем настоящих 
пользователей. Злоумышленники, регистрируясь под видом знакомых или 
дальних родственников, могут входить в доверие для получения определенной 
выгоды или нанесения материального или морального ущерба [1]. 
На данный момент поиск антифейковой стратегии внесен в число 
приоритетов во многих странах, так как не выработана единая наиболее 
эффективная стратегия борьбы с фейковыми страницами [2]. 
Представители Роскомнадзора на своей странице «Вконтакте» назвали 
использование данных других людей для создания аккаунтов «примером 
нарушения закона о персональных данных», поскольку цель подобных действий 
«не может быть признана социально значимой» [3]. Для решения всех 
возникающих вопросов, решено разработать программное обеспечение. 
 
 
384 
Целю работы является разработка практического решения для выявления 
фейковых страниц «Вконтакте». Для достижения конечной цели, были выявлены 
этапы выполнения, такие как: 
1. 
Разбор актуальных аналогов и их функционал; 
2. 
Выявление и изучение необходимых для задачи теоретических 
терминов для определения ложности аккаунта; 
3. 
Анализ и изучение нормативно-правовой базы, относительно 
получения информации из открытых источников; 
4. 
Разработка конечного программного обеспечения, позволяющего 
определять, в соответствии с критериями, может ли страница являться ложной; 
Правовая база 
В начале марта этого года появилась новость о том, что в России вступил 
в силу закон №519-ФЗ, который внес поправки в №152-ФЗ и запретил парсинг 
общедоступных персональных данных [4]. 
Парсинг – это автоматический сбор информации, публикуемой в 
Интернете. 
Вы 
можете 
представить, 
как 
кто-то 
открывает 
браузер, 
просматривает веб-сайт и копирует с него данные. Парсинг – то же самое, только 
ходит не человек, а робот. Так делают поисковики, агрегаторы, скоринговые 
компании, злоумышленники, продающие персональные данные, и многие 
другие [5]. 
С 1 марта 2021 года все стало просто: чтобы законно собирать 
персональные данные из интернета, нужно получить согласие каждого человека, 
чьи данные собираются. То, что человек сам разместил свои данные в открытом 
доступе, больше не имеет значения. 
Есть один вариант, при котором собирать общедоступные персональные 
данные все же можно без согласия каждого конкретного человека: 
формирование готовности будущих специалистов к творческой реализации 
полученных в университете знаний, умений и навыков, помогающих овладеть 
методологией научного поиска, обрести исследовательский опыт или же в 
научно-исследовательских целях. 
 
 
385 
Подготовка к реализации программного обеспечения 
В алгоритме работы парсера (рис. 1), можно выделить три ключевые этапа. 
Их перечень, следующий: 
 
Рис. 1. Блок схема работы программы 
1. Получение доступа к сети и API веб-ресурса; 
2. Извлечение, исследование и обработка; 
3. Экспорт или вывод полученного результата; 
Критерии для определения ложности 
После изучения материалов [6], мы руководствовались такими критериями 
для определения ложного аккаунта, как:  
1) Публикация фотографий в один день или в разные дни, но между 
датами прошел очень большой период времени. Малое количество самих 
фотографий либо их отсутствие. 
2) Получаем количество записей на странице и их содержание. Проверяем 
на наличие в тексте запрещенных или нецензурных выражений или слов. 
3) На фейковых страницах зачастую опубликовано очень мало 
информации о пользователе сети.  
4) В большинстве случаев у фейковых аккаунтов ~ 50 друзей. Также 
пользователи таких аккаунтов подписаны на большое количество страниц.  
5) Случай большого количества друзей, никак не связанных между собой 
6) Количество отметок мне нравится, а также количество людей, 
поделившейся записью пользователя 
 
 
386 
Реализация программного обеспечения 
Программное 
обеспечение 
было 
реализовано 
средствами 
языка 
программирования Python. 
Относительно изученного материала при реализации нами программного 
обеспечения были использовали методы VkApi [7], а именно: 
Самый первый и самый надежный способ, содержащийся в нашем 
проекте, – это определения фейковой страницы по фотографии профиля, поиск 
изображения в Интернете.   
Так как методы, с которыми мы будем работать, принимают только 
числовое значение, мы конвертируем маску в него. После чего мы получаем 
идентификаторы загруженных фотографий пользователя, а также дату их 
загрузки, проверяем диапазон даты добавления фото. 
Даже очень грамотный мошенник может сделать опечатку в слове или 
допустить нелепую ошибку или прибегнуть к использованию нецензурной 
лексики. Использование специализированных инструментов может обеспечить 
выявление таких текстов без прямого участия человека. 
Одним из методов основного функционала является построение 
социальных графов. Перед его реализацией, была построена блок схема (рис. 2) 
построения графа в нашей программе 
 
Рис. 2. Блок-схема построения социальных графов 
 
 
387 
Библиотека NetworkX, прекрасным образом подходит для составления, 
анализа и визуализации графов. В проекте можно создать граф связи друзей. На 
вход подается ID цели, а после заполняется словарь, где ключом является 
ID_друга, а значением список его друзей. 
 
Рис. 3. Визуализация социального графа 
На данном рисунке (рис. 3) изображен граф страницы реального 
пользователя, друзья сгруппированы в кластеры, это значит, что друзья друзей 
пользователя, добавлены друг к другу в друзья. На фейковой странице все друзья 
будут случайными лицами, и объединение в кластеры не произойдет. 
Имеющим 
немалую 
значимость 
применен 
один 
из 
методов 
семантического анализа, а именно метод латентного размещения Дирихле (LDA, 
от англ. Latent Dirichlet Аllocation) [8]. Данный метод применяется для 
тематического моделирования задач. Под такими задачами подразумеваются 
задачи кластеризации или классификации текстов. В нашем случае, извлекаем 
темы из текста стене пользователя, а также выявление рекламных постов. 
Аналоги 
Среди аналогов можно выделить не много сервисов. Примером будет 
являться WebMii – данный ресурс ищет ссылки с именем человека, позволяет 
дать рейтинг «веб-видимости», с помощью которого можно установить 
фейковые аккаунты.  
 
 
388 
Преимуществом нашего программного обеспечения будет являться 
построение социальных графов относительно друзей и сообществ, а также 
семантический анализ текстового содержания на стене «Вконтакте». 
Выводы 
В ходе проделанной работы реализовано работоспособное программное 
обеспечение, для выявления фейковых страниц. 
Были реализованы следующие методы: 
1. 
Парсинг 
информации 
со 
страницы, 
средствами 
методов 
«Вконтакте». 
2. 
Сравнение фотографий пользователя, с фотографиями в интернете. 
3. 
Семантический анализ записей на стене. 
4. 
Построение социального графа на основе списка друзей. 
Планируется реализовать определение фейковой страницы с вероятностной 
мерой. 
 
 СТАТЬЯ
Аннотация
. В статье представлено решение задачи по разработке Web-
системы поддержки деятельности по модерации комментариев в социальных 
сетях, использующее алгоритм классификации токсичных, ругательных 
комментариев. Полученная система будет использоваться в краудсорс сборе 
набора 
данных 
для 
развития 
алгоритма 
классификации 
токсичных 
комментариев.  
Ключевые слова: Web-приложение, система поддержки принятия 
решений, модерация комментариев, классификация текстов. 
Введение 
Сфера бизнеса, связанная с социальными сетями с каждым годом все 
увеличивается, но растет и потребность в модераторах социальных сетей [1], 
однако систем автоматизированной поддержки их работы почти нет. Но с 
популяризацией 
алгоритмов 
обработки 
естественного 
языка 
проблема 
автоматизированной модерации социальной сети становится решаемой. Потому 
задача разработки распределенного Web-приложения для поддержки модерации 
комментариев социальных сетей с помощью алгоритмов классификации текста 
является актуальной. 
Существующие предложения модерации социальных сетей 
На данный момент, во многих социальных сетях внедряются фильтры [2] 
на основе списка запрещенных слов, составляемого модератором. Эти фильтры 
позволяют цензурировать сообщения со специальными запрещенными словами. 
Однако данные фильтры нередко пропускают обидные слова, не внесенные в 
список запретов, либо ошибочно искажают вполне безвредные слова.  
 
 
391 
Существует также крупное приложение для мониторинга СМИ и 
социальных сетей – Медиалогия [3], предлагающее услуги модерации 
комментариев в социальных сетях. Но исследование их вакансии модератора, 
показало, что модерация комментариев в социальных сетях проводится ими 
вручную. 
Новое Web-приложение модерации социальных сетей 
Из всего вышесказанного: мы предлагаем реализовать Web-приложение 
для поддержки деятельности русскоязычного модератора социальной сети  
с использованием линейной классификации для определения комментариев  
с негативным эмоциональным окрасом, ругательствами, токсичностью и т.д. 
 
Рис. 1. Структура разработанного Web-приложения 
 
На рис. 1 представлена структура разработанного Web-приложения. Здесь 
toxic_DB – реализованная в СУБД PostgreSQL база данных, схема которой 
представлена на рис. 2. В базе данных представлены все сущности из Вконтакте, 
анализируемые приложением: UsersVK, PostsVK, GroupsVK, Comments. Также в 
базе данных, в таблице AnalysisRequests, хранятся запросы на анализ, а в таблице 
Users все авторизированные в приложении пользователи. 
 
 
392 
 
Рис. 2. Схема базы данных toxic_DB
 
 
393 
 
Модуль classifierAPI – это API, реализованное на языке программирования 
Python и фреймворке Flask [4], организующее взаимодействие с vk_api для 
получения данных о пользователях, постах, социальных группах и их 
комментариях в социальной сети Вконтакте. Также данный модуль реализует 
классификацию токсичных комментариев на основе собранного нами набора 
данных из вручную размеченных 5000 записей, обученной на нем векторной 
модели Word2Vec, реализованной в библиотеке Gensim [5] и линейного 
классификатора NBSVM.  
Модификация метода опорных векторов с использованием наивного 
байесовского алгоритма (NBSVM) [6] – это реализация метода опорных 
векторов, в которой вектора построены на основе коэффициентов логарифма 
наивного байесовского алгоритма в качестве значений характеристик. Данный 
алгоритм выбран поскольку он более стабилен и защищен от переобучения на 
малых наборах данных [7], чем нейронные сети и иные линейные 
классификаторы. Также он показал хорошие результаты классификации на 
тестовой выборке. Точность классификации составила 86.4%. 
На рис. 3 представлен алгоритм классификации поступающего в api 
сообщения. По подобному, но упрощенному, алгоритму проводится также 
классификация с помощью готовых моделей Gensim для получения меток об 
эмоциональном окрасе сообщения: позитивном, негативном – определения 
наличия упоминания о личности, месте организации. С помощью простого 
фильтра ругательств определяется, содержится ли в сообщении ненормативная 
лексика.  
 
 
 
394 
 
Рис. 3. Алгоритм классификации токсичных сообщений 
 
Таблица 1. Пример результатов классификации комментария  
Название параметра 
Значение параметра 
Текст комментария 
Тьфу пропащее поколение. То ли дело в наше время 
никто в интернете за нас ничего не решал домашку 
списывали лично у одноклассников! 
Значение токсичности 
0.67 
Наличие указания личности 
0 
Наличие указания места 
0 
Наличие указания организации 
0 
Позитивный эмоциональный окрас 
0.14806 
Негативный эмоциональный окрас 
0.48439 
Нейтральный эмоциональный окрас 
0.41491 
Наличие ругательств 
0 
 
 
395 
В таблице 1 приведен пример параметров, получаемых в следствие 
классификации сообщения. 
Далее был разработан backend-сервис mainAPI на языке PHP с 
фреймворком Laravel, представляющий собой RESTfull API, для работы с базой 
данных по комментариям, пользователям постам и группам. Для проверки 
стабильности его работы были написаны сидеры и тесты.  
Также было создано отдельное API – toxicAuth, на PHP с Laravel, для 
аутентификации с применением jwt-токена. То, что данный функционал отделен 
от основного backend-сервиса, повышает расширяемость приложения, а также 
упрощает его многопользовательское использование. В случае если будет 
создано несколько различных сервисов для frontend и backend, данные об одном 
и том же пользователе могут быть использованы в каждом из них. 
На рис. 4 представлена схема распределенной авторизации, реализованная 
в данном приложении. 
 
Рис. 4. Схема процесса авторизации в Web-сервисе 
 
Модуль 
toxicFront 
же 
представляет 
собой 
frontend 
приложение, 
разработанное с использованием js-фреймворка React. На данный момент 
реализован функционал аутентификации и получения данных из mainAPI, 
 
 
396 
созданы страницы для него, а именно: страница со всеми возможными запросами 
к mainAPI и возможностью их протестировать, страница с возможностью 
получения всех пользователей, групп, комментариев и постов. Страница личного 
кабинета модератора представлена на рис. 5.  
 
Рис. 5. Страница личного кабинета модератора 
 
На ней представлены информация о профиле модератора и все его запросы 
на анализ пользователей, групп, постов и комментариев с оценками токсичности. 
Заключение  
В данной статье представлена разработанная Web-система поддержки 
деятельности русскоязычного модератора социальной сети. Специально для 
данной системы был собран и вручную размечен набор данных из 5000 тысяч 
записей, на котором обучены векторная модель Word2Vec и классификатор 
NBSVM, точность работы которого 86.4%. Также был создан серверный проект 
на Laravel, осуществляющий взаимосвязь базы данных, API авторизации с 
помощью jwt-токенов, API классификации сообщений, работы с vk_api и 
клиентской части. Также реализована клиентская часть на React.  
 
 
397 
В будущем будет окончательно доработана клиентская часть этого 
приложения 
для 
использования 
его 
модераторами. 
Также 
возможно 
использование имеющихся наработок для создания более стабильного и 
семантически значимого набора данных, а также определения более 
специфических признаков оскорблений с помощью краудсорсинга, что может 
привести к повышению точности классификации и, как следствие, облегчению 
деятельности модератора.  
 
 СТАТЬЯ
Аннотация
. В статье обсуждаются геймификация учебного процесса с 
помощью 
Майнкрафт 
платформы. 
Представлена 
ее 
реализация 
с 
использованием элементов безопасности, включающие в себя хеш-функцию 
bcrypt, протокол HTTPS и администрирования OC CetnOS. 
Ключевые слова: Майнкрафт, геймификация, платформа, безопасность, 
bcrypt. 
Введение 
В связи с ситуацией, возникшей из-за пандемии новой коронавирусной 
инфекции, 
образовательные 
учреждения, 
в 
том 
числе 
Тюменский 
Государственный Университет, перешли в онлайн формат. 
В онлайн образовании есть свои достоинства и свои недостатки. Среди 
достоинств можно отметить отсутствие привязанности процесса обучения к 
определенному месту, учиться можно в любом удобном месте, где есть 
компьютер и Интернет. Если не было возможности присутствовать на занятии, 
можно просмотреть его запись [1]. Среди недостатков – нарушение 
коммуникации между преподавателем и студентами из-за отсутствия живого 
общения, а также снижение интереса к обучению.  
Стараясь сохранить достоинства онлайн обучения, мы рассмотрели 
вариант 
использования 
Майнкрафт 
платформы 
для 
геймификации 
образовательного процесса. Мы разрабатываем Майнкрафт платформу для 
проведения занятий преподавателями кафедры информационной безопасности 
Тюменского Государственного Университета. 
 
 
399 
На платформе моделируется ситуация живого общения в лекционной 
аудитории. Каждый пользователь представлен персонажем из компьютерной 
игры Майнкрафт, а с помощью общей электронной доски преподаватель сможет 
рассказывать лекцию, принимать лабораторные работы у студентов, проводить 
различные конференции и мероприятия. В том числе студенты смогут 
показывать свои лабораторные работы, а преподаватель сможет принимать их.  
В результате внедрения элементов геймификации повышается интерактивность 
обучения и включенность обучающихся в образовательный процесс [2]. 
Разработанная Майнкрафт платформа может быть использована не только 
студентами и преподавателями Тюменского Государственного Университета, но 
и предоставляться школам, образовательным центрам, даже интегрироваться в 
другие онлайн платформы для обучения. 
Платформа является своеобразным бесплатным аналогом платного 
Minecraft Education, представляющим собой набор инструментов, созданный 
специально для учителей. 
Цель и задачи исследования 
Целью исследования является разработка прототипа защищенной 
Minecraft-платформы для внедрения геймификации в учебный процесс кафедры 
информационной безопасности ТюмГУ. 
Для достижения поставленной цели были поставлены следующие задачи: 
1. Освоение пользовательского интерфейса облачного сервиса Azure 
2. Разработка лаунчера Minecraft для кафедры ИБ 
3. Разработка и конфигурация сервера Minecraft 
4. Внедрение модулей на интернет, браузер и голосовой чат в Minecraft 
5. Разработка образовательного пространства 
6. Разработка 2-х сайтов для внедрения демонстрации экрана в Minecraft с 
использованием технологии WebRTC, развертывание сайтов на хостинге. 
 
 
 
 
400 
Технологии, используемы для разработки 
Облачный сервис Azure представлен на рисунке 1, ОС CentOS, LAMP 
(комплекс серверного программного обеспечения: Linux, Apache, MySQL, PHP), 
технология WebRTC (web-технологии), СУБД MySQL (сервис phpMyAdmin), 
хеш-функция Bcrypt, Javascript, Java, HTML, PHP. 
Практическая реализация 
1. 
Для осуществления наших целей мы использовали облачный сервис 
от Microsoft Azure, а именно взаимодействие с виртуальной машиной и 
настройками ее среды. 
 
Рис. 1. Рабочий стол Azure 
2. 
Использовали комплекс серверного программного обеспечения 
LAMP для того, чтобы установить и настроить веб-сервер с целью использования 
графического управления базой данных MySQL, а также использование сайта 
для регистрации новых пользователей с использованием хеш-функции Bcrypt. 
[4] Cконфигурировали настройки лаунчера, который представлен на рисунке 2 
для безопасного подключения пользователей на сервер, изменили модуль 
WebDisplays для использования интернета c помощью декомпиляции некоторых 
java классов и их настройки для игры на сервере. 
 
 
401 
 
Рис. 2. Главное меню Лаунчера 
 
3. 
Для установки и настройки сервера мы выбрали операционную 
систему CentOS (дистрибутив Linux), она стабильная, имеет высокий уровень 
безопасности и надежности и подходит в качестве администрирования как для 
студентов, специализирующихся на кафедре информационной безопасности, так 
и 
для 
администраторов. 
Для 
загрузки 
необходимых 
файлов 
мы 
взаимодействовали с файловым менеджером WinSCP по протоколу SFTP 
(безопасная подсистема SSH, SSH File Transfer Protocol) [5]. 
4. 
Для демонстрации экрана в самом Minecraft, мы использовали 
модуль для взаимодействия с интернетом WebDisplays, демонстрация работы 
представлена на рисунке 3, а также дополнительный модуль для голосового чата 
Voice Chat, демонстрация работы представлена на рисунке 4, с помощью 
которого студенты и преподаватели смогут общаться между собой. 
 
 
402 
 
Рис. 3. Модуль WebDisplays 
 
Рис. 4. Модуль Voice Chat 
5. Были рассмотрены различные варианты взаимодействия среде 
Майнкрафт.  
Взаимодействие «студент-студент» 
Студент может общаться со своим преподавателем в отдельной аудитории 
Майнкрафт. При желании можно демонстрировать свой экран и показывать 
лабораторные работы. 
Взаимодействие «студент-преподаватель» 
 Коммуникация между студентами происходит в аудитории Майнкрафт. 
Один студент может показывать свой экран и при этом делиться советами. Также 
они могут разговаривать по учебе и делать лабораторные работы. Преподаватель 
 
 
403 
может работать со своими студентами в аудитории. Рассказывать лекции, 
проводить различные мероприятия и принимать лабораторные работы. [3]  
Для взаимодействия «студент – преподаватель» и ощущения атмосферы 
учебы, была построена одна из аудиторий нашего университета, представленная 
на рисунке 5 – это Аудитория 111 им. профессора Александра Николаевича 
Дегтева, аудитория позволит преподавателю проводить лекции или различные 
мероприятия. Для взаимодействия «студент – студент», были построены 
свободные пространства под задачи студентов с возможностью мульти-
коммуникации нескольких студентов, например, это позволит студентам в 
обсуждении лабораторных работ, а также в решении некоторых учебных задач.  
 
Рис. 5. Аудитория 111 в Майнкрафт 
 
6. 
Было разработано два сайта с использованием технологии webRTC, 
схема представлена на рисунке 6. Сайты были размещены и настроены на 
хостинге от Microsoft Azure с последующим применением на платформе 
Minecraft [6]. Первый сайт представлен на рисунке 7 и второй сайт представлен 
на рисунке 8. 
 
 
404 
 
Рис. 6. Схема webRTC 
 
Рис. 7. Сайт для демонстрации 
 
Рис. 8. Сайт для трансляции 
Безопасность 
Для обеспечения безопасности в нашем проекте мы использовали 
протокол HTTPS для всех сайтов. В нашем случае нам помог сервис Azure, на 
котором и размещен наш сервер. 
Настройка 
и 
администрирование 
ОС 
CentOS 
для 
безопасного 
взаимодействия, подключение к консоли управления по SSH (порт 22) [7], 
 
 
405 
настройка Firewall [8], использование хеш-функции Bcypt для хранения паролей 
в базе данных MySQL, изображения представлены на рисунке 9. 
Когда студент или преподаватель заходит в лаунчер, ему требуется ввести 
пароль, без которого доступ к серверу невозможен.  
 
Рис. 9. Обеспечение безопасности 
Заключение 
Был разработан прототип майкнарфт-платформы для геймификации 
учебного процесса кафедры ИБ ТюмГУ.  В рамках исследования был освоен 
пользовательский интерфейса облачного сервиса Azure, разработан лаунчер 
Minecraft для кафедры ИБ, разработан сервер Minecraft, внедрен модуль на 
интернет, браузер и голосовой чат в Minecraft, разработаны два сайта для 
внедрения демонстрации экрана в Minecraft с использованием технологии 
WebRTC, сайты размещены и настроены на хостинге. Было разработано 
образовательное пространство для повышения интерактивности обучения и 
включенности обучающихся в образовательный процесс. Прототип майкнарфт-
платформы    предоставляет возможность выхода из пандемии с сохранением 
всех достоинств онлайн формата с точки зрения образовательного процесса. 
Перспективы развития платформы 
В планах, помимо аудитории построить полноценный корпус, в котором 
каждый студент, школьник или преподаватель мог бы свободно перемещаться и 
общаться со всеми как в реальном корпусе. Так же планируется внедрить 
 
 
406 
сервисы аутентификации Microsoft для университетской авторизации ТюмГУ 
(использовать хеширование паролей при другой авторизации), разработать 
именной лаунчер ТюмГУ, разместить платформу на серверах ТюмГУ и провести 
ее апробацию на занятиях студентов, специализирующихся на кафедре 
информационной безопасности.  
 СТАТЬЯ
Аннотация
. В статье представлен вариант организации учебной работы 
преподавателей со студентами через приложение для настольных операционных 
систем с использованием технологии Git. 
Ключевые слова: Git, Electron, JavaScript, клиент-сервер, API, 
кроссплатформенное приложение. 
 
Сейчас существует очень много способов взаимодействия между 
преподавателями и студентами. Но такие, которые позволили бы сдавать работы 
удобным, быстрым и эффективным способом, отсутствуют. Именно эту задачу 
мы решали с помощью приложения, которое работает с системой Git. 
Git – одна из наиболее популярных систем контроля версий [4]. Система 
позволяет сохранять информацию, в нашем случае программный код на разных 
этапах разработки в локальном репозитории и синхронизировать данные с 
удаленным репозиторием. Таким образом система подходит для использования 
в целях сдачи учебных заданий, позволяя студенту отправить свою работу на 
удаленный сервер, а преподавателю – просмотреть историю изменений в случае 
длительной поэтапной работы над проектом или лабораторной. 
Для того, чтобы получить кроссплатформенное приложение, то есть чтобы 
была возможность запускать его на macOS, Linux и Windows, было принято 
решение использовать такой инструмент, как Electron [1] – framework для языка 
программирования JavaScript. Он позволяет использовать все возможности 
операционной системы, например, уведомления, а также разрешает написать 
единый код для всех ОС. Это становится возможным благодаря использованию 
 
 
408 
web-технологий. То есть написанный код, является веб сайтом, который 
встраивается и работает, как отдельное настольное приложение. 
Наше приложение позволяет создавать преподавателям группы, добавлять 
студентов, проверять работы. Все взаимодействия представлены на рис. 1. 
Приложение с помощью REST API запрашивает данные о студентах, 
преподавателях, группах у нашего сервера, написанного на JavaScript с 
применением Express Framework [5]. Сервер получает запрашиваемые сведения 
из базы данных PostgreSQL. А все взаимодействия с удаленными репозиториями 
происходят с помощью GitHub API.  
 
 
Рис. 1. Схема архитектуры работы приложения 
 
Ключевые же возможности приложения состоят в том, что выдача, сдача и 
проверка лабораторных работ реализована с помощью Git. Для этого 
используется сервис GitHub, предоставляющий возможность создания и 
хостинга Git-репозиториев, а также web-интерфейс и REST API для работы с 
ними. С помощью запросов к API GitHub мы и получаем возможность создать 
удобную среду для взаимодействия преподавателей со студентами. 
 
 
409 
Основная технология, которая осуществляет работу с Git – NodeGit [2], 
библиотека 
NodeJS, 
которая 
предоставляет 
удобный 
интерфейс 
для 
взаимодействия с Git. 
 
 
Рис. 2. Пример кода создания репозитория через NodeGit 
 
 
Алгоритм учебного процесса со стороны преподавателя выстроен так: 
1. Преподаватель регистрируется в системе, администратор присваивает 
ему роль преподавателя. 
2. Преподаватель добавляет лабораторные работы (для начала без 
привязки к группам), при этом автоматически создаются репозитории на GitHub 
с загруженными файлами. 
3. Преподаватель присваивает добавленные лабораторные нужным 
учебным группам. 
4. Если есть работы, которые можно проверить, то преподаватель 
нажимает «Начать проверку», и ему на компьютер скачивается репозиторий 
студента в настроенную папку по умолчанию. 
5. Код и изменения преподаватель также может просматривать через веб-
интерфейс GitHub. 
6. Если задание принято, преподаватель нажимает «Принять». 
 
 
410 
 
Рис. 3. Пример работы с веб-интерфейсом GitHub 
Алгоритм учебного процесса со стороны студента: 
1. Студент регистрируется в системе. 
2. Преподаватель добавляет его в определенную группу. 
3. Студент может посмотреть список лабораторных для выбранной 
группы и начать выполнение выбранной работы. 
4. При начале выполнения студенту скачивается на компьютер 
репозиторий лабораторной с текстом задания и файлами-шаблонами в ту папку, 
которую студент выбрал в настройках. 
5. Студент выполняет работу, сохраняет промежуточные этапы своей 
работы в локальном репозитории и синхронизирует с удаленным. 
6. После того, как студент закончил работу, он нажимает «Сдать работу», 
и у преподавателя в списке лабораторных отмечается, что студент отправил 
работу на проверку. 
7. Студент ждет результата проверки и при успехе задание отмечается 
зеленым цветом в общем списке. 
 
 
411 
 
Рис. 4. Пример интерфейса приложения со стороны студента 
Таким образом мы получаем инструмент, который позволяет эффективно 
работать с заданиями экономить время, как преподавателей, так и студентов, а 
также позволяет получить навыки работы с Git, которые будут полезными для 
создания большинства профессиональных программных продуктов. 
Благодарности 
Статья подготовлена в рамках разработки образовательного кейса для НТУ 
Сириус при финансовой поддержке РФФИ в рамках научного проекта № 19-37-
51028. 
 СТАТЬЯ
Аннотация
. В данной статье описывается идея, принцип работы и 
архитектура разработанного мобильного приложения для поиска ближайших 
пунктов приема мусора в зависимости от категории сдаваемых отходов, 
построение оптимального маршрута от указанного места до выбранного пункта.  
Ключевые 
слова: 
мобильное 
приложение, 
переработка 
мусора, 
утилизация, экология, Flatter, Django, API. 
Введение 
На сегодняшний день в России действует более 300 комплексов по 
переработке мусора различных мощностей [1]. Однако лишь 7,5% твердых 
коммунальных отходов (далее – ТКО) перерабатывается, оставшаяся часть 
отправляется 
на 
полигоны 
для 
отходов 
– 
санкционированные 
и 
несанкционированные [2]. Это происходит из-за того, что заводам не хватает 
отсортированного сырья, по разным данным, их загруженность составляет от 
30% до 60%. Причем большую часть отходов составляют промышленные и 
импортное вторсырье, и лишь малая часть приходится на раздельно собранный 
мусор.  
Проблема заключается в том, что, несмотря на положительный взгляд 
большинства россиян на раздельный сбор мусора, и то, что многие готовы уже 
сейчас этим заниматься, сталкиваясь с такими сложностями, как непонятные 
правила сортировки, необходимость следить: где, что и как именно принимают, 
люди часто бросают это дело, находя его чересчур утомительным [3]. Эти 
сложности возникают по той причине, что пункты раздельного сбора отходов 
существуют чаще как частные инициативы небольшого масштаба, а потому 
требования в каждом пункте разнятся.  
 
 
413 
По официальным данным бытовой мусор занимает не очень большую 
территорию – лишь 2,3% от всей загрязненной территории России. Но ежегодно 
количество бытового мусора увеличивается, а место для его хранения – 
уменьшается (рис. 1). В 32 регионах уже через 5 лет не будет места для его 
складирования, поэтому уже сейчас нужно предпринимать действия для 
сокращения производства бытовых отходов.  
 
Рис. 1. График роста бытовых отходов 
Идея решения 
В качестве решения поставленной проблемы необходимо разработать 
клиент-серверное мобильное приложение для облегчения доступа к актуальной 
информации о местах сбора бытовых отходов в целях повышения уровня 
экологической грамотности населения и стимулирования жителей г. Тюмени к 
раздельному сбору мусора. 
Серверная часть приложения должна будет хранить и, при поступлении 
соответствующего запроса, выдавать информацию о пунктах приема мусора. 
Клиентская часть будет отображать загруженную из серверной или 
локальной базы данных информацию о местах возможной сдачи мусора, причем 
места должны удовлетворять выбранным пользователем категориям сдаваемого 
мусора. Предоставленная информация должна отображаться в виде точек на 
карте. Пользователь сможет выбрать желаемый пункт приема мусора из 
 
 
414 
доступных, и приложение построит маршрут до него от местоположения 
пользователя или от другой заданной точки.  
Реализация 
На рис. 2, 3 представлены схемы работы сервиса. 
 
Рис. 2. Серверная часть схемы работы сервиса 
 
Рис. 3. Мобильная часть схемы работы сервиса 
 
 
415 
Серверная часть 
В серверной части нашего решения реализовано горизонтальное 
масштабирование, т.е. увеличение производительности проекта и разделение 
его архитектуры путем добавления нескольких серверов. Схема базы данных 
серверной части представлена на рис.3. 
Веб-сервер (NGINX) принимает запросы извне, обрабатывает их и 
отправляет ответ в соответствии со стандартом протокола на HTTP-сервер.  
HTTP-сервер (Gunicorn) работает с Django-приложением, содержащим его 
“ядро” – модуль CORE. 
Модуль COREсодержит: 
- модели (models), которые выступают источниками информации о наших 
данных; 
- представления (views), которые реализуют HTTP-методы; 
- сериализаторы (serializers), преобразующие данные моделей, описанных 
на языке программирования Python, в JSON; 
- сервис (service), содержащий бизнес-логику приложения. 
Серверная 
база 
данных 
(PostgreSQL) 
принимает 
SQL-запросы, 
обрабатывает их, используя базу данных, представленную на рис.4, и отправляет 
результаты обратно HTTP-серверу. 
Серверная база данных состоит из следующих таблиц: 
1. place – содержит информацию о точках, которые располагаются на 
карте: их адрес, краткое описание, время работы и координаты (широта 
и долгота); 
2. place_type – содержит типы мусора (всего было выделено 15):  
макулатура, стекло, пластик, металл, текстиль, дерево, опасные отходы, 
батарейки, лампочки, бытовая техника, крышечки, резина, тетрапаки, 
благотворительность и “прочее”, то есть то, что нельзя отнести ни к 
одной из перечисленных выше категорий; 
3. place_subtype – содержит информацию о том, чем является точка, 
отмеченная на карте: пунктом переработки мусора, пунктом его сбора 
 
 
416 
или же местом проведения какого-либо мероприятия экологической 
тематики; 
4. place_place_type – связующая, так как между первыми двумя таблицами 
существует отношение “многие ко многим”: в каждом пункте можно 
сдать/утилизировать несколько типов мусора, и каждый тип мусора 
может находиться в нескольких точках сбора/утилизации по городу. 
 
 
Рис. 4. Схема серверной базы данных 
 
Мобильное приложение  
Мобильное приложение было разработано на языке программирования 
Dart. Стек используемых технологий:  
Flutter – фреймворк для написания кроссплатформенных приложений: 
SQLite3 – СУБД, которая использовалась для сохранения на мобильном 
устройстве уже полученной с серверной БД информации; 
Google Maps API – инструмент для добавления карты в мобильное 
приложение. 
417 
На рис.4 представлен прототип мобильного приложения. При запуске 
приложения, в результате обмена сообщениями с сервером посредством 
интерфейса API, происходит загрузка данных с сервера, с последующим 
сохранением в локальную БД телефона.  
После 
запуска 
приложения 
пользователь 
попадает 
на 
карту, 
первоначальным фокусом которой будет местоположение устройства.  
После окончания загрузки данных с сервера и построения карты (см. рис.4, 
правая часть), пользователь начинает взаимодействовать с приложением: ему 
доступна возможность просматривать карту, обнаруживать маркеры, получать 
информацию об отмеченных на карте точках (см. рис.5, левая часть), 
использовать функционал построения маршрута от любой возможной точки 
(включая текущее местоположение) до искомого маркера.  
Рис. 5. Прототип мобильного приложения 
 
 
418 
Заключение  
 
В рамках проведенной работы было разработано мобильное приложение 
для поиска ближайших пунктов приема мусора, удовлетворяющих заданным 
категориям, и построения оптимального маршрута до них. Приложение 
реализовано на языке Dart с использованием фреймворка Flutter. Серверная часть 
приложения реализована на языке Python с помощью фреймворка Django.  
Также 
были 
задействованы 
две 
СУБД: 
SQLite, 
PostgreSQL. 
SQLite 
использовалась для сохранения на мобильном устройстве уже полученной с 
серверной БД информации, что позволило избежать повторных идентичных 
запросов к серверу, в том время как PostgreSQL принимала SQL-запросы, 
совершала обработку и возвращала результат HTTP-серверу. 
 СТАТЬЯ
Аннотация
. В статье представлен процесс разработки сервиса для 
упрощения работы с ИС «Модеус» путем синхронизации его календаря со 
сторонними сервисами, более подробно рассматривается синхронизация с 
Google Calendar. 
Ключевые слова: Модеус, Управление учебным процессом, Гугл 
Календарь, Веб-сервис, Цифровая технология, синхронизация. 
 
ВВЕДЕНИЕ 
В нескольких университетах России используется информационная 
система «Модеус». Она предназначена для составления и показа расписания как 
для преподавательского состава, так и для студентов, учета успеваемости и 
посещаемости. Можно скачать расписание на неделю в формате iCal [1]. Однако, 
у этой системы есть несколько недостатков, которые можно решить созданием 
стороннего сервиса для работы с ним. Среди главных проблем можно выделить: 
отсутствие удобной синхронизации календаря Модеуса с личным или рабочим 
календарем 
в 
стороннем 
сервисе, 
уведомления 
приходят 
только 
на 
университетскую электронную почту. Каждый раз для получения доступа 
необходима авторизация в системе, push-уведомления или уведомления на 
личную почту не приходят.  
Требуется разработать дополнительный сервис, который улучшит работу 
с системой «Модеус». Сервис должен синхронизировать календарь занятий и 
личный календарь, такой как Google Calendar, присылать уведомления при 
изменении расписания занятий, сократить время доступа к расписанию занятий. 
 
 
 
420 
1. 
ВЫБОР КАЛЕНДАРЯ 
В качестве синхронизируемого календаря был выбран Google Calendar по 
нескольким причинам: он есть во всех Android-смартфонах, и его можно без 
проблем поставить на iOS. Google Calendar умеет отправлять push-уведомления 
в браузеры для напоминания о событиях, в данном случае событиями являются 
занятия в университете. Google имеет очень удобный и понятный API [2], с 
которым просто работать. Также Google Calendar тесно интегрирован с 
остальными сервисами Google. Полезным для нас будет Google Maps, который 
будет показывать, где будет проходить занятие. 
2. 
РАЗРАБОТКА СЕРВИСА 
2.1 Определение принципа работы сервиса авторизации Modeus 
Для определения принципа работы сервиса авторизации использовались 
Chrome Dev Tools и Fiddler. При первичном заходе на главный URL Modeus – 
utmn.modeus.org идет перенаправление на сервис аутентификации fs.modeus.org. 
В свою очередь, fs.modeus.org делает запрос на auth.modeus.org на генерацию id 
сессии, который потом используется на fs.modeus.org для авторизации. Если 
напрямую зайти на auth.modeus.org, то мы попадем на админ-панель WSO2 
Identity Server – средства для управления доступом к различным веб-
приложениям с открытым исходным кодом. 
На WSO2 Identity Server есть документация[3], в которой указано, что у 
Identity Server есть API для авторизации. Но, при попытке обратиться к API 
auth.modeus.org на клиенте возникает ошибка CORS – cross-origin resource 
sharing [4]. Получается, что на API auth.modeus.org можно попасть только с 
домена modeus.org, и написать запрос для работы с API вне этого домена 
невозможно, и нужно использовать другие методы для работы с Modeus. 
2.2 Обход ограничения доступа с других доменов 
Для обхода ограничения CORS было решено имитировать работу 
пользователя в браузере с помощью программных средств. Было решено для 
этого использовать библиотеку Puppeteer [5] для Node.js, главным языком для 
разработки всего сервиса стал также Node.js [6]. 
 
 
421 
Puppeteer имитирует работу человека в браузере: можно заполнять поля, 
нажимать на кнопки, ждать появления элементов на странице, на это все у 
Puppeteer есть соответствующие методы.  
В начале работы с Puppeteer было обнаружено, что Modeus защищен от 
подобного рода манипуляций с помощью невидимого div’а, сообщающим об 
отсутствии поддержки браузером JavaScript, однако, добавив несколько настроек 
в Puppeteer данная проблема была решена, и можно было приступить к 
получению расписания на неделю в формате iCal, эта функция предусмотрена 
самим Модеусом. 
Работа программы имитации работа браузера: изначальный URL – 
utmn.modeus.org, при заходе на utmn.modeus идет JS-редирект на auth.modeus, 
где получается токен для логина, потом идет опять JS-редирект на fs.utmn – 
страницу входа. Ждем рендера нужных элементов формы авторизации в Modeus, 
метод ожидания Puppeteer принимает одним из аргументов CSS-селектор, при 
нахождении которого выполнение кода продолжается. Вводим логин и пароль, 
отправляем форму. Ждем загрузки календаря, и ищем CSS-селектором div, при 
нажатии на который скачивается файл расписания. Вызываем метод нажатия на 
найденный div и получаем файл расписания в формате iCal. 
Из-за того, что пока не написан клиент сервиса, учетные данные Modeus 
передаются через терминал. У Modeus нет особенностей авторизации, и для 
входа хватит только логина и пароля. 
2.2 Обработка iCal-файла. 
После скачивания получаем iCal-файл, который представляет собой 
массив объектов со следующей структурой и примерными значениями: 
 UID: '4094ae0b-5ca5-4706-ab6d-71aab3b10101', 
 DateStart: 20210521T140000 
 DateEnd: 20210521T153000 
 Summary: Информационные технологии в прикладных системах / 
Классификация 
документов 
(Naive 
Bayes 
Classifier) 
/ 
ИТвприкладныхсистемах-ЛБ-22ИСиТ189-1 
 
 
422 
 Location: УЛК-05 / 306 (УЛК-05) 
 Description: 
Лабораторное занятие / Учебно-исследовательская 
работа 
 Преподаватель: Бидуля Юлия Владимировна + посмотреть в полной 
версии + URL. 
Данный файл считывался модулем fs Node.js как обычный текст, затем с 
помощью библиотеки ical2json [7] преобразуем iCal в JavaScript-объект. На 
выходе получаем массив объектов. Каждый объект нужно обработать, в 
основном нужно было поменять названия нескольких полей, чтобы это 
правильно работало с Google Calendar API. Поля Summary, Description, 
Преподаватель, и номер аудитории из Location были объединены. В поле 
преподавателя осталось только ФИО преподавателя. Из полей DateStart и 
DateEnd были созданы JS-даты, для API Google Calendar помимо даты и времени 
нужен часовой пояс, который был вшит в поле DateStart и DateEnd. Была 
написана функция, которая принимает название корпуса, и возвращает адрес, к 
примеру: getAddress(‘УЛК-05 / 306 (УЛК-05)’)  вернет  ‘Перекопская ул., 
15АТюмень, Тюменская обл., 625003’. Это нужно для Google Maps. Событие 
может содержать место, и в таком формате при нажатии на адрес откроется 
Google Maps и покажется место. 
2.3. Перенос данных в Google Calendar 
Для работы с Google Calendar API нужно сначала получить ключ API и 
выдать права ключу на календарь в Google Cloud Platform [8]. Этот ключ, и 
токены для работы с ним зашиваются в googleauth из Node.js-модуля googleapis 
[9]. 
Потом вызываем метод добавления события Google Calendar из модуля 
googleapis, куда передается JS-объект события. 
Так как для данного сервиса пока не написан клиент, к ключу API был 
привязан Google-аккаунт через сервис Google OAuth 2.0 Playground [10].  Когда 
будет написан фронт, авторизация будет обычной через Google Account, с 
запросом на использование календаря пользователя. 
 
 
423 
 
Рис. 1. Занятия показываются в Google Calendar. 
 
2.4. Уведомления об изменении расписания 
Для мониторинга изменения расписания вычисляется контрольное 
значение каждого занятия, у каждого занятия есть ID. Контрольное значение 
складывается из строк: 
ܸ= ܦܽݐ݁ܵݐܽݎݐ+ ܦܽݐ݁ܧ݊݀+ ܮ݋ܿܽݐ݅݋݊, 
где DateStart – начало события, DateEnd – конец события, Location – место. 
PostgreSQL [11] был выбран в качестве базы данных проекта. В БД есть 
таблица следующего вида: ID урока: контрольное значение. С определенным 
интервалом запускается перерасчет контрольного значения. Оно поменяется, 
если поменялось хотя бы одно значение, из которого оно складывается. Если оно 
поменялось, то в браузер идет push-уведомление [12], идет поиск события в 
Google Calendar и изменение данных, в БД заносится обновленное значение 
контрольного значения. 
 
 
 
424 
 
ЗАКЛЮЧЕНИЕ 
В процессе работы над проектом поставленные задачи были выполнены: 
авторизация в Google и Modeus, получение расписания и его перенос в Google 
Calendar, приходят push-уведомления в браузер при изменении расписания. 
Планируется создать веб-клиент для удобной работы с сервисом, с 
нормальной авторизацией в Google-аккаунт и аккаунт Modeus. Также нужно 
сделать возможной работу не только с Google Calendar, но и другими 
календарями, в первую очередь Apple iCloud Calendar. 
 
 СТАТЬЯ
Аннотация
. В статье представлена реализация приложения помощника 
для обработки изображений, от кадрирования фото на документы (паспорт) до 
восстановления дефектов на фотографиях. 
Ключевые слова: обработка, изображения, фотографии, восстановление, 
дефекты. 
Введение 
С работой маленьких фотосалонов или типографий знакомо большинство 
населения, люди обращаются к их услугам, когда им нужно фото на документы 
различного рода, что-то распечатать, сделать ксерокопию или обработку 
фотографии. 
Трудоемко-монотонную 
работу 
совершают 
сотрудники 
фотосалонов, 
раз 
за 
разом 
выполняя 
кадрирование 
изображения, 
фотографирование, обработку и прочее. Цифровой помощник нацелен избавить 
профессионалов 
из 
фотосалонов 
от 
рутинных 
задач, 
позволив 
им 
сконцентрироваться на большем количестве работ. 
Дополнительно к этому одной из самых популярных услуг является 
восстановление фотографий. Зачастую у всех есть старые еще неоцифрованные 
фото родственников, которые могло изрядно потрепать и на них могли появиться 
дефекты. Процесс «лечения» достаточно кропотлив и занимает много времени. 
Если бы у работника была бы возможность восстанавливать не «с нуля», а с 
каких-либо результатов, то процесс обработки изображения существенно возрос 
в скорости. 
Постановка задачи 
Разобранные программа приложение реализует задачу кадрирования 
изображения на определенный формат и задачу восстановления фотографии с 
дефектами. Если первая задача решает рутинность пользователя, то на 
 
 
426 
результатах выполнения второй задачи пользователь может дополнительно 
произвести обработку своими руками, тем самым не тратя время на обработку с 
самого начала. 
К основным задачам можно отнести выполнение простых обработок 
изображений, накладывания фильтра, которые осуществляют несколько 
быстрых манипуляций с выбранным изображением пользователя. 
Для 
решения 
поставленных 
задач 
дополнительно 
используются 
следующие основные библиотеки языка Python: 
 pyqt5 – интерфейс приложения [4]; 
 rembg – удаление фона с изображений [3]; 
 opencv – распознавание лиц [6];  
 pillow – для взаимодействия с изображениями (открытие, сохранение, 
применение фильтров) [5]. 
Вместе с библиотеками для восстановления фотографий применяется 
проект Bringing Old Photo Back to Life [1]. ОнСправка содержит в себе уже 
обученную модель для определения дефектов на изображениях и их 
восстановлении, а также встроена функция улучшения лиц. 
В дополнение к основным функциям разрабатываются следующие 
фильтры/возможности: черное-белый фильтр, вырезание фона, отражение по 
горизонтали, поворот на 90 градусов, «не кадрировать», улучшение лиц. 
Последняя возможность реализована вместе с проектом [1] и, поскольку она 
занимала достаточно много времени на выполнение, было решено вынести ее 
запуск на усмотрение пользователя. 
Экспорт изображения – одна из функций, которая не видна обычному 
пользователю и исполняется во время кадрирования изображения. Данная 
функция необходима для сохранения изображения в нужном качестве для 
печати. Она запускается после кадрирования изображения. Если результат имеет 
малое разрешение, которое не удовлетворяет для печати, то с помощью 
алгоритма увеличения изображений Pillow [5] результат будет увеличен до 
нужного разрешения [7]. 
 
 
427 
Практическая реализация 
В целях реализации описанных функций было разработано программное 
приложение на языке Python [2]. Интерфейс представляет собой единственную 
форму, на которой предоставляется возможность задания необходимых 
параметров обработки изображений. Осуществляется: выбор изображения, 
поворот итогового результата, выбор необходимого формата, обработка и 
сохранение результата. Сохранение результата возможно в форматах “.tiff” и 
“.png”. На рисунках 1-3 представлены различные варианты экранной формы. 
 
 
Рис. 1. Начальное состояние открытой формы 
 
 
 
428 
 
Рис. 2. Форма с выбранным изображением и выбором формата 
 
Рис. 3. Форма с итоговым результатом, после обработки изображения 
 
 
429 
Заключение 
Разработанное приложение решает следующие поставленные проблемы: 
кадрирование изображений на документы и восстановление фотографий с 
дефектами. 
Кроме того, реализованы следующие функции: 
 вырезание фона с изображения; 
 черно-белый фильтр; 
 отражение изображения по горизонтали; 
 возможность повернуть результат на 90 градусов; 
 повышение качества лиц при устранении дефектов. 
В качестве дальнейших перспектив созданного приложения можно 
отметить следующие: 
 создание веб-приложения; 
 оптимизация приложения и применение фильтров в реальном времени; 
 добавление модуля с векторизацией изображений. 
 СТАТЬЯ
Аннотация
. Отслеживание истории веб-запросов персонала в рабочее 
время и определение их продуктивности – одна из основных функций систем 
учета времени. Целью исследования является классификация веб-страниц по 
тематике с помощью машинного обучения на основании их текстового 
содержимого. 
Ключевые слова: веб-страница, классификатор, машинное обучение, учет 
рабочего времени. 
Исследования показывают, что большинство людей уделяет менее 40% 
рабочего времени непосредственно работе [1]. Остальное время они занимаются 
своими делами, листая социальные сети, читая новости или играя в игры. Такой 
неэффективный расход времени приводит к потере денег компаниями, и поэтому 
руководители стремятся различными способами контролировать сотрудников и 
следить, как и насколько эффективно они используют свое рабочее время. 
Один из способов контроля – специальное ПО, которое стало особенно 
актуально после пандемии Covid-19 и перехода на дистанционную работу. Учет 
рабочего времени удаленных сотрудников стал настоящей проблемой для 
руководства компаний, решить которую помогли программы для мониторинга 
удаленных сотрудников. 
Функционал таких систем разнообразен, в частности, одной из главных 
функций является отслеживание активности сотрудников в сети. Однако, в ходе 
анализа существующих систем было выявлено, что их подход к мониторингу 
посещаемых веб-ресурсов не лишен недостатков. 
 
 
431 
В первую очередь это относится к тому факту, что при анализе веб-
ресурсов и распределении их на “продуктивные” и “непродуктивные” исполь-
зуется только база данных с заранее классифицированным набором сайтов. 
В случае, если ресурс не найден, он помечается как неизвестный. Однако сегодня 
каждую минуту появляются новые сайты, и поддерживать актуальность такой 
базы крайне затруднительно, если и вовсе не невозможно. Поэтому имеет смысл 
использовать для целей классификации веб-ресурсов машинное обучение [2]. 
Для адекватного определения продуктивности персонала имеет смысл 
классифицировать ресурсы по темам, а затем выбирать, какие темы являются 
продуктивными и непродуктивными для конкретного сотрудника или отдела. 
Также имеет смысл классифицировать конкретные страницы, а не целые сайты, 
так как разные страницы на одном сайте могут иметь разный характер и 
тематику. 
Для реализации классификации с помощью машинного обучения в первую 
очередь был сформирован датасет из веб-страниц. Для классификации страниц 
было выделено 7 категорий: 
 Развлечения; 
 Новости; 
 Образование; 
 Сайты для взрослых; 
 Сайты для поиска работы; 
 Интернет-магазины; 
 Социальные сети. 
Ввиду отсутствия готового датасета, далее были вручную отобраны 
страницы и определены их категории. Размер датасета составил 303 записи. 
Далее был осуществлен забор контента со всех страниц, из него была вырезана 
HTML-разметка и блоки, описывающие особенности функционирования или 
отображения – <script>, <style>, <audio>, <img> и т.д. Из всего оставшегося 
текста был сформирован датасет и предобработан путем удаления стоп-слов, 
 
 
432 
цифр, специальных символов, слов длиной менее трех букв, а также приведением 
к нижнему регистру. 
На основе полученного датасета, с помощью сервиса Azure Machine 
Learning Studio было обучено пять разных классификаторов [3]: 
 Логистическая регрессия; 
 Нейронная сеть; 
 Лес решений;  
 Джунгли решений; 
 Один против всех. 
Схема обучения представлена на рисунке 1. 
 
 
Рис. 1. Схема сравнения классификаторов 
Лучший результат показал классификатор один-против-всех с точностью 
71.3%. Данный результат был признан недостаточно высоким, и была поставлена 
цель его улучшения. 
Как правило, текстовые элементы веб-страницы, можно разделить на 
следующие категории: 
 
 
433 
 Название страницы; 
 Заголовки (<h1> <h2> и т.д.); 
 Meta keywords; 
 Meta description; 
 Текстовый контент (<p>, <span>, <label> и т.д.). 
На основании этой информации была сформулирована гипотеза о том, что 
точность классификации можно улучшить путем разделения контента на 
выделенные категории и классификации отдельно по каждой из них. 
Для проверки гипотезы, на следующем этапе эксперимента датасет был 
составлен следующим образом: отдельно происходит запись названия страницы, 
всех заголовков, которые присутствуют на странице, в отдельные поля 
записываются meta keywords и meta description, и отдельно весь остальной текст. 
С помощью сервиса Microsoft Azure Machine Learning Studio для каждого типа 
контента было обучено по пять ранее названных типов классификаторов с целью 
выявить лучший. Результаты обучения представлены в таблице 1. 
Таблица 1. Сравнение точности классификаторов 
 
Тип классификатора 
One-vs-All Neural 
network 
Logistic 
regression 
Decision 
forest 
Decision 
jungle 
Тип 
контента 
Текст 
0.822 
 
0.772 
0.633 
0.734 
0.759 
 
Название 
0.800 
0.775 
0.713 
0.725 
0.587 
Заголовки 
0.783 
0.838 
0.716 
0.689 
0.622 
Meta 
description 
0.648 
 
0.662 
0.549 
0.606 
0.606 
Meta 
keywords 
0.759 
0.724 
0.483 
 
0.724 
0.690 
 
Как видно из таблицы, классификатор один-против-всех показал 
наилучшие результаты для текста, названий и meta keywords. А для заголовков и 
meta description лучшей оказалась нейронная сеть. 
 
 
434 
Далее рассмотрим результаты лучших классификаторов по каждой 
категории (табл. 2). 
Таблица 2. Результаты по категориям 
 
Категории веб-страниц 
Для 
взрослых 
Образова
тельные 
Развлека
тельные 
Поиск 
работы 
Новости 
Магазины 
Социальн
ые сети 
Средняя 
точность 
Текст 
100% 
58.3% 
92.9% 
80% 
76.9% 
88.9% 
77.8% 
82.3% 
Название 
100% 
66.7% 
64.3% 
90.9% 
84.6% 
66.7% 
88.9% 
80% 
Заголовки 
83.3% 
81.8% 
100% 
100% 
75% 
87.5% 
55.6% 
83.8% 
Meta 
description 
90% 
28.6% 
76.9% 
90% 
46.2% 
55.6% 
66.7% 
66.2% 
Meta 
keywords 
100% 
66.7% 
80% 
100% 
75% 
33.3% 
60% 
75.9% 
По средней точности лучшим оказался классификатор заголовков, однако, 
как видно из таблицы, разные типы контента на веб-странице по-разному 
работают для разных категорий страниц. У каждого классификатора есть 
категории, которые они определяют лучше, и хуже. Причем какой-то 
классификатор хорошо показывает себя для одной категории, а какой-то – для 
другой. 
Поэтому была сформирована гипотеза о том, что если объединить все 
классификатором определенным образом, то точность можно повысить. 
Поэтому на следующем шаге показатели из данной таблицы были использованы 
в качестве коэффициентов доверия при классификации. 
После получения вероятностей для каждого класса от всех пяти 
классификаторов по типу контента, считается оценка степени принадлежности 
страницы к категории по формуле 1 – вероятности по каждому типу контента 
умножаются на соответствующие коэффициенты доверия и складываются по 
каждой категории страниц. 
ܴ௜= ݇௜ଵ∗݌௜ଵ+ ݇௜ଶ∗݌௜ଶ+ ݇௜ଷ∗݌௜ଷ+ ݇௜ସ∗݌௜ସ+ ݇௜ହ∗݌௜ହ,                    (1) 
где i – номер категории; 
 
 
435 
݇௜ଵ – коэффициент доверия классификатора j к категории i; 
݌௜ଵ – вероятность категории i, полученная классификатором j; 
ܴ௜ – итоговая оценка для категории i. 
Итоговая категория веб-страницы определяется как категория с 
максимальной R. 
Итоговая общая точность классификации, полученная экспериментально, 
составила 87.4%. 
 Таким образом, разделение контента веб-страницы по его типу и отдельная 
его обработка, а также расчет оценки категории на основе полученных индексов 
доверия позволили повысить точность классификации на 16.1% по сравнению с 
первоначальным подходом. 
Основным языком разработки был выбран C#, в первую очередь ввиду 
удобной 
разработки 
под 
Windows. 
Для 
разработки 
веб-приложения 
использовался 
фреймворк 
ASP.NET 
5. 
Для 
десктопного 
приложения 
применялась технология Windows Forms. Причинами такого решения являются, 
во-первых, возможность минимизации приложения в системный трей при 
попытке закрытия, что крайне проблематично реализовать, например, при 
использовании WPF. Во-вторых, разрабатываемое приложение не требует 
больше никакой особенной, гибкой настройки и не предполагает сложных 
дизайнерских решений, ввиду чего нет необходимости в использовании более 
сложных технологий. 
Для машинного обучения система взаимодействует с веб-порталом 
Microsoft Azure Machine Learning Studio. Данный сервис отличается широким 
функционалом и удобным интерфейсом. Кроме того, важным фактором является 
возможность взаимодействия через API. 
Кроме того, система использует брокер очередей RabbitMQ, снижающий 
нагрузку 
на 
веб-приложение 
и 
обеспечивающий 
высокую 
степень 
отказоустойчивость системы, необходимую при взаимодействии с внешними 
системами – анализируемыми веб-сайтами и порталом машинного обучения 
ввиду вероятности их недоступности. Получение данных об открытых 
 
 
436 
приложениях происходит следующим образом: берется список процессов, 
открытых на ПК, после чего записываются названия главных окон у тех, у 
которых оно есть (именно они нас интересуют, приложения без главных окон – 
сервисы). Подобная процедура забора и отправки данных об открытых 
приложениях происходит каждые 30 секунд. Если приложения, поступившего в 
текущий забор, не было в предыдущем или было проставлено время закрытия – 
оно записывается в историю с текущим временем как временем открытия. Если 
приложения, которое было открыто в предыдущий раз, нет в поступившем 
списке – для него записывается текущее время как время закрытия. 
История открытых вкладок добывается из внутренней базы данных 
браузера. На данный момент рассматривается Google Chrome и его SQLite база 
данных (рисунок 10), которая копируется в директорию приложения, где для нее 
создается контекст и модели. Информация о вкладках и времени формируется из 
таблиц visits и urls и отправляется на сервер, где обрабатывается. Новые данные, 
если они есть, добавляются в базу. Запрос отправляется раз в 10 секунд. 
Аутентификация пользователя в десктопном приложении происходит через 
обращение к API веб-сервера. 
Статистика сотрудников отображается с помощью тайм-лайнов. На 
рисунке 2 показн пример статистики по открытым приложениям.  
Данные по работнику Котиков У.С. 
 
Рис. 2. Статистика использованных приложений 
 
 
437 
При нажатии на строку браузера открывается окно со статистикой по 
истории посещенных веб-ресурсов (рис. 3). Выводится основная статистика в 
виде основных показателей и графиков по категориям и по продуктивности. 
 
Рис. 3. Статистика активности браузера 
История посещения веб-ресурсов отображается в виде таймлайна, цветами 
помечаются разные категории (рис. 4). 
 
Рис. 4. Таймлайн открытых вкладок 
 
 
438 
Таким образом, разработанная система позволяет позволяет задавать 
“продуктивные” и “непродуктивные” тематики веб-ресурсов для конкретных 
рабочих групп и более эффективно принимать управленческие решения. 
 
 СТАТЬЯ
Аннотация
. Настоящая статья посвящена сравнительному анализу 
имеющихся 
программных 
средств 
обработки 
первичной 
печатной 
документации. В работе изучены возможности наиболее известных зарубежных 
и российских платформ, предоставляющих функционал для обработки 
первичных документов. Предложены возможные пути решения возникающих 
проблем ручной обработки документации. 
Ключевые слова: искусственный интеллект, машинное обучение, 
оптическое распознавание символов, сквозная обработка, автоматизация, RPA 
(роботизированная автоматизация процессов), первичная документация. 
Введение 
Любое малое и среднее предприятие имеет бухгалтерию, и наиболее 
эффективным путем ведения бухгалтерского учета является автоматизация 
работы бухгалтерии.  
Преимуществами, 
которые 
дает 
автоматизированная 
бухгалтерия, 
являются: 
 быстрое и безошибочное заполнение реквизитов; 
 оперативная обработка информационного массива; 
 оперативность учета; 
 представление аналитики в наглядном виде (диаграммы, графики, 
таблицы); 
 
 
440 
 формирование 
разнообразных 
регистров 
(расчетно-платежных 
ведомостей, кассовой книги, книг продаж и покупок); 
 уменьшение количества бумаг; 
 мгновенный обмен информацией между подразделениями, между 
руководителем и подчиненными; 
 исключение арифметических ошибок; 
 общение через Интернет с контролирующими государственными 
органами, банками; 
 прозрачность 
и 
подконтрольность 
финансово-хозяйственной 
деятельности; 
 быстрая реакция на изменения в законодательстве [4]. 
Несмотря 
на 
все 
преимущества 
использования 
автоматизации 
бухгалтерского учета, существуют следующие проблемы ее использования 
непосредственно в рамках предприятия: 
 определение задач автоматизации, заключающиеся в необходимости 
определять основы функционирования предприятия и ключевые бизнес-
процессы, что позволяет не выйти за рамки реальных потребностей предприятия; 
 частая смена нормативных актов, устанавливающих правила учета, 
отчетности и налогообложения не обладают гибкостью и не способны отражать 
изменения внешних условий; 
 недостаток квалифицированных кадров; 
 перенос имеющихся данных на предприятии в новую систему [5]. 
Все эти проблемы могут стать причиной увеличения затрат на внедрение 
автоматизированной системы ведения бухгалтерского учета и отсутствия 
экономического эффекта от ее внедрения. 
Постановка задачи 
Как было отмечено, одной из значимых проблем ведения любого бизнеса 
являются затраты (временные и финансовые) на обработку первичной 
документации.   
 
 
441 
Для решения данной проблемы были осуществлены поиски подходящих 
сервисов по обработке первичной документации. Изучению подверглись 
наиболее известные российская и зарубежная платформы. Тестирования 
функционала сервисов проводились только на трех видах первичной 
документации – счет-фактурах, кредитовых авизо и банковских выписках. 
Платформа «Automation Anywhere» 
Данная платформа предоставляет инструмент «IQ Bot». «IQ Bot» 
объединяет возможности RPA с технологиями искусственного интеллекта, 
такими как компьютерное зрение, обработка естественного языка, нечеткая 
логика и машинное обучение, для автоматической классификации, извлечения и 
проверки информации из документов и электронных писем. 
Работа «IQ Bot» делится на четыре этапа:  
1. Первичная 
обработка. 
Улучшение 
качества 
документа 
с 
использованием методов шумоподавления, бинаризации и устранения перекоса; 
2. Классификация. Классификация и разделение многостраничных 
документов для определения релевантных страниц; 
3. Экстракция. Использование технологий машинного обучения для 
извлечения конкретных данных из документов; 
4. Постобработка. Валидация с использованием правил и техник на 
основе искусственного интеллекта для улучшения результатов экстракции. 
Данный инструмент использует оптическое распознавание символов в 
качестве одной из базовых технологий, используемых для извлечения 
информации из документа. Также «IQ Bot» использует метод сквозной 
обработки, чтобы измерить, сколько документов может быть обработано без 
вмешательства человека [1]. 
Сервис «Entera» 
«Entera» – сервис для автоматической загрузки первичной документации в 
1С, 
который 
распознает 
сканированные 
документы, 
Excel-файлы 
или 
фотографии [2]. 
 
 
442 
Функционал 
«Entera» 
позволяет 
с 
высокой 
степенью 
точности 
распознавать нестандартные и нечеткие документы, хорошо определять их тип. 
В сервис встроены: математическая проверка таблиц, сверка с базой ЕГРЮЛ и 
проверка банковских реквизитов, что дополнительно минимизирует ошибки. 
Большим преимуществом «Entera» с точки зрения экономии времени 
является возможность групповой обработки документов. У сервиса есть функция 
распознавания спутанных страниц и их автоматическое сопоставление в рамках 
одного пакета документов [3]. 
Практическая реализация на примере работы с сервисом «Automation 
Anywhere» 
В качестве входных данных, подвергнутых обработке, выступили 
американские образцы счет-фактур, банковских выписок и кредитовых авизо, а 
также идентичная русская документация, самостоятельно составленная в 
соответствии с межгосударственным стандартом (ГОСТом). 
Далее представлены образцы российской (рис. 1) и американской (рис. 2) 
счет-фактур для наглядной демонстрации структуры документов.  
 
Рис. 1. Образец российской счет-фактуры 
 
 
443 
 
Рис. 2. Образец американской счет-фактуры 
Работа по созданию бота велась в разделе «COGNITIVE AUTOMATION. 
IQ BOT». По нажатию на кнопку «Создать новый экземпляр» открылся «пункт 
управления», в котором есть несколько разделов.  
В разделе «Основная информация» необходимыми полями для заполнения 
являются: имя создаваемого экземпляра, тип документа и основной язык 
документов. 
Выпадающий 
список 
«тип 
документа» 
предоставляет 
пользователю возможность выбрать один из пяти типов документов: банковские 
выписки, кредитовое авизо, счета-фактуры, заказы, счета за коммунальные 
услуги. 
Поля 
для 
извлечения 
этих 
типов 
документов 
генерируются 
автоматически. Такая возможность предоставляется носителям таких языков, 
как английский, немецкий, французский, испанский и итальянский. Российским 
пользователям для анализа необходимой документации требуется в указанном 
выпадающем списке выбрать пункт «Другой». Далее в поле «Основной язык 
 
 
444 
документа» выбрать русский язык и вписать наименование документа в поле 
«Пользовательский тип документа».  
Следующий раздел посвящен импорту документов. Максимально 
допустимое число загружаемых документов – 150. 
Затем идет раздел «Поля для извлечения». Если пользователем был выбран 
один из пяти предоставленных типов документов, то поля для извлечения 
сформируются автоматически. Если же в выпадающем списке «Тип документа» 
был выбран пункт «Другой», то в этом разделе пользователь будет вынужден 
самостоятельно вводить названия полей для извлечения данных из документа.  
Последний раздел, являющийся необязательным, это раздел под названием 
«Таблица/повторяющиеся поля раздела». Тут можно указать таблицу, то есть 
поля, которые представлены не в единственном экземпляре и не являющиеся 
уникальными. 
Следующим шагом является нажатие на кнопку «Создать экземпляр и 
проанализировать», после чего начинается анализ документов. Анализ 10 
документов на практике занимает 1-2 минуты. В процессе анализа учебный 
экземпляр завершает классификацию документов, которые в дальнейшем будут 
предоставлены пользователю в качестве полученного результата. Документы на 
конечном 
этапе 
анализа 
делятся 
по 
группам. 
Группы 
формируются 
автоматически, исходя из внешних и содержательных различий. Результатом 
анализа будут являться созданные экземпляры «IQ Bot» для каждого типа групп.  
На следующем этапе пользователю предоставляется результат анализа. 
Пользователь может просмотреть документ каждой сформировавшейся группы, 
самостоятельно оценить корректность извлеченных данных и в случае какой-
либо ошибки отредактировать полученные значения следующим образом: 
выбрать каждое поле, которое указано на левой панели, чтобы убедиться, что 
метка и значение, которое представлено на центральной панели, совпадают с 
документом, который находится на правой панели; провести предварительный 
просмотр сопоставления полей и меток после проверки всех полей; сохранить 
 
 
445 
изменения и перейти к другой группе. Готовый результат извлечения полей из 
документа представлен на рисунке 3. 
 
Рис. 3. Документ с извлеченными полями 
 
На завершающем этапе пользователю необходимо сохранить полученный 
экземпляр и «запустить его в производство». 
 
Практическая реализация на примере работы с сервисом «Энтера» 
В сервисе «Энтера» для анализа документов в бесплатном режиме 
возможна загрузка лишь десяти документов.  
После загрузки документов начинается их распознавание, которое 
занимает продолжительное количество времени. В нашем случае на 
распознавание десяти документов ушло около пяти минут. 
Для анализа было решено использовать российские банковские выписки. 
После их распознавания оказалось, что данная платформа не поддерживает этот 
тип документа. Об ограниченном числе возможных распознанных документов 
на сайте не упоминалось. Отсюда можно сделать вывод, что эта платформа не 
адаптирована ко всем типам документов, что является огромным минусом. 
Минусом является еще и то, что пользователю не предоставляется возможность 
 
 
446 
выбора вручную полей документа для распознавания, в отличие от сервиса 
Automation Anywhere. 
Далее было решено продолжать исследование этого российского сервиса, 
загрузив российские счет-фактуры. После загрузки счет-фактур, сервис 
распознал этот тип документа (рис. 4). 
 
Рис. 4. Распознанные документы 
 
Результаты обработки первичной документации в сервисах 
«Automation Anywhere» и «Энтера» 
1. Результаты обработки первичной российской документации в сервисе 
«Automation Anywhere»: 
При создании ботов для обработки первичной документации на основе 
счет фактур, банковских выписок и кредитовых авизо во всех трех случаях была 
сформирована одна группа документов, так как обрабатываемые образцы были 
предоставлены в едином виде. Точность извлечения варьируется от 20% до 43%, 
так как при извлечении данных из определенного количества полей корректно 
обрабатывалась лишь некоторая часть данных. В процессе корректировки 
полученных данных путем обучения экземпляра точность извлечения может 
быть достигнута 100%, что и было получено практическим путем.  
 
 
447 
Преимуществом 
в 
данном 
случае 
является 
то, 
что 
образцы 
обрабатываемых документов имеют одну структуру, т. к. сформированы они в 
соответствии с ГОСТом, что позволяет с легкостью корректно извлекать данные 
из всех полей. 
Существенным недостатком при создании экземпляра «IQ Bot» является 
тот факт, что необходимо прописывать наименования полей вручную, так как эта 
платформа не предоставляет список возможных полей документа, кроме как для 
американской документации. 
2. Результаты обработки первичной американской документации в сервисе 
«Automation Anywhere»: 
Во всех трех случаях (при обработке счет-фактур, банковских выписок и 
кредитовых авизо) были сформированы две группы документов. Точность 
извлечения из той и другой группы варьируется от 88% до 100%. В процессе 
обучения экземпляра точность достигает значения 100%. 
Достоинством является то, что при создании экземпляра выбор полей 
предоставляется автоматически, что заметно экономит время при создании 
экземпляра «IQ Bot». Также при обучении бота неповторяющиеся поля сразу же 
извлекаются безошибочно в любой группе документов, а значит, платформа уже 
хорошо обучена для этого типа документов, что является значительным плюсом. 
Существенный недостаток – при обучении бота извлекать повторяющиеся 
поля из таблицы возникли небольшие сложности, которые впоследствии были 
устранены, а именно: таблицы в документах были расположены в разных местах 
(выше или ниже положенного места).  
3. Результаты обработки первичной российской документации в сервисе 
«Энтера»: 
При работе с этой платформой были загружены 10 документов – 
российские счет-фактуры. Точность извлечения данных составила 100%.  
С американскими документами сервис не работает. 
 
 
448 
Минусами этой платформы являются: платформа не предназначена для 
бесплатного использования; на данной платформе не реализовано распознавание 
всех типов документов. 
Сравнительный 
анализ 
результатов 
обработки 
первичных 
документов 
Опираясь на результаты обработки первой документации в сервисе 
«Automation Anywhere», была составлена сводная таблица по результатам 
проведенного исследования (табл. 1). 
Таблица 1. Результаты анализа 
Критерий 
Российские образцы 
Американские образцы 
Точность извлечения 
20 – 43% 
88 – 100% 
Время извлечения 
2–3 мин 
2–3 мин 
Удобство использования 
3/5 
5/5 
 
Сравнительный анализ по результатам обработки документов на 
платформе «Entera» не приводился, т. к. данный сервис ориентирован 
исключительно на работу с российской документацией, что является 
существенным минусом в сравнении с платформой «Automation Anywhere». 
Однако в процессе изучения сервиса «Entera» было выявлено, что платформа 
обладает всем необходимым функционалом, позволяющим извлекать данные из 
полей документов с уровнем точности, равным 100%, что является значимым 
преимуществом. В свою очередь, количество типов документов, из которых 
платформа позволяет извлекать данные, слишком мало, а также пользование 
сервисом может осуществляться исключительно на платной основе. 
Заключение 
Зарубежный сервис «Automation Anywhere» хорошо адаптирован под 
нужды граждан своего государства, и функционал сервиса плохо «заточен» на 
работу с документацией, отличной от американских документов. Единственный 
 
 
449 
способ решения проблемы обработки в данном случае – стандартизация 
нынешней документации государства по типу документов США.  
Российский 
сервис 
предназначен 
для 
работы 
исключительно 
с 
ограниченным 
числом 
отечественной 
документацией. 
Существенным 
преимуществом является тот факт, что обработка документов осуществляется 
идеально, никакие самостоятельные доработки не требуются, в отличие от 
обработки документации в сервисе «Automation Anywhere». Относительно 
зарубежного сервиса функционал «Entera» очень ограничен. Эта платформа 
будет бесполезна в использовании за рубежом, а обработка может  
осуществляться только для очень ограниченного числа типов документации. 
Таким образом, были сформулированы следующие возможные пути 
решения 
проблемы 
обработки 
первичной 
документации: 
расширение 
функционала 
рассмотренного 
отечественного 
сервиса; 
стандартизация 
нынешней документации государства по типу документов США. 
В результате все предприятия могут существенно облегчить процесс 
обработки первичных документов, и тем самым сэкономить свои финансовые и 
временные ресурсы. 
 СТАТЬЯ
Аннотация
. 
В 
статье 
рассматривается 
необходимость 
адаптации 
экономики Российской Федерации к требованиям нового технологического 
уклада. Определена позиция Российской Федерации в международных 
рейтингах. Рассмотрены основные проблемы, связанные с внедрением цифровых 
технологий в промышленный сектор российской экономики. В качестве 
ключевых 
проблем 
выделены: 
несоответствие 
нормативно-правового 
регулирования 
уровню 
развития 
цифровой 
экономики, 
недоступность 
передовых 
технологий, 
недостаток 
финансирования, 
недостаток 
высококвалифицированных специалистов, проблемы безопасности и другие. 
Определены направления  решения обозначенных проблем.  
Ключевые 
слова: 
цифровая 
экономика, 
цифровые 
технологии, 
цифровизация, промышленное развитие, проблемы внедрения цифровых 
технологий.  
В настоящее время происходит непрерывное развитие информационных, в 
том числе информационно-коммуникационных технологий, которые создают 
множество различных инструментов, как для бизнеса, так и для потребителей, 
охватывая при этом практически все сферы жизни общества. Это обусловлено 
влиянием четвертой промышленной революции, которая предполагает развитие 
автоматизации и обмен данными, включая киберфизические системы, облачные 
вычисления, Интернет Вещей. Во многих странах мира, таких как Дания, 
Сингапур, Великобритания, Казахстан, США, Китай, Франция, Германия, 
Австралия, Канада, Япония были разработаны стратегии и приняты программы 
развития цифровой экономики. Россия не могла остаться в стороне от 
происходящего во всем мире процесса цифровизации экономики. В 2018 году в 
 
 
451 
соответствии с Указом Президента Российской Федерации от 7 мая 2018 года 
№ 204 «О национальных целях и стратегических задачах развития Российской 
Федерации на период до 2024 года» была принята Национальная программа 
«Цифровая экономика», включающая в себя   шесть федеральных проектов: 
«Нормативное 
регулирование 
цифровой 
среды», 
«Информационная 
инфраструктура», «Кадры для цифровой экономики», «Информационная 
безопасность», «Цифровые технологии и проекты», «Цифровое государственное 
управление». 
За три года, прошедшие с момента принятия данной Программы 
закономерно встает вопрос, насколько далеко Россия продвинулась на пути 
цифровой трансформации общества. Набор статистических показателей, 
публикуемых Федеральной службой государственной статистики, лишь 
частично характеризует развитие цифровой экономики в России. Более того, 
данный набор показателей не показывает, по каким критериям Россия опережает 
другие страны, а по каким, наоборот, отстает. Вместе с тем, существует целый 
ряд международных рейтингов, которые оценивают эффективность и степень 
развития цифровизации в странах мира. К наиболее авторитетным среди них 
относятся: Индекс развития информационных и коммуникационных технологий, 
Индекс готовности стран к сетевому обществу, Индекс развития электронного 
правительства, Индекс экономики знаний.  Наиболее удобным в пользовании 
является Индекс готовности стран к сетевому обществу, который показывает, 
насколько эффективно те или иные страны используют цифровые технологии 
для повышения конкурентоспособности, а также оценивает значимость 
факторов, влияющих на развитие цифровой экономики. Расчеты осуществляет 
международная организация «Всемирный экономический форум» совместно с 
Международной школой бизнеса «INSEAD» по 56 параметрам, которые 
отражают различные аспекты готовности страны к цифровой трансформации. 
Затем они сводятся в 12 суб-индексов и 4 интегральных суб-индекса 
(технологии, народ, управление и воздействие). Россия включена в этот рейтинг 
с 2010 года, и занимала вначале 80-е место, в дальнейшем значительно улучшив 
 
 
452 
свои позиции, и в 2016 году заняв 41-е место. Однако, по итогам 2020 года Россия 
опустилась на 48-е место, при этом уступая многим развитым и развивающимся 
странам. В таблице 1 можно увидеть значения данного показателя за 2020 год.  К 
основным причинам такого положения можно отнести: во-первых, изменение 
методики расчетов, а во-вторых, ситуацию на фоне пандемии, связанную с 
распространением коронавирусной инфекции.  
Таблица 1. Индекс готовности России к сетевому обществу в 2020 году 
Показатели 
Место в рейтинге 
Баллы 
Индекс готовности к сетевому обществу 
48 
54,23 
Технологии 
49 
46,62 
Народ 
31 
59,68 
Управление 
65 
56,98 
Воздействие 
60 
53,65 
 
Источник: составлено авторами на основе [6, с. 168]. 
Промышленность 
является 
ведущим 
сектором 
всей 
российской 
экономики, что неудивительно, ведь государство, не располагая высокоразвитой, 
наукоемкой, конкурентоспособной промышленностью, не сможет быть богатым, 
развитым и авторитетным. Недаром промышленно развитые страны составляют 
элиту мирового хозяйства, превосходя в научно – техническом, технологическом 
и военном отношении другие государства. Они постоянно продолжают 
наращивать этот разрыв, что дает им возможность господствовать на глобальных 
рынках, как средств производства, так и потребительских товаров. Доля России 
в мировом промышленном производстве в 2020 году составила 32,4%, т.е. Россия 
продолжает удерживать лидерские позиции по объему промышленного 
производства. Вместе с тем необходимость сохранения позиций на мировом 
рынке, а также расширение внутреннего рынка требует использования 
современных цифровых технологий, поскольку цифровая трансформация 
промышленности выступает неизбежным процессом адаптации к новым 
условиям цифровой экономики. Однако на пути внедрения цифровых 
 
 
453 
технологий промышленные компании сталкиваются c целым рядом проблем. 
К числу наиболее значимых можно отнести следующие: 
1. Несоответствие нормативно-правового регулирования уровню развития 
цифровой 
экономики. 
Нормативно-правовое 
регулирование 
выступает 
фундаментом развития цифровой экономики. Многие промышленные компании 
сталкиваются с трудностями внедрения цифровых технологий, так как 
возникающие новые общественные закономерности требуют надлежащего 
нормативно – законодательного оформления формирующихся цифровых 
социально-экономических отношений. Отдельные процессы использования 
цифровых технологий не структурированы на государственном уровне, что 
также сдерживает внедрение и использование цифровых технологий.  
2. Ограниченность и критичность доступа к цифровым технологиям. 
В настоящее время в России  недостаточно собственных разработок в области 
цифровизации, а также слабо развит рынок потребления высокотехнологичных 
продуктов. В основном все передовые цифровые технологии разрабатываются за 
рубежом. США и Китай являются лидерами технологического рынка, а потому 
активно используют свое монопольное положение, которое выступает в качестве 
рычага конкурентного воздействия.  
3. 
Недостаток 
финансирования, 
что 
приводит 
к 
трудностям 
с 
привлечением в проекты частных инвесторов крупного, среднего и малого 
предпринимательства. Сдерживающим фактором, в основном, выступает 
непроработанные 
условия 
внедрения 
цифровых 
технологий, 
а 
также, 
регуляторное давление со стороны контролирующих органов и сложность 
привлечения финансовых ресурсов для реализации стартапов.  
4. Недостаточная развитость цифровой инфраструктуры. Это касается, 
прежде всего, развития и доступности сети Интернет и ее качества. До сих пор 
не во всех населенных пунктах страны есть возможность выйти в сеть 
«Интернет», и далеко не все социально значимые организации имеют 
возможность подключения к данной сети. Также, не все компании имеют 
необходимое оборудование. 
 
 
454 
5. Отсутствие квалифицированных специалистов. Многие компании 
сталкиваются с нехваткой кадров, которые обладают знаниями и навыками в 
работе с цифровыми технологиями. Как, показывает практика, только около 15% 
специалистов обладают такими знаниями и навыками, остальная часть 
испытывает большие трудности в работе с цифровыми технологиями. Без 
высококвалифицированных специалистов процесс цифровой трансформации 
невозможен.  
6. Отсутствие стратегии развития. Данная проблема заключается в 
отсутствии 
взаимосвязи 
между 
переустройством 
информационной 
инфраструктуры компании и тем, какие цели она преследует. Некоторые 
компании, проводя цифровую трансформацию, не до конца понимают для чего 
они это делают, либо не знают с чего начать. 
7. Страх неудачной реализации проектов по цифровой трансформации. 
Страх является серьезным барьером для внедрения цифровых технологий. 
Руководители не всегда готовы подвергнуться такому риску, поэтому важное 
значение приобретает готовность руководителей к внедрению цифровых 
технологий. 
8. Безопасность. Данная проблема является одной из наиболее актуальных. 
Российские компании при внедрении цифровых технологий постоянно задаются 
вопросом, как обезопасить себя от атак кибермошенников, как избежать утечки 
конфиденциальной информации или вовсе не потерять ее.  
Исходя из вышеперечисленных проблем внедрения цифровых технологий 
предприятиями промышленности, рассмотрим возможные пути их преодоления.  
Первостепенной задачей на государственном уровне является создание 
соответствующей нормативно-правовой базы, которую можно представить в 
виде Федерального закона и других нормативных актов, где будут отражены все 
ключевые аспекты по цифровым технологиям, цифровизации, а также по их 
регулированию.  
Следующим шагом должна стать подготовка высококвалифицированных 
специалистов в области цифровых промышленных технологий, посредством 
 
 
455 
специализированных программ подготовки в вузах, корпоративных и 
региональных программ переподготовки специалистов и курсов повышения 
квалификации, проведение лекций по цифровой грамотности. 
Также в короткие сроки необходимо обеспечить отдаленные и 
малонаселенные районы стабильным доступом к сети «Интернет». Это поможет 
в снабжении информацией компаний и в определении дальнейших векторов 
развития цифровой экономики. 
Чтобы ускорить процесс цифровизации промышленности государству 
необходимо разработать стратегию по модернизации предприятий по 
принципам Индустрии 4.0. Важно, чтобы предприятия взаимодействовали с 
российскими поставщиками и исследовательскими центрами для разработки и 
внедрения технологий. Для реализации стратегии правительству необходимо 
большее привлечение денежных средств для НИОКР в области цифровых 
промышленных технологий. 
Первоначальная задача промышленных компаний – выделить самые 
перспективные области применения технологий Индустрии 4.0. Компаниям 
нужно наладить внутреннюю цифровую культуру, награждая за эксперименты, 
инсайты 
и 
освоение 
новых 
технологий. 
Такие 
технологии 
требуют 
финансирования 
и 
взаимодействия 
предприятий 
с 
государством, 
технологическими компаниями и исследовательскими центрами. Благодаря 
созданию 
венчурных 
фондов 
и 
бизнес-инкубаторов 
можно 
наладить 
взаимодействие 
с 
технологическими 
предприятиями 
и 
различными 
специалистами по цифровым технологиям.  
Также, компаниям необходимо позаботиться о своей безопасности. 
Основным направлением повышения уровня информационной и экономической 
безопасности является переход на отечественное программное обеспечение и 
отечественные 
технологии 
поддержания 
целостности, 
аутентификации, 
конфиденциальности, защиты информации и данных.  
В заключении следует отметить, что цифровизация промышленного 
сектора экономики в целом является неизбежным процессом. Активное 
 
 
456 
внедрение цифровых технологий имеет важное значение для экономики страны, 
создавая благоприятные условия для  развития высокотехнологичного бизнеса и 
повышения уровня его конкурентоспособности.  
 
 СТАТЬЯ
Аннотация
. Обосновываются и формируются принципы фундаменталь-
ного изменения характера взаимодействия сотрудников с информационными 
системами и в целом с цифровой инфраструктурой организации. Предлагается 
вместо 
пользовательского 
интерфейса 
создавать 
ролевые 
диалоговые 
программы, активные цифровые технологии поддержки исполнения человеком 
его профессиональных и жизненных функций. 
Ключевые слова: цифровая трансформация, цифровая инфраструктура, 
сотрудник организации, взаимодействие, принципы диалога. 
ВВЕДЕНИЕ 
В мире и в нашей стане развивается новый этап информатизации – 
цифровая трансформация [1]. «Цифровая трансформация – это фундаментальное 
переосмысление клиентского опыта, бизнес-моделей и операций. Это поиск 
новых возможностей для создания ценности, роста доходов и повышения 
эффективности работы. И для достижения этих целей компании используют 
инновационные технологии» [2]. Действительно требуется фундаментальное 
переосмысление опыта проектирования и использования средств информатики, 
созданных сравнительно давно и трудно модифицируемых как с точки зрения 
изменившихся потребностей клиентов и пользователей ИС, так и с учетом 
изменения парадигмы цифровых технологий – их «интеллектности» [3], в 
частности.     
В этом контексте автор озадачен научно-технологической проблемой, 
возникшей из личного опыта, опыта коллег и осмысливания тендений 
 
 
458 
цифровизации на базе развитого математического и алгоритмического аппарата 
сферы деятельности, называемого условно искусственный интеллект (точнее, 
Machine Learning – ML [3]). Эта проблема формулируется так: реализация 
человеко-центричного, 
эргономичного, 
интерфейса 
клиента 
цифровых 
технологий (ЦТ) в виде человекоподобного диалога, улучшенного так, что 
производительность труда системы человек-ЦТ повышается в существенно 
большей степени при сохранении здоровья и в психологическом комфорте 
специалиста. В настоящее время каждому сотруднику организации приходится 
выполнять множество поисковых, кнопочных, пересылочных и других 
непроизводительных действий во взаимодействии с компонентами цифровой 
инфраструктуры (ЦИ) организации. В результате до 10% времени расходуется 
впустую, да еще с накоплением усталости и раздражения: снижается качество 
как жизни, так и деятельности людей (!). Заметим также, что современные ИС 
созданы без ориентации на поддержку и развитие эмоционального интеллекта 
клиента (публикаций не найдено).  
Важно остановиться на понятии «пользователь». По теории ИС состоит из: 
аппаратной части (hardware), комплекса программ (software), хранилища данных 
(Data Base) с данными, персонала (интерпретирующего данные на выходе ЦТ и 
формирующего сведения для принятия решений), организационной подсистемы 
(с документацией) и сети передачи данных [4], т.е. из 6 подсистем. При этом 
подсистема 
Персонал 
состоит 
из 
людей, 
интерпретирующих 
данные, 
выделяющих из них информацию для принятия решений. Это не клиенты ИС, а 
ее компонент. Предлагается слово пользователь разделить на пользователь-
клиент и пользователь-персонал ИС. При этом такие качества, как 
эмоциональный интеллект, уровень здоровья и владение профессиональной 
логикой являются важными и в том, и другом случаях, разумеется с 
определенными оттенками и значениями их показателей. И по большому счету 
пользователь в классическом смысле превращается в обучающегося у 
образовательной ЦТ, в коллегу-координатора у ЦТ поддержки профессора, в 
коллегу-диспетчера SCADA-системы и т.д.  
 
 
459 
Ниже рассматривается диалоговый подход к реализации процесса 
взаимодействия человека и ЦИ. Точнее – диалог как обмен репликами, ведомый 
со стороны ЦИ. ЦИ – это или системная интеграция, или созданный с нуля 
комплекс ЦТ поддержки функционирования организации.  
Ввиду сложности проблемы даже на этапе ее анонсирования остановимся 
на опыте автора проведения одной учебной встречи.  
1. Текущий сценарий учебной встречи 
Термин сценарий (как произведение кино-театрального искусства) от 
алгоритма отличается упоминаниями обстановки, мимики и пр. мелочей во 
время диалога. Поэтому его отображение – непростая задача. Остановимся для 
конкретности на встрече профессора со студентами в лекционной паре. Пусть 
это будет дисциплина «Интеллектуальные информационные системы» (ИИС), 
осваиваемая на 4-м курсе очного бакалавриата с использованием инструментов 
поддержки MS Teams [5] и MODEUS [6]. 
Методологически лекции заменены беседами по вопросам, не усвоенным 
студентами в ходе самостоятельной работы c теоретическими основами ИИС и 
их математической базой по рекомендуемым в рабочей программе дисциплины 
(РПД) источникам. В табл. 1 представлен сценарий одной из «встреч» (в 
терминологии платформы MODEUS) в среде MS Teams. 
Исходным состоянием рабочего места профессора в этой задаче является: 
успешные включение компьютера (10 сек) и аутентификация (15сек). Все 
действия подвержены ориентировочному хронометражу.  
Потери времени в этом случае составили всего около 5%. Но вместе с этим у 
профессора постоянно прерывается мыследеятельность из-за переключения, 
поиска кнопок и пр. Такие действия утомляют, надоедают, портят настроение, 
снижают эффективность освоения дисциплины студентами. Обилие кнопок и 
разный интерфейс систем поддержки усложняет навигацию и напрягают 
преподавателя. Ускоряется его утомляемость. А если учесть несколько «подсис-
тем» электронной среды поддержки процесса обучения (с разными интерфейсами: 
Word, Excel, Портал vmeste.utmn.ru, Облако Yandex, MODEUS, MS Tеams), то 
 
 
460 
Таблица 1. Лекционная встреча «ИИС» («как есть») 
 
№
Действие клиента ИС 
Действие ИС 
Время 
«поиск+клик+
исполнение», 
сек 
Примечания 
Целесооб-
разность 
(+/-) 
Гипотеза 
о средстве  
ИИ 
1.
Клик « MS Teams» 
Главная форма 
2-5 
 
+ 
Слово- 
команда 
2.
Клик «Команда» 
Кнопки команд 
3 
 
- 
 
3.
Клик «Команда ИИС ПИ18» 
Исх. форма № 1 
3-5 
 
- 
 
4.
Клик «Встреча» 
Форма № 2 
0,2-1 
 
- 
 
5.
Клик «Присоединиться сейчас» 
Соединение. Форма 
№ 3 
2-3 
 
- 
 
6.
Клик «Пригласите других 
участников» 
Исчезновение кнопки
0,2 
 
- 
 
7.
Клик «Показать участников» 
Перечень имен 
0,2-2 
 
- 
 
8.
Клики «Вызов участника»  
 
1-3 
Если нужно  
- 
 
9.
Приветствие голосом и в чате 
(написание текста) 
Высвечивание  
текста всем 
6-10 
Оставить  
аудио-приветствие 
+ 
Случайный 
выбор 
аудиозаписей 
10.
Клик «Поделиться содержимым» 
Форма с содержимым 
экрана 
0,2-1 
 
+ 
11.
Клик «Рабочий стол» 
Форма 
«Рабочий стол» 
0,2-2 
Система д.б. 
интегрирована в общий 
ресурс поддержки 
обучения, автоматически 
заполнять ведомость 
присутствия и спонтанно 
контролировать, 
оценивать нерадивых 
участников 
+ 
 
12.
Клик «MODEUS» 
Форма с кнопкой 
 «Мое расписание» 
2-3 
- 
Авторегистрация 
участников 
вначале и 
мониторинг 
присутствия в 
случайные 
моменты 
13.
Клик «Ячейка расписания» 
Форма с кнопкой  
«Ведомость» 
2-3 
- 
14.
Клик «Ведомость».  
 Список студентов  
(по 5 чел. в окне) 
2 
- 
15.
Перекличка. Прокручивание 
списка 
 
100-150 
- 
16.
Клик «Уйти» 
Рабочий стол  
0,2 
 
- 
 
 
 
461 
17.
Клик «Teams» (рабочая панель) 
Канал «Общий» 
1-3 
 
- 
 
18.
Лекция-беседа (с вопросами 
студентам и от студентов; 
обсуждение текущих текстов 
проектов)  
 
 5000 
В процессе ответа 
переключение на файлы, 
презентации, страницы 
сайтов и т.п. 
+ 
Формирование 
аудиобазы. 
19.
Озвучивание, обоснование,  
расстановка количества баллов  
Переходы:   
Teams <=> MODEUS
15*число 
опрошенных ( 
10)  150 
Переходы:   
Teams <=> MODEUS 
+/- 
Речь: 
«Фамилия, 
число» 
20.
Факт окончания встречи 
 
10-30 
Случается опоздание 
+ 
Сигнал за 5 мин.
21.
Клик «MS Teams» 
Главная форма 
0,2 
 
- 
 
22.
Добрые пожелания 
 
3-10 
 
+ 
Автовыбор  
из БД 
23.
Клик «Завершение» 
 
1 
Лучше голосом 
+ 
24.
Клик «MODEUS» 
 
1 
 
- 
 
25.
Расстановка 
баллов, 
уточнение 
присутствия
 
30-100 
 
- 
 
26.
Клик «Завершение» 
 
1 
 
- 
 
 
Время встречи 
 
Примерно 5491 сек [потеряно  273 сек, 5%] 
 
 
 
 
462 
приходится констатировать пресс дополнительного отвлечения на уровне  
10-20% от энергетического потенциала профессора.  И это следует неделями и 
месяцами. Итог – неудовлетворенность. Здесь уместна далеко неполная аналогия 
ежедневной необходимости общения с занудным коллегой, например.  
 
2. Предлагаемый сценарий взаимодействия профессора с электронной 
средой поддержки обучения 
 
В табл. 2 предложен гипотетический сценарий взаимодействия профессора 
с ЦИ освоения профессий вуза. Автор постарался выйти из привычной схемы 
интерфейсов ЦТ и ИС.  
2.1. Исходное состояние системы профессор-ЦИ 
Исходное состояние рабочего стола (экрана монитора) профессора 
следующее. На экране всегда – не более 7-9 объектов деятельности и не более 3-
5 вспомогательных средств связи с ЦИ. Полный набор объектов деятельности 
обеспечивается их иерархической структурой: 2-3-х…уровневой. В процессе 
деятельности идет временное запоминание и очевидная визуализация (в одном 
из верхних угловых окошечек) 3-5 предшествующих фактов взаимодействия с 
тем, чтобы при рекурсии мыследеятельности быстро возвращаться на нужный 
объект. Далее.  
1. 
Частный гипотетический пример набора объектов и опций. Иконки 
1-го уровня иерархии: (моя) наука, (мои) учебники, (мои) студенты, (мои) 
аспиранты, обязательства, мероприятия, встречи, семья, … . Иконки 2-го уровня 
иерархии объектов деятельности – например, студенты: (дисциплины) ИИС, 
ММиА ИИС, АДвИС, ОИС, …; … . (аббревиатуры см. utmn.ru/образование …). 
Альтернативой могут быть индексы групп: ИСиТ 19-01. ИСиТ19-02, ИСиТ19-03; 
ПИ17-01, ПИ17-02; ДИПЛОМНИКИ, КУРСОВИКИ и т.д. 
2. 
«Бухгалтерия» посещаемости и учета баллов ведется функционалом 
ЦИ. Автоматически заполняется текущая ведомость посещаемости по факту 
входа в систему студента. Ведется мониторинг присутствия (в электронной 
поддержке процесса) – спонтанное автоматическое тестирование присутствия 
 
 
463 
студентов (мониторинга присутствия). Воспринимаются речевые фразы типа 
«Фамилия 
– 
баллы», 
и 
автоматически 
накопительно 
заполняется 
соответствующая ведомость успеваемости, и т.п. 
3. Профессор и студенты получили из ЦИ СМС-ки и звуковой сигнал о 
начале через 5 мин (например) встречи со студентами. 
4. При входе в компонент ЦИ типа Teams при удаленном взаимодействии 
происходит визуальная аутентификация профессора и автоматическая настройка 
именно его рабочего стола в соответствии с расписанием.  
5. На его рабочем столе: название лекции, иконки 3-х презентаций 
(предшествующей, 
текущей 
и 
последующей 
лекций-бесед), 
иконки 
соответствующих дополнительных материалов, иконка-аватар «группа N» 
(согласно расписанию). Всего 7-9 иконок на каждом уровне их иерархии.  
6. Компьютер, веб-камеры участников включены (после автотестирования 
их состояния). 
7. В БД ЦИ имеются все рабочие программы, перечни встреч, 
соответствующие презентации. 
(При очной встрече у входа в аудитории – веб-камеры идентификации 
личностей преподавателей (для открытия аудитории) и студентов (для учета 
посещаемости и формирования на рабочем экране преподавателя объектов-
групп, объектов-команд и объектов-лиц студентов, иерархически). 
2.2. Обсуждение сценария 
Основываясь на рекомендуемой Миннаукой форме проведения лекций в виде 
бесед со студентами, на 1-м занятии и в соответствующей методичке предложено 
прочитывать рекомендуемые источники по содержанию, по меньшей мере, 
предстоящей лекции-беседы. На лекционной встрече преподаватель разъясняет 
непонятые фрагменты материала и оценивает баллами адекватность вопросов, 
ответов и возражений студентов. При пассивности студентов задает наводящие 
и контрольные вопросы. В вопросах студента должно быть отражено понимание 
(восприятие) им существа фрагмента материала и готовность аргументированно 
 
 
464 
отстаивать это понимание. Здесь предлагается отталкиваться от мудрости 
древних: «Умный человека умеет задавать правильные вопросы…» [7]. За 
каждый корректный вопрос – 1-3-… балла. 
Часть материала, связанная с предшествующими дисциплинами и 
невысокой математической культурой, в частности, некоторых студентов, 
разъясняется преподавателем лекционно. Наговариваемые ответы и фрагменты 
лекций преподавателя в ЦИ оцифровываются, отображаются на общем экране и 
редактируются преподавателем. Затем эти тексты попадают в БД ЦИ. Подчеркну 
следующее. 
1. 
Формулировки 
вопросов 
и 
ответы 
сопровождаются 
математическим языком, формулами и схемами. 2. Формулы отображаются 
символами через распознавание речи. 3. Количество выставляемых баллов не 
ограничивается. По завершении семестра (до сессии) ЦИ производит 
нормировку всех баллов потока по максимальному их числу. Так что максимум 
станет = 100 баллов, а остальные числа отразят соотношение успеваемости 
студентов в потоке.  
2.3. О реализуемости сценария подобного диалога 
Для предлагаемых диалога и реализации оговоренных функций требуются 
следующие программные модули: 1) машинное зрение, 2) распознавание речи, 
3) синтез аналитических выражений, 4) динамическая база ответов на вопросы, 
5) база фрагментов презентаций для визуализации математики, алгоритмов, 
блок-схем, инициируемых распознавателем терминов и словосочетаний и т.п. 
В интернете в настоящее время есть (например, [8]) и интенсивно возникают 
программные модули Machine Learning, язык программирования Python 
(например, [9, 10]) и многочисленные конкретные примеры решения 
интеллектных задач.    
 
     
 
 
465 
Таблица 2. Сценарий предлагаемого диалога «Профессор-студенты-ЦИ» 
 
№
Профессор 
Время, 
сек 
Результат действий/ инициатива ЦИ 
Монитор профессора
Студенты 
Примечание 
1.
 
 
ИНТЕЛЛЕКТНЫЕ ИНФОРМАЦИОННЫЕ СИСТЕМЫ 
Тема, группа, инструмент (ЦТ) согласно расписанию 
 
Мелодия. Автовыбор. 
СМС у всех участников за 1 мин. до встречи 
2.
Клик «Приветствие»  
 
Фотки, имена (по группам, творческим группам), речь. 
Автозаполнение ведомости, спонтанный мониторинг присутствия. 
Клик «Здравствуйте» 
 
Ваши вопросы, уважаемые студенты?  
По дисциплине, по СРС, по проектам, по жизни. 
3.
 
 
Перечень предложений-вопросов с именами студентов. 
Пересылают ранее 
подготовленные вопросы. 
Написанный вопрос – 
лучше, чем реплика.  
Формулы отображают 
их речевой вариант. 
«ТЕКУЩАЯ», «ПРОШЛАЯ», «БУДУЩАЯ» встречи. 
БРАУЗЕР. ОБЛАЧНЫЙ ДИСК. ВСЕМ 
Запись включена! 
4.
Клик «Вопрос 1».
Озвучивание баллов за качество 
вопросов. Озвучивание ответа. 
Ведомость успеваемости с баллами. Текст и формулы 1-го ответа. 
 
Повторение по числу 
вопросов.  
 
Заполняется  
база вопросов-ответов  
 
с уровнями  
корректности. 
 
Следующий вопрос?  
5.
Пояснение. 
Клик «Вопрос 2» 
 
Текст и формулы 1-го ответа. Дополнения 
Реакция студента 
Теперь – вопросы преподавателя. 
6.
Озвучивает 1-й вопрос 
по дисциплине и 
сопутствующим компетенциям. 
Текст 1-го вопроса с формулами и рисунками.
Уважаемые студенты, 
оформите и отправьте каждый свой ответ (3 мин.). 
 
7.
Вводит  
свою формулировку ответа. 
 
Ведомость успеваемости с баллами  
пропорционально корректности ответа. 
Отправка ответов 
Уважаемый профессор, Ваш комментарий? 
Корректировка ответов и ведомости? 
8.
Лекционный фрагмент по 
ошибкам в ответах. 
 
  Текст на экране по речи преподавателя. Ведомость. 
 
 
Запомнить? 
9.
Редактирование текста, 
ведомости. 
Клик «Запомнить» 
 
Запоминание в базу. Запись   
 
 
 До конца встречи 5 мин.(сигнал-мелодия). 
Запись выключена. 
.Главный тезис встречи 
10.
Обсуждение 
 
План-содержание следующей встречи. 
Обсуждение. Замечания, 
пожелания, оргвопросы. 
 
До свидания. Всем успехов и благополучия! Смайлик. 
11.
 
Закрывается рабочий стол преподавателя. Отключаются участники. 
Архивирование записи встречи. 
 
 
 
466 
3. Концептуальные принципы диалога с цифровой инфраструтурой 
оргнизации 
 
Итак, предлагается реализация в ЦИ сочетание речевого ролевого 
диалога, визуальных образов, минимума переходов в подсистемы и кликов, 
средств эмоционального интеллекта. Адекватный современным реалиям и 
стратегии повышения качества жизнедеятельности граждан сценарий решения 
задач посредством ЦТ должен включать автоматический структурно-
семантический 
анализ 
графо-тексто-речевых 
реплик 
клиентов; 
формализацию, накопление и автоматическое исполнение части или всего 
алгоритма решения профессиональных задач. В этой связи процесс 
проектирования ИС и ЦИ требует коррекции в части включения в него 
автоформализации профессиональной деятельности [11], в частности. 
Высказанное является лишь идеей, нечеткой формулировкой научного 
направления. Здесь требуются эксперименты и обобщения в различных 
проблемных сферах. Одна из них затронута выше. 
3.1. Концептуальные принципы предлагаемого диалога 
Диалог (между людьми, человеком и техникой) – это обмен репликами 
(высказываниями, возражениями, пояснениями и т.д.). С позиций эргономики 
существуют 
претензии 
к 
массе 
современных 
информационных 
систем. “Эргономика – наука о приспособлении должностных обязанностей, 
рабочих мест, предметов и объектов труда, а также компьютерных программ 
для наиболее безопасного и эффективного труда работника, исходя из 
физических и психических особенностей человеческого организма” [12]. 
С позиции классификации областей деятельности человека и общества 
эргономика (как и информатика, электроника, энергетика и т.д.) скорее сфера 
деятельности с научным компонентом. Нам важно, что эргономика 
рассматривает взаимодействие человека с технической системой (в общем с 
рабочим местом) с 3-х основных точек зрения (т.з.): эффективность 
функционала 
системы 
человек-техника 
(результирующий 
показатель); 
 
 
467 
здоровье человека (не навреди) и его эмоциональное (благоприятное труду) 
состояние, обеспечивающее наибольшее качество исполнения функций. 
С этих т.з. большинство существующих ЦТ, ИС и реализаций ЦИ 
организации не являются эргономичными. Это – со 2-й и 3-й т.з. К сожалению, 
ни в научной литературе, ни в бизнес-журналах об этом или вообще 
не говорится, или замечания касаются лишь конкретных свойств интерфейса.  
Предлагаются следующие принципы диалога специалист-ЦИ. 
1. Объектность. На экране монитора на каждой странице 7-9 объектов. 
Далее – иерархия страниц. 
2. Сценарность. Все возможные сценарии работы разрабатываются 
заранее, запоминаются и корректируются автоматически (по возможности), 
создаются 
автоматически 
по 
необходимости. 
 
Обобщенная 
схема 
взаимодействия с компьютером: человек набирает текст (выбирает объект, 
говорит слова) – компьютер предлагает следующее действие – человек 
выбирает – компьютер выполняет следующее действие или весь сценарий …  
И так далее.    
3. Роле-ориентированность. Диалог происходит в рамках, в границах 
решаемой 
задачи 
(локально, 
в 
бизнес-процессе), 
в 
рамках 
узко-
профессиональной деятельности (бизнес-деятельности), не в рамках сферы 
деятельности (?!).  
4. Рече-графо-текстовые (+ жесты) носители диалога. Это язык диалога, 
общения с ЦТ в целом.  
5. Эмоциональная окрашенность (от эмоционального интеллекта). 
Частность. Обращает на себя внимание низкая математическая 
культура студентов. Целесообразно и возможно создать ЦТ формирования 
математических выражений с речевого их озвучивания. 
3.2. Об организации работ в этом научно-техническом направлении 
Начаты эксперименты в процессе проектного обучения студентов по 
дисциплинам: 
интеллектные 
информационные 
системы 
(ИИС), 
математические модели и алгоритмы ИИС, информационные системы и 
 
 
468 
технологии управления и др. Осуществляется экспериментирование с 
различными сценариями взаимодействия с ЦТ. Результаты этих наработок 
будут апробированы на студенческих научно-технических конференциях, 
научных семинарах, включая городской постоянно действующий семинар 
«Интеллектуальные информационные системы» (руководитель – автор).  
Необходимо создание прецедентов в других сферах жизнедеятельности 
людей, локальных диалогов и, далее, обобщение опыта и знаний в 
совокупности профессий. Стратегия: создание инструментальной платформы 
проектирования цифровых ролевых диалогов с ЦИ организации. 
 
ЗАКЛЮЧЕНИЕ 
Настоящей публикацией анонсировано новое научное направление 
«Цифровая трансформация взаимодействия человека с информационными 
системами». Наработки в нем уже появляются (например, [13]). 
 

